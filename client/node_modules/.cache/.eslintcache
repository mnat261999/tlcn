[{"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\index.js":"1","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\App.js":"2","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\store.js":"3","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\GlobalState.js":"4","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\headers\\Header.js":"5","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\Pages.js":"6","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\footers\\Footer.js":"7","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\HeaderAdmin.js":"8","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\SiderBar.js":"9","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\actions\\authAction.js":"10","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\index.js":"11","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\StatusAPI.js":"12","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\Home.js":"13","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\Login.js":"14","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\ForgotPassWord.js":"15","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\ResetPassword.js":"16","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\ActivationEmail.js":"17","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\Register.js":"18","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\profile\\Profile.js":"19","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllUser.js":"20","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Admin.js":"21","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\EditUser.js":"22","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllProduct.js":"23","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\CreateProduct.js":"24","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Categories.js":"25","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\CreatePet.js":"26","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Type.js":"27","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Status.js":"28","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\CreatePost.js":"29","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllPost.js":"30","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllPet.js":"31","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\pets\\Pets.js":"32","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\BreadCumb.js":"33","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\headers\\HeaderPage.js":"34","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\pets\\DetailPet.js":"35","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\products\\DetailProduct.js":"36","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\products\\Products.js":"37","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\cart\\Cart.js":"38","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Topic.js":"39","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\TypePage.js":"40","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\history\\OrderHistory.js":"41","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\OrderHistoryAdmin.js":"42","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Review.js":"43","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\ProductsAPI.js":"44","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\CategoriesAPI.js":"45","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\UserAPI.js":"46","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\TypesAPI.js":"47","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\PetsAPI.js":"48","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\MyPostsAPI.js":"49","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\TopicsAPI.js":"50","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\actions\\userAction.js":"51","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\NotFound\\NotFound.js":"52","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\posts\\Posts.js":"53","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\posts\\DetailPost.js":"54","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\background_header\\BackgroundHeader.js":"55","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\actions\\index.js":"56","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\validation\\Validation.js":"57","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\notification\\Notification.js":"58","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\authReducer.js":"59","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\tokenReducer.js":"60","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\userReducer.js":"61","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\productReducer.js":"62","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\cart\\PaypalButton.js":"63","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\loading\\Loading.js":"64","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\search\\SearchPet.js":"65","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\posts\\FilterPost.js":"66","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\productItem\\ProductItem.js":"67","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\petItem\\PetItem.js":"68","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\News.js":"69","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\Statistical.js":"70","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\Case.js":"71","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\AboutUs.js":"72","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\SliderImage.js":"73"},{"size":336,"mtime":1628945582034,"results":"74","hashOfConfig":"75"},{"size":2287,"mtime":1629215328969,"results":"76","hashOfConfig":"75"},{"size":586,"mtime":1628945582030,"results":"77","hashOfConfig":"75"},{"size":1114,"mtime":1629215285655,"results":"78","hashOfConfig":"75"},{"size":7552,"mtime":1628945581675,"results":"79","hashOfConfig":"75"},{"size":5859,"mtime":1628945581698,"results":"80","hashOfConfig":"75"},{"size":4528,"mtime":1628945581667,"results":"81","hashOfConfig":"75"},{"size":7659,"mtime":1628945581761,"results":"82","hashOfConfig":"75"},{"size":3586,"mtime":1628945581772,"results":"83","hashOfConfig":"75"},{"size":535,"mtime":1628945582006,"results":"84","hashOfConfig":"75"},{"size":276,"mtime":1628945582020,"results":"85","hashOfConfig":"75"},{"size":585,"mtime":1628945581623,"results":"86","hashOfConfig":"75"},{"size":533,"mtime":1628945581851,"results":"87","hashOfConfig":"75"},{"size":6252,"mtime":1629291917874,"results":"88","hashOfConfig":"75"},{"size":2067,"mtime":1628945581817,"results":"89","hashOfConfig":"75"},{"size":2494,"mtime":1628945581825,"results":"90","hashOfConfig":"75"},{"size":1099,"mtime":1629291685925,"results":"91","hashOfConfig":"75"},{"size":3909,"mtime":1629291534192,"results":"92","hashOfConfig":"75"},{"size":6242,"mtime":1628945581963,"results":"93","hashOfConfig":"75"},{"size":4133,"mtime":1628945581739,"results":"94","hashOfConfig":"75"},{"size":160,"mtime":1628945581710,"results":"95","hashOfConfig":"75"},{"size":3126,"mtime":1628945581757,"results":"96","hashOfConfig":"75"},{"size":4709,"mtime":1628945581737,"results":"97","hashOfConfig":"75"},{"size":11951,"mtime":1628945581752,"results":"98","hashOfConfig":"75"},{"size":22449,"mtime":1628945581743,"results":"99","hashOfConfig":"75"},{"size":9873,"mtime":1628945581746,"results":"100","hashOfConfig":"75"},{"size":4775,"mtime":1628945581793,"results":"101","hashOfConfig":"75"},{"size":4830,"mtime":1628945581788,"results":"102","hashOfConfig":"75"},{"size":17771,"mtime":1628945581749,"results":"103","hashOfConfig":"75"},{"size":2969,"mtime":1628945581733,"results":"104","hashOfConfig":"75"},{"size":5133,"mtime":1628945581713,"results":"105","hashOfConfig":"75"},{"size":1858,"mtime":1628945581941,"results":"106","hashOfConfig":"75"},{"size":2656,"mtime":1628945581689,"results":"107","hashOfConfig":"75"},{"size":7620,"mtime":1628945581680,"results":"108","hashOfConfig":"75"},{"size":3369,"mtime":1628945581939,"results":"109","hashOfConfig":"75"},{"size":14465,"mtime":1628953070360,"results":"110","hashOfConfig":"75"},{"size":877,"mtime":1628945581957,"results":"111","hashOfConfig":"75"},{"size":18438,"mtime":1629296388711,"results":"112","hashOfConfig":"75"},{"size":4724,"mtime":1628945581790,"results":"113","hashOfConfig":"75"},{"size":4790,"mtime":1628945581796,"results":"114","hashOfConfig":"75"},{"size":16287,"mtime":1628945581840,"results":"115","hashOfConfig":"75"},{"size":17537,"mtime":1628945581764,"results":"116","hashOfConfig":"75"},{"size":4907,"mtime":1628945581768,"results":"117","hashOfConfig":"75"},{"size":2400,"mtime":1628952968473,"results":"118","hashOfConfig":"75"},{"size":2039,"mtime":1628945581584,"results":"119","hashOfConfig":"75"},{"size":4624,"mtime":1628951180076,"results":"120","hashOfConfig":"75"},{"size":586,"mtime":1628945581641,"results":"121","hashOfConfig":"75"},{"size":2801,"mtime":1628945581591,"results":"122","hashOfConfig":"75"},{"size":3097,"mtime":1629214424966,"results":"123","hashOfConfig":"75"},{"size":572,"mtime":1628945581635,"results":"124","hashOfConfig":"75"},{"size":367,"mtime":1628945582014,"results":"125","hashOfConfig":"75"},{"size":344,"mtime":1628945581970,"results":"126","hashOfConfig":"75"},{"size":6001,"mtime":1629214583921,"results":"127","hashOfConfig":"75"},{"size":2524,"mtime":1628945581946,"results":"128","hashOfConfig":"75"},{"size":262,"mtime":1628945581973,"results":"129","hashOfConfig":"75"},{"size":205,"mtime":1628945582008,"results":"130","hashOfConfig":"75"},{"size":600,"mtime":1628945582001,"results":"131","hashOfConfig":"75"},{"size":391,"mtime":1628945581981,"results":"132","hashOfConfig":"75"},{"size":605,"mtime":1628945582017,"results":"133","hashOfConfig":"75"},{"size":285,"mtime":1628945582026,"results":"134","hashOfConfig":"75"},{"size":288,"mtime":1628945582028,"results":"135","hashOfConfig":"75"},{"size":296,"mtime":1628945582024,"results":"136","hashOfConfig":"75"},{"size":3009,"mtime":1629302286173,"results":"137","hashOfConfig":"75"},{"size":174,"mtime":1628945581978,"results":"138","hashOfConfig":"75"},{"size":6367,"mtime":1628945581996,"results":"139","hashOfConfig":"75"},{"size":3081,"mtime":1629215100373,"results":"140","hashOfConfig":"75"},{"size":5203,"mtime":1628945581991,"results":"141","hashOfConfig":"75"},{"size":1811,"mtime":1628945581985,"results":"142","hashOfConfig":"75"},{"size":5249,"mtime":1628945581853,"results":"143","hashOfConfig":"75"},{"size":5489,"mtime":1628945581858,"results":"144","hashOfConfig":"75"},{"size":3490,"mtime":1628945581848,"results":"145","hashOfConfig":"75"},{"size":1789,"mtime":1628945581846,"results":"146","hashOfConfig":"75"},{"size":1610,"mtime":1628945581856,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},"1f4s4e",{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"151"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"151"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"151"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"151"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"151"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"151"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"151"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"151"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"151"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"151"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"151"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"151"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"151"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"151"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"151"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"151"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"151"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"151"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"151"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"151"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"151"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"151"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"151"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"151"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"151"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"151"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"151"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"151"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"151"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"151"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"151"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"151"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"151"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"151"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"151"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"151"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"151"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"151"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"151"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"151"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"151"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"151"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\index.js",["338"],"import React, {useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport DataProvider from './components/redux/store'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <DataProvider>\r\n    <App />\r\n  </DataProvider>\r\n</React.StrictMode>,\r\n document.getElementById('root')\r\n);\r\n\r\n\r\n",["339","340"],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\App.js",["341"],"\r\nimport React, {useEffect} from 'react';\r\nimport{BrowserRouter as Router} from 'react-router-dom'\r\nimport {DataProvider} from './GlobalState'\r\nimport HeaderAdmin from './components/mainpages/admin/HeaderAdmin'\r\nimport SiderBar from './components/mainpages/admin/SiderBar'\r\nimport MainPages from './components/mainpages/Pages'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport axios from 'axios';\r\nimport Footer from './components/footers/Footer'\r\nimport {dispatchLogin, fetchUser, dispatchGetUser} from './components/redux/actions/authAction'\r\nimport { Layout} from 'antd';\r\nconst { Content} = Layout;\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const token = useSelector(state => state.token)\r\n  const auth = useSelector(state => state.auth)\r\n  const {user, isAdmin} = auth\r\n\r\n\r\n  useEffect(() => {\r\n    const firstLogin = localStorage.getItem('firstLogin')\r\n    if(firstLogin){\r\n      const getToken = async () => {\r\n        const res = await axios.post('/user/refresh_token', null)\r\n        //console.log('get token')\r\n        //console.log(res)\r\n        dispatch({type: 'GET_TOKEN', payload: res.data.access_token})\r\n      }\r\n      getToken()\r\n    }\r\n  },[auth.isLogged,dispatch])\r\n\r\n  useEffect(() => {\r\n    if(token){\r\n      const getUser = () => {\r\n        dispatch(dispatchLogin())\r\n\r\n        return fetchUser(token).then(res => {\r\n          dispatch(dispatchGetUser(res))\r\n        })\r\n      }\r\n      getUser()\r\n    }\r\n  },[token, dispatch])\r\n\r\n  const headerUser = () =>{\r\n    return <>\r\n      <MainPages />\r\n      <Footer/>\r\n    </>\r\n  }\r\n\r\n  const headerAdmin = () =>{\r\n    return <>\r\n    <Layout style={{padding: 0 ,minHeight: '100vh' }}>\r\n      <SiderBar/>\r\n      <Layout className=\"site-layout\" style={{padding: 0, minHeight: '100vh' }}>\r\n        <HeaderAdmin/>\r\n        <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\r\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 500 }}>\r\n            <MainPages />\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n    </>\r\n  }\r\n\r\n  return (\r\n    <DataProvider>\r\n      <Router>\r\n      <div className=\"App\">\r\n        {isAdmin?headerAdmin():headerUser()}\r\n      </div>\r\n      </Router>\r\n    </DataProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\store.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\GlobalState.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\headers\\Header.js",["342"],"\r\nimport React, {useEffect,useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Menu, Dropdown,Avatar,Badge } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { LoginOutlined} from '@ant-design/icons';\r\nimport {GlobalState} from '../../GlobalState';\r\nimport {useSelector} from 'react-redux'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Header(){\r\n\r\n   const state = useContext(GlobalState)\r\n    const auth = useSelector(state => state.auth)\r\n    const {user, isLogged} = auth\r\n    const [cart] = state.userAPI.cart\r\n\r\n    const home = async() => {\r\n      window.location.href = '/';\r\n    }\r\n    const adoption = async() => {\r\n        window.location.href = '/adoption';\r\n    }\r\n    const product = async() => {\r\n        window.location.href = '/product';\r\n    }\r\n    const news = async() => {\r\n        window.location.href = '/news';\r\n    }\r\n\r\n\r\n    const handleLogout = async () => {\r\n      try {\r\n          await axios.get('/user/logout')\r\n          localStorage.removeItem('firstLogin')\r\n          localStorage.removeItem('token')\r\n          window.location.href = \"/\";\r\n      } catch (err) {\r\n          window.location.href = \"/\";\r\n      }\r\n  }\r\n\r\n  const handleProfile = async () => {\r\n    try {\r\n        window.location.href = \"/profile\";\r\n    } catch (err) {\r\n        window.location.href = \"/profile\";\r\n    }\r\n}\r\n\r\nconst handleHistory = async () => {\r\n  try {\r\n      window.location.href = \"/history\";\r\n  } catch (err) {\r\n      window.location.href = \"/history\";\r\n  }\r\n}\r\n    const IconFont = createFromIconfontCN({\r\n      scriptUrl: [\r\n        '//at.alicdn.com/t/font_2520839_3xfc6cekias.js', \r\n        '//at.alicdn.com/t/font_2520839_dpus1tqve4p.js',\r\n        '//at.alicdn.com/t/font_2520839_9pnrampty8l.js'\r\n      ],\r\n    });\r\n\r\n\r\n   useEffect(() => {\r\n    const nav = document.querySelector(\".nav-menu\");\r\n    const navigation = document.querySelector(\".navigation\");\r\n    const header = document.querySelector(\".header\");\r\n    const nav_link = document.querySelectorAll(\".scroll-link\");\r\n    const openBtn = document.querySelector(\".hamburger\");\r\n    const closeBtn = document.querySelector(\".close\");\r\n    const navLeft = nav.getBoundingClientRect().left;\r\n    const show = document.querySelector(\".show\");\r\n\r\n   if(show)\r\n   {\r\n    navigation.classList.remove(\"show\");\r\n    nav.classList.remove(\"show\");\r\n    document.body.classList.remove(\"show\");\r\n   }\r\n\r\n    openBtn.addEventListener(\"click\", () => {\r\n      if (navLeft < 0) {\r\n        for(var x=0; x < nav_link.length; x++)\r\n            {\r\n                nav_link[x].classList.add(\"nav-link-response\");\r\n                nav_link[x].classList.remove(\"nav_link\");\r\n            }\r\n        header.classList.remove(\"header\");\r\n        navigation.classList.add(\"show\");\r\n        nav.classList.add(\"show\");\r\n        document.body.classList.add(\"show\");\r\n      }\r\n    });\r\n\r\n    closeBtn.addEventListener(\"click\", () => {\r\n      if (navLeft < 0) {\r\n        for(var x=0; x < nav_link.length; x++)\r\n        {\r\n            nav_link[x].classList.remove(\"nav-link-response\");\r\n            nav_link[x].classList.add(\"nav_link\");\r\n        }\r\n        header.classList.add(\"header\");\r\n        navigation.classList.remove(\"show\");\r\n        nav.classList.remove(\"show\");\r\n        document.body.classList.remove(\"show\");\r\n      }\r\n  });\r\n\r\n  const navBar = document.querySelector(\".navigation\");\r\n  const navHeight = navBar.getBoundingClientRect().height;\r\n  window.addEventListener(\"scroll\", () => {\r\n    const scrollHeight = window.pageYOffset;\r\n    if (scrollHeight > navHeight) {\r\n      navBar.classList.add(\"fix-nav\");\r\n      for(var x=0; x < nav_link.length; x++)\r\n      {\r\n          nav_link[x].classList.add(\"nav-link-response\");\r\n          nav_link[x].classList.remove(\"nav_link\");\r\n      } \r\n\r\n    } else {\r\n      navBar.classList.remove(\"fix-nav\");\r\n      for(var x=0; x < nav_link.length; x++)\r\n      {\r\n          nav_link[x].classList.remove(\"nav-link-response\");\r\n          nav_link[x].classList.add(\"nav_link\");\r\n      }\r\n    }\r\n  });\r\n\r\n  });\r\n  \r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item icon={<LoginOutlined />}>\r\n          <Link to=\"/login\">\r\n            Đăng nhập\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item icon={<IconFont type=\"iconregister\" style={{ fontSize: '16px'}}/>}>\r\n          <Link to='/register'>\r\n            Đăng ký\r\n          </Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n\r\n    const menu1 =(\r\n      <Menu>\r\n        <Menu.Item>\r\n          <Link target=\"_blank\" class='user-name' onClick={handleProfile}>\r\n            <Avatar size={20} src={user.avatar} />\r\n            <span>{user.name}</span>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item icon={<IconFont type=\"iconhistory\" style={{ fontSize: '20px'}}/>}>\r\n          <Link to='/' onClick={handleHistory}>\r\n            Lịch sử mua hàng\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item icon={<IconFont type=\"iconlogout\" style={{ fontSize: '20px'}}/>}>\r\n          <Link to='/' onClick={handleLogout}>\r\n            Đăng xuất\r\n          </Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    const normal = () =>{\r\n      return <>\r\n            <Link>\r\n                <Dropdown  overlay={menu} placement=\"bottomLeft\" arrow>\r\n                <Avatar size={42} icon={<IconFont type=\"iconuser\" />} />\r\n              </Dropdown>\r\n            </Link>\r\n      </>\r\n    }\r\n\r\n    const userLink =() =>{\r\n      return <>\r\n          <Link>\r\n            <Dropdown overlay={menu1} placement=\"bottomLeft\" arrow>\r\n            <Avatar size={42} src={user.avatar} />\r\n          </Dropdown>\r\n          </Link>\r\n      </>\r\n\r\n    }\r\n    return (\r\n  <>\r\n\r\n    <header id=\"header\" className=\"header\">\r\n      <nav className=\"navigation\">\r\n        <div className=\"nav-center container\">\r\n          <Link to='/' className=\"logo\">\r\n            <img src=\"https://res.cloudinary.com/lucy2619288/image/upload/v1618744835/logo/logo_primary_iamyl6.png\" alt=\"\" />\r\n          </Link>\r\n          <div className=\"nav-menu\">\r\n            <div className=\"nav-top\">\r\n              <div className=\"logo\">\r\n                <Link>\r\n                  <img src=\"https://res.cloudinary.com/lucy2619288/image/upload/v1618746342/logo/logo_edulxq.png\" alt=\"\" />\r\n                </Link>\r\n              </div>\r\n              <div className=\"close\">\r\n                <i className=\"fas fa-times\" />\r\n              </div>\r\n            </div>\r\n            <ul className=\"nav-list\">\r\n                <Link onClick={home} class=\"nav-item nav-link scroll-link\">Trang chủ</Link>\r\n                <Link onClick={adoption} class=\"nav-item nav-link scroll-link\">Nhận nuôi</Link>\r\n                <Link onClick={product} class=\"nav-item nav-link scroll-link\">Sản phẩm</Link>\r\n                <Link onClick={news} class=\"nav-item nav-link scroll-link\">Tin tức</Link>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"nav-icons\">\r\n            {\r\n               isLogged ? userLink() :  normal()\r\n            }\r\n            <Link to=\"/cart\">\r\n                <Badge count={cart.length}>\r\n                  <Avatar  size={42} icon={<IconFont type=\"iconcart2\"/>} />\r\n              </Badge>\r\n            </Link>\r\n        </div>\r\n\r\n\r\n          <div  className=\"hamburger\">\r\n            <i className=\"fas fa-bars\" />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  </>\r\n    );\r\n}\r\nexport default Header;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\Pages.js",["343","344","345","346","347","348"],"import React,{useEffect,useContext} from 'react';\r\nimport {Switch, Route,useLocation } from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport Home from './homepage/Home'\r\nimport Login from './auth/Login'\r\nimport Register from './auth/Register'\r\nimport ActivationEmail from './auth/ActivationEmail'\r\nimport ForgotPass from './auth/ForgotPassWord'\r\nimport NotFound from './utils/NotFound/NotFound'\r\nimport ResetPass from './auth/ResetPassword'\r\nimport Profile from './profile/Profile'\r\nimport Admin from './admin/Admin'\r\nimport AllUser from './admin/AllUser'\r\nimport EditUser from './admin/EditUser'\r\nimport AllProduct  from './admin/AllProduct'\r\nimport Categories  from './admin/Categories'\r\nimport CreateProduct from './admin/CreateProduct'\r\nimport CreatePet from './admin/CreatePet'\r\nimport Type from './admin/Type'\r\nimport Status from './admin/Status'\r\nimport CreatePost from './admin/CreatePost'\r\nimport AllPet  from './admin/AllPet'\r\nimport AllPost  from './admin/AllPost'\r\nimport Pets from './pets/Pets'\r\nimport Posts from './posts/Posts'\r\nimport Header from '../headers/Header'\r\nimport HeaderPage from '../headers/HeaderPage'\r\nimport BreadCrumb from './BreadCumb'\r\nimport BackgroundHeader from './utils/background_header/BackgroundHeader'\r\nimport DetailPet from './pets/DetailPet'\r\nimport Topic from './admin/Topic'\r\nimport DetailPost from './posts/DetailPost'\r\nimport Products from './products/Products'\r\nimport DetailProduct from './products/DetailProduct'\r\nimport Cart from './cart/Cart'\r\nimport OrderHistory from './history/OrderHistory'\r\nimport OrderHistoryAdmin from './admin/OrderHistoryAdmin'\r\n\r\n\r\nimport TypePage from './admin/TypePage'\r\nimport Review from './admin/Review'\r\n\r\nimport {GlobalState} from '../../GlobalState'\r\n\r\n\r\n\r\n\r\nfunction Pages() {\r\n    const auth = useSelector(state => state.auth)\r\n    const state = useContext(GlobalState)\r\n    const {isLogged, isAdmin} = auth\r\n    const [location, setLocation] = state.userAPI.location\r\n    const [filter, setFilter] = state.myPostsAPI.filter\r\n\r\n    const locate = useLocation();\r\n     useEffect(()=>{\r\n        setLocation(locate.pathname)\r\n        if(location !== \"/news\")\r\n        {\r\n            setFilter(\"\")\r\n        }\r\n        console.log({location});\r\n        console.log(locate.pathname);\r\n    })\r\n\r\n \r\n    return (\r\n        <>\r\n        {\r\n            isAdmin||locate.pathname==='/'&&<Header/>||<HeaderPage/>\r\n        }\r\n        {\r\n            isAdmin||locate.pathname!=='/'&&<BreadCrumb/>\r\n        }\r\n        \r\n        <Switch>\r\n            {\r\n                isAdmin?<Route path=\"/\" exact component={Admin} />:<Route path=\"/\" exact component={Home} />\r\n            }\r\n            <Route path=\"/login\" exact component={isLogged ? NotFound : Login} />\r\n            <Route path=\"/register\" exact component={isLogged ? NotFound : Register} />\r\n            <Route path=\"/user/activate/:activation_token\" exact component={ActivationEmail} />\r\n            <Route path=\"/forgot_password\" exact component={isLogged ? NotFound:ForgotPass} />\r\n            <Route path=\"/user/reset/:token\" exact component={isLogged ? NotFound : ResetPass} />\r\n            <Route path=\"/profile\" component={isLogged ? Profile : NotFound} exact />\r\n            <Route path=\"/adoption\" exact component={Pets} />\r\n            <Route path=\"/adoption/:id\" exact component={DetailPet} />\r\n            <Route path=\"/news\" exact component={Posts} />\r\n            <Route path=\"/news/:id\" exact component={DetailPost} />\r\n            <Route path=\"/product\" exact component={Products} />\r\n            <Route path=\"/product/:id\" exact component={DetailProduct} />\r\n            <Route path=\"/cart\" exact component={Cart} />\r\n            <Route path=\"/history\" exact component={isLogged ? OrderHistory : NotFound} />\r\n\r\n            {\r\n                isAdmin?<Route path=\"/admin/alluser\" exact component={AllUser} />:<Route path=\"/admin/alluser\" exact component={NotFound} />\r\n            }\r\n            {/* <Route path=\"/admin/alluser\" component={isAdmin ? AllUser : NotFound} exact /> */}\r\n            <Route path=\"/admin/edit_user/:id\" component={isAdmin ? EditUser : NotFound} exact />\r\n\r\n            <Route path=\"/admin/all_product\" component={isAdmin ? AllProduct : NotFound} exact />\r\n            <Route path=\"/admin/category\" exact component={isAdmin ? Categories : NotFound} />\r\n            <Route path=\"/admin/create_product\" exact component={isAdmin ? CreateProduct : NotFound} />\r\n            <Route path=\"/admin/edit_product/:id\" exact component={isAdmin ? CreateProduct : NotFound} />\r\n            <Route path=\"/admin/typepage\" exact component={isAdmin ? TypePage : NotFound} />\r\n\r\n            <Route path=\"/admin/create_pet\" exact component={isAdmin ? CreatePet : NotFound} />\r\n            <Route path=\"/admin/edit_pet/:id\" exact component={isAdmin ? CreatePet : NotFound} />\r\n            <Route path=\"/admin/all_pet\" component={isAdmin ? AllPet : NotFound} exact />\r\n            <Route path=\"/admin/type\" exact component={isAdmin ? Type : NotFound} />\r\n            <Route path=\"/admin/status\" exact component={isAdmin ?  Status : NotFound} />\r\n            \r\n            <Route path=\"/admin/create_post\" exact component={isAdmin ? CreatePost : NotFound} />\r\n            <Route path=\"/admin/all_post\" component={isAdmin ? AllPost : NotFound} exact />\r\n            <Route path=\"/admin/edit_post/:id\" exact component={isAdmin ? CreatePost : NotFound} />\r\n            <Route path=\"/admin/topic\" exact component={isAdmin ?  Topic : NotFound} />\r\n            <Route path=\"/admin/profile\" component={isAdmin ? '' : NotFound} exact />\r\n            <Route path=\"/admin/history\" exact component={isAdmin ?  OrderHistoryAdmin : NotFound} />\r\n            <Route path=\"/admin/review\" exact component={isAdmin ?  Review : NotFound} />\r\n        </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pages;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\footers\\Footer.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\HeaderAdmin.js",["349","350","351","352","353","354","355","356","357"],"import React, {useContext,useState,useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport { Layout, Row, Col, Icon, Badge, Menu, Dropdown, Avatar, Popover } from 'antd'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport {GlobalState} from '../../../GlobalState';\r\nimport { Drawer, Button } from 'antd';\r\nimport {isPass, isMatch} from '../utils/validation/Validation'\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport {fetchAllUsers, dispatchGetAllUsers} from '../../redux/actions/userAction'\r\nconst { Header } = Layout;\r\n\r\nconst initialState = {\r\n  name: '',\r\n  password: '',\r\n  cf_password: '',\r\n  err: '',\r\n  success: ''\r\n}\r\n\r\nfunction HeaderAdmin() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const auth = useSelector(state => state.auth)\r\n    const {user, isAdmin} = auth\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const token = useSelector(state => state.token)\r\n\r\n    const [data, setData] = useState(initialState)\r\n    const {name, password, cf_password, err, success} = data\r\n\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(isAdmin){\r\n            fetchAllUsers(token).then(res =>{\r\n                dispatch(dispatchGetAllUsers(res))\r\n            })\r\n        }\r\n    },[token, isAdmin, dispatch, callback])\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setData({...data, [name]:value, err:'', success: ''})\r\n    }\r\n\r\n    const changeAvatar = async(e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const file = e.target.files[0]\r\n\r\n            if(!file) return setData({...data, err: \"No files were uploaded.\" , success: ''})\r\n\r\n            if(file.size > 1024 * 1024)\r\n                return setData({...data, err: \"Size too large.\" , success: ''})\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n                return setData({...data, err: \"File format is incorrect.\" , success: ''})\r\n\r\n            let formData =  new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_avatar', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n            \r\n\r\n            setLoading(false)\r\n            setAvatar(res.data.url)\r\n            \r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n\r\n    const updateInfor = () => {\r\n        try {\r\n            axios.patch('/user/update', {\r\n                name: name ? name : user.name,\r\n                avatar: avatar ? avatar : user.avatar\r\n            },{\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            setData({...data, err: '' , success: \"Updated Success!\"})\r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n\r\n    const updatePassword = () => {\r\n        if(!isPass(password))\r\n            return setData({...data, err: \"Password must be at least 8 characters, one letter and one number.\", success: ''})\r\n\r\n        if(!isMatch(password, cf_password))\r\n            return setData({...data, err: \"Password did not match.\", success: ''})\r\n\r\n        try {\r\n            axios.post('/user/reset', {password},{\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            setData({...data, err: '' , success: \"Updated Success!\"})\r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if(name || avatar) updateInfor()\r\n        if(password) updatePassword()\r\n        return <>\r\n        {err && showErrMsg('error',err)}\r\n        {success && showSuccessMsg('success',success)}\r\n        </> \r\n    }\r\n\r\n    const showDrawer = () => {\r\n      setVisible(true);\r\n    };\r\n  \r\n    const onClose = () => {\r\n      setVisible(false);\r\n    };\r\n    \r\n\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            localStorage.removeItem('token')\r\n            window.location.href = \"/\";\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    const IconFont = createFromIconfontCN({\r\n      scriptUrl: [\r\n        '//at.alicdn.com/t/font_2520839_3xfc6cekias.js', \r\n        '//at.alicdn.com/t/font_2520839_dpus1tqve4p.js',\r\n      ],\r\n    });\r\n\r\n    return (\r\n    <Header  style={{ background: '#fff', padding: 0 }}>\r\n\r\n        <Row style={{ paddingRight: 42}} type=\"flex\" justify=\"end\" align=\"middle\">\r\n          <Col>\r\n              <Link onClick={showDrawer}>\r\n                <Avatar size={42} src={user.avatar} />\r\n              </Link>\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n        title=\"My Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={onClose}\r\n        visible={visible}\r\n        width={380}\r\n      >\r\n       <div className=\"profile_page\">\r\n                    <div className=\"col-left\">\r\n                        <div className=\"avatar\">\r\n                            <img src={avatar ? avatar : user.avatar} alt=\"\"/>\r\n                            <span>\r\n                                <i className=\"fas fa-camera\"></i>\r\n                                <p>Change</p>\r\n                                <input type=\"file\" name=\"file\" id=\"file_up\" onChange={changeAvatar} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"name\" id=\"name\" defaultValue={user.name}\r\n                            placeholder=\"Your name\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\" name=\"email\" id=\"email\" defaultValue={user.email}\r\n                            placeholder=\"Your email address\" disabled />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" name=\"password\" id=\"password\"\r\n                            placeholder=\"New Password\" value={password} onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" name=\"cf_password\" id=\"cf_password\"\r\n                            placeholder=\"Confirm New Password\" value={cf_password} onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className='note'>\r\n                            <em style={{color: \"crimson\"}}> \r\n                            * If you update your password here, you will not be able \r\n                            to login quickly using google and facebook.\r\n                            </em>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-secondary\"  onClick={handleUpdate}>Update</button>\r\n                        <button type=\"submit\" className=\"mt-10 btn btn-secondary\"  onClick={handleLogout}>Sign out</button>\r\n                    </div>\r\n                 </div>\r\n      </Drawer>\r\n    </Header>\r\n    );\r\n}\r\n\r\nexport default HeaderAdmin;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\SiderBar.js",["358","359"],"import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nconst {Sider} = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction SiderBar() {\r\n  const IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n      '//at.alicdn.com/t/font_2520839_3xfc6cekias.js', \r\n      '//at.alicdn.com/t/font_2520839_dpus1tqve4p.js',\r\n      '//at.alicdn.com/t/font_2520839_5ng5lkrrovm.js',\r\n      '//at.alicdn.com/t/font_2520839_zdkkbqi5vp.js',\r\n      '//at.alicdn.com/t/font_2520839_ivqawpasde8.js',\r\n      '//at.alicdn.com/t/font_2520839_wwwjhyp7f.js',\r\n      '//at.alicdn.com/t/font_2520839_ebx4e8n5w3.js',\r\n      '//at.alicdn.com/t/font_2520839_878ovwu9sc8.js',\r\n      '//at.alicdn.com/t/font_2520839_eqz5g0o1jq9.js'\r\n    ],\r\n  });\r\n    return (\r\n<Sider\r\n      breakpoint=\"lg\"\r\n      collapsedWidth=\"0\"\r\n      onBreakpoint={broken => {\r\n        console.log(broken);\r\n      }}\r\n      onCollapse={(collapsed, type) => {\r\n        console.log(collapsed, type);\r\n      }}\r\n    >\r\n      <div className=\"logo-sider\" />\r\n      <Menu theme=\"dark\" mode=\"inline\">\r\n        <Menu.Item icon={<UserOutlined />}>\r\n          <Link to='/admin/alluser'>All User</Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu key=\"sub1\" icon={<IconFont type=\"iconproduct\" style={{ fontSize: '20px'}}/>} title=\"Product\">\r\n            <Menu.Item key=\"1\">\r\n              <Link to ='/admin/all_product'>All Products</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <Link to='/admin/create_product'>Create Product</Link>\r\n            </Menu.Item>\r\n        </SubMenu>\r\n\r\n        <SubMenu key=\"sub2\" icon={<IconFont type=\"iconcategory\" style={{ fontSize: '20px'}}/>} title=\"Category\">\r\n          <Menu.Item key=\"3\">\r\n            <Link to='/admin/category'>Categories</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\">\r\n            <Link to='/admin/typepage'>Type Page</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n\r\n        <SubMenu key=\"sub3\" icon={<IconFont type=\"iconpet_icon\" style={{ fontSize: '20px'}}/>} title=\"Case\">\r\n            <Menu.Item key=\"5\">\r\n              <Link to ='/admin/all_pet'>All Pets</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"6\">\r\n              <Link to='/admin/create_pet'>Create Pet</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"7\">\r\n              <Link to='/admin/type'>Types</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"8\">\r\n            <Link to='/admin/status'>Status</Link>\r\n            </Menu.Item>\r\n        </SubMenu>\r\n\r\n\r\n\r\n        <SubMenu key=\"sub4\" icon={<IconFont type=\"iconnew\" style={{ fontSize: '20px'}}/>} title=\"Post\">\r\n            <Menu.Item key=\"9\">\r\n              <Link to ='/admin/all_post'>All Post</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"10\">\r\n              <Link to='/admin/create_post'>Create Post</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"11\">\r\n              <Link to='/admin/topic'>Create Topics</Link>\r\n            </Menu.Item>\r\n        </SubMenu>\r\n \r\n        <Menu.Item icon={<IconFont type=\"iconhistory1\" style={{ fontSize: '20px'}}/>}>\r\n          <Link to='/admin/history'>All History</Link>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item icon={<IconFont type=\"iconstar\" style={{ fontSize: '22px'}}/>}>\r\n          <Link to='/admin/review'>Reviews</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      \r\n    </Sider>\r\n    );\r\n}\r\n\r\nexport default SiderBar;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\actions\\authAction.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\index.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\StatusAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\Home.js",["360"],"import React, { Component } from 'react';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport SliderImage from './SliderImage'\r\nimport AboutUs from \"./AboutUs\"\r\nimport Case from \"./Case\"\r\nimport Statistical from \"./Statistical\"\r\nimport News from './News'\r\n\r\nfunction Home(){\r\n        return (\r\n            <>\r\n            <SliderImage/>\r\n            <AboutUs/>\r\n            <Case/>\r\n            <Statistical/>\r\n            <News/>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default Home;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\Login.js",["361","362","363","364"],"import React, {useState,useContext} from 'react';\r\nimport BreadCrumb from '../BreadCumb'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {showErrMsg, showSuccessMsg} from '../utils/notification/Notification'\r\nimport axios from 'axios'\r\nimport {dispatchLogin} from '../../redux/actions/authAction'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\n\r\n\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction Login() {\r\n    const state = useContext(GlobalState)\r\n    const [user, setUser] = useState(initialState)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const {email, password, err, success} = user\r\n    const token = useSelector(state => state.token)\r\n\r\n    \r\n\r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n        setUser({...user, [name]:value, err: '', success: ''})\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('/user/login', {email, password})\r\n            showSuccessMsg('success',res.data.msg)\r\n            //setUser({...user, err: '', success: res.data.msg})\r\n\r\n            localStorage.setItem('firstLogin', true)\r\n            dispatch(dispatchLogin())\r\n            history.push(\"/\") \r\n\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            err.response.data.msg && \r\n            setUser({...user, err: err.response.data.msg, success: ''})\r\n        }\r\n    }\r\n\r\n    const responseGoogle = async (response) => {\r\n        try {\r\n            const res = await axios.post('/user/google_login', {tokenId: response.tokenId})\r\n\r\n            showSuccessMsg('success',res.data.msg)\r\n\r\n            //setUser({...user, error:'', success: res.data.msg})\r\n            localStorage.setItem('firstLogin', true)\r\n\r\n            dispatch(dispatchLogin())\r\n            history.push('/')\r\n        } catch (err) {\r\n            err.response.data.msg && \r\n            setUser({...user, err: err.response.data.msg, success: ''})\r\n        }\r\n    }\r\n\r\n    const responseFacebook = async (response) => {\r\n        try {\r\n            const {accessToken, userID} = response\r\n            const res = await axios.post('/user/facebook_login', {accessToken, userID})\r\n\r\n            showSuccessMsg('success',res.data.msg)\r\n            //setUser({...user, error:'', success: res.data.msg})\r\n            localStorage.setItem('firstLogin', true)\r\n\r\n            dispatch(dispatchLogin())\r\n            history.push('/')\r\n        } catch (err) {\r\n            err.response.data.msg && \r\n            setUser({...user, err: err.response.data.msg, success: ''})\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"body\">\r\n        {err && showErrMsg('error',err)}\r\n            <div className=\"login-form w3_form\">\r\n                <div className=\"login w3_login\">\r\n                <h2 className=\"login-header w3_header\">Đăng nhập</h2>\r\n                <div className=\"w3l_grid\">\r\n\r\n                    <div className=\"login-container\" >\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div><input type=\"text\" placeholder=\"Email\"  id=\"email\" value={email} name=\"email\" onChange={handleChangeInput}/></div>\r\n                        <div><input type=\"password\" placeholder=\"Mật khẩu\" id=\"password\" value={password} name=\"password\" onChange={handleChangeInput}/></div>\r\n                        <div><button className=\"submit\" type=\"submit\">Đăng nhập</button></div>\r\n                    </form>\r\n                    <div className=\"second-section w3_section\">\r\n                        <div className=\"bottom-header w3_bottom\">\r\n                            <h3>Hoặc</h3>\r\n                        </div>\r\n                        <div className=\"social-links w3_social\">\r\n{/*                             <ul>\r\n\r\n                            <li>\r\n                                <a className=\"facebook\" href=\"#\" target=\"blank\"><i className=\"fa fa-facebook\"/></a>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <a className=\"googleplus\" href=\"#\" target=\"blank\"><i className=\"fa fa-google-plus\"/></a>\r\n                            </li>\r\n                            </ul> */}\r\n                            <GoogleLogin\r\n                                clientId=\"435855610791-bpm8fma33403onru00s417ic9eqhj6r7.apps.googleusercontent.com\"\r\n                                buttonText=\"Login with google\"\r\n                                onSuccess={responseGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                                render={renderProps => (\r\n                                    <Link onClick={renderProps.onClick}\r\n                                    disabled={renderProps.disabled} className=\"googleplus\" href=\"#\" target=\"blank\"><i class=\"fab fa-google\"></i></Link>\r\n                                  )}\r\n                            />\r\n                             <FacebookLogin\r\n                            appId=\"826486697916876\"\r\n                            autoLoad ={false}\r\n                            fields=\"name,email,picture\"\r\n                            callback={responseFacebook}       \r\n                            render={renderProps => (\r\n                                <Link  onClick={renderProps.onClick} className=\"facebook\" href=\"#\" target=\"blank\"><i class=\"fab fa-facebook-f\"></i></Link>\r\n                              )}               \r\n                            /> \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom-text w3_bottom_text\">\r\n                            <p>Nếu chưa có tài khoản?<Link to='/register'>Đăng ký</Link></p>\r\n                            <h4><Link to='/forgot_password'>Quên mật khẩu?</Link></h4>  \r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\ForgotPassWord.js",["365"],"import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {isEmail} from '../utils/validation/Validation'\r\nimport {showErrMsg, showSuccessMsg} from '../utils/notification/Notification'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n    email: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction ForgotPassword(){\r\n    const [data, setData] = useState(initialState)\r\n    const {email, err, success} = data\r\n\r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n        setData({...data, [name]:value, err: '', success: ''})\r\n    }\r\n\r\n    \r\n    const forgotPassword = async () => {\r\n        if(!isEmail(email))\r\n            return setData({...data, err: 'Invalid emails.', success: ''})\r\n            \r\n        try {\r\n            const res = await axios.post('/user/forgot', {email})\r\n\r\n            console.log('reset',res)\r\n            localStorage.setItem('access_token', res.data.access_token)\r\n\r\n            return setData({...data, err: '', success: res.data.msg})\r\n        } catch (err) {\r\n            err.response.data.msg && setData({...data, err:  err.response.data.msg, success: ''})\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"body\">\r\n        {err && showErrMsg('error',err)}\r\n        {success && showSuccessMsg('success',success)}\r\n            <div className=\"login-form w3_form\">\r\n                <div className=\"login w3_login\">\r\n                <h2 className=\"login-header w3_header\">Bạn quên mật khẩu?</h2>\r\n                <div className=\"w3l_grid\">\r\n                    <div className=\"login-container\" >\r\n                            <div><input type=\"text\" placeholder=\"Email\"  id=\"email\" value={email} name=\"email\" onChange={handleChangeInput}/></div>\r\n                            <div><button className=\"submit\" type=\"submit\" onClick={forgotPassword}>Verify your email</button></div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ForgotPassword","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\ResetPassword.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\ActivationEmail.js",["366","367","368","369"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {showErrMsg, showSuccessMsg} from '../utils/notification/Notification'\r\n\r\n\r\nfunction ActivationEmail() {\r\n    const {activation_token} = useParams()\r\n    const [err, setErr] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(activation_token){\r\n            const activationEmail = async () => {\r\n                try {\r\n                    const res = await axios.post('/user/activation', {activation_token})\r\n                    showSuccessMsg('success',res.data.msg)\r\n                } catch (err) {\r\n                    err.response.data.msg && showErrMsg('error',err.response.data.msg)\r\n                }\r\n            }\r\n            activationEmail()\r\n        }\r\n    },[activation_token])\r\n     return (\r\n        <>\r\n{/*         <div>\r\n            {err && showErrMsg('error',err)}\r\n            {success && showSuccessMsg('success',success)}\r\n        </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActivationEmail;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\auth\\Register.js",["370"],"import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {showErrMsg, showSuccessMsg} from '../utils/notification/Notification'\r\nimport BreadCrumb from '../BreadCumb'\r\nimport {isEmpty, isEmail, isPass, isMatch} from '../utils/validation/Validation'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    cf_password: '',\r\n}\r\n\r\nfunction Register() {\r\n    const [user, setUser] = useState(initialState)\r\n\r\n    const {name, email, password,cf_password} = user\r\n\r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n        setUser({...user, [name]:value})\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            e.preventDefault()\r\n            if(isEmpty(name) || isEmpty(password))\r\n            {\r\n              showErrMsg('error','Please fill in all fields.')\r\n              return setUser({...user})\r\n            }\r\n                \r\n            if(!isEmail(email))\r\n            {\r\n              showErrMsg('error','Invalid emails.')\r\n              return setUser({...user})\r\n            }\r\n                \r\n            if(!isPass(password))\r\n            {\r\n              showErrMsg('error','Password must be at least 8 characters, one letter and one number.')\r\n              return setUser({...user})\r\n            }\r\n                \r\n            \r\n            if(!isMatch(password, cf_password))\r\n            {\r\n              showErrMsg('error','Password did not match.')\r\n              return setUser({...user})\r\n\r\n            }\r\n                \r\n            try {\r\n                const res = await axios.post('/user/register', {\r\n                    name, email, password\r\n                })\r\n                showSuccessMsg('success',res.data.msg)\r\n                //setUser({...user, err: '', success: res.data.msg})\r\n            } catch (err) {\r\n                err.response.data.msg && \r\n                showErrMsg('error',err.response.data.msg)\r\n                //setUser({...user, err: err.response.data.msg, success: ''})\r\n            }\r\n        } catch (err) {\r\n            err.response.data.msg && \r\n            setUser({...user, err: err.response.data.msg, success: ''})\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"body\">\r\n{/*         {err && showErrMsg('error',err)}\r\n        {success && showSuccessMsg('success',success)} */}\r\n            <div className=\"login-form w3_form\">\r\n                <div className=\"login w3_login\">\r\n                <h2 className=\"login-header w3_header\">Đăng ký</h2>\r\n                <div className=\"w3l_grid\">\r\n                    <div className=\"login-container\" >\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div><input type=\"text\" placeholder=\"Name\"  id=\"name\" value={name} name=\"name\" onChange={handleChangeInput}/></div>\r\n                            <div><input type=\"text\" placeholder=\"Email\"  id=\"email\" value={email} name=\"email\" onChange={handleChangeInput}/></div>\r\n                            <div><input type=\"password\" placeholder=\"Mật khẩu\" id=\"password\" value={password} name=\"password\" onChange={handleChangeInput}/></div>\r\n                            <div><input type=\"password\" placeholder=\"Xác nhận mật khẩu\" id=\"cf_password\" value={cf_password} name=\"cf_password\" onChange={handleChangeInput} /></div>\r\n                            <div><button className=\"submit\" type=\"submit\">Đăng ký</button></div>\r\n                        </form> \r\n                        <div className=\"bottom-text w3_bottom_text\">\r\n                            <p>Nếu đã có tài khoản?<Link to='/login'>Đăng nhập</Link></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\profile\\Profile.js",["371","372","373","374"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {isPass, isMatch} from '../utils/validation/Validation'\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport {fetchAllUsers, dispatchGetAllUsers} from '../../redux/actions/userAction'\r\nimport BreadCrumb from '../BreadCumb'\r\n\r\n\r\nconst initialState = {\r\n    name: '',\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\n\r\nfunction Profile() {\r\n    const auth = useSelector(state => state.auth)\r\n    const token = useSelector(state => state.token)\r\n\r\n    const {user, isAdmin} = auth\r\n    const [data, setData] = useState(initialState)\r\n    const {name, password, cf_password, err, success} = data\r\n\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(isAdmin){\r\n            fetchAllUsers(token).then(res =>{\r\n                dispatch(dispatchGetAllUsers(res))\r\n            })\r\n        }\r\n    },[token, isAdmin, dispatch, callback])\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setData({...data, [name]:value, err:'', success: ''})\r\n    }\r\n\r\n    const changeAvatar = async(e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const file = e.target.files[0]\r\n\r\n            if(!file) return setData({...data, err: \"No files were uploaded.\" , success: ''})\r\n\r\n            if(file.size > 1024 * 1024)\r\n                return setData({...data, err: \"Size too large.\" , success: ''})\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n                return setData({...data, err: \"File format is incorrect.\" , success: ''})\r\n\r\n            let formData =  new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_avatar', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n\r\n            setLoading(false)\r\n            setAvatar(res.data.url)\r\n            \r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n\r\n    const updateInfor = () => {\r\n        try {\r\n            axios.patch('/user/update', {\r\n                name: name ? name : user.name,\r\n                avatar: avatar ? avatar : user.avatar\r\n            },{\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            setData({...data, err: '' , success: \"Updated Success!\"})\r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n\r\n    const updatePassword = () => {\r\n        if(!isPass(password))\r\n            return setData({...data, err: \"Password must be at least 8 characters, one letter and one number.\", success: ''})\r\n\r\n        if(!isMatch(password, cf_password))\r\n            return setData({...data, err: \"Password did not match.\", success: ''})\r\n\r\n        try {\r\n            axios.post('/user/reset', {password},{\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            setData({...data, err: '' , success: \"Updated Success!\"})\r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if(name || avatar) updateInfor()\r\n        if(password) updatePassword()\r\n        return <>\r\n        {err && showErrMsg('error',err)}\r\n        {success && showSuccessMsg('success',success)}\r\n        </> \r\n    }\r\n\r\n    const userRouter = () =>{\r\n        return(\r\n            <>\r\n                 <div className=\"profile_page\">\r\n                    <div className=\"col-left\">\r\n                        <h2>{isAdmin ? \"Admin Profile\": \"User Profile\"}</h2>\r\n\r\n                        <div className=\"avatar\">\r\n                            <img src={avatar ? avatar : user.avatar} alt=\"\"/>\r\n                            <span>\r\n                                <i className=\"fas fa-camera\"></i>\r\n                                <p>Change</p>\r\n                                <input type=\"file\" name=\"file\" id=\"file_up\" onChange={changeAvatar} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"name\" id=\"name\" defaultValue={user.name}\r\n                            placeholder=\"Your name\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\" name=\"email\" id=\"email\" defaultValue={user.email}\r\n                            placeholder=\"Your email address\" disabled />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" name=\"password\" id=\"password\"\r\n                            placeholder=\"New Password\" value={password} onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" name=\"cf_password\" id=\"cf_password\"\r\n                            placeholder=\"Confirm New Password\" value={cf_password} onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div class='note'>\r\n                            <em style={{color: \"crimson\"}}> \r\n                            * If you update your password here, you will not be able \r\n                            to login quickly using google and facebook.\r\n                            </em>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" class=\"mb-10 btn btn-secondary\"  onClick={handleUpdate}>Update</button>\r\n                    </div>\r\n                 </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>     \r\n        {\r\n            isAdmin ? '' : userRouter()\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default Profile","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllUser.js",["375","376","377"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport {fetchAllUsers, dispatchGetAllUsers} from '../../redux/actions/userAction'\r\nimport './css/alluser.css'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction AllUser() {\r\n    const auth = useSelector(state => state.auth)\r\n    const token = useSelector(state => state.token)\r\n\r\n    const users = useSelector(state => state.users)\r\n\r\n    const {user, isAdmin} = auth\r\n    const [data, setData] = useState(initialState)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(isAdmin){\r\n            fetchAllUsers(token).then(res =>{\r\n                dispatch(dispatchGetAllUsers(res))\r\n            })\r\n        }\r\n    },[token, isAdmin, dispatch, callback])\r\n\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            if(user._id !== id){\r\n                if(window.confirm(\"Are you sure you want to delete this account?\")){\r\n                    setLoading(true)\r\n                    console.log('delete user')\r\n                    await axios.delete(`/user/delete/${id}`, {\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    setLoading(false)\r\n                    console.log('delete user')\r\n                    setCallback(!callback)\r\n                }\r\n            }\r\n            \r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Users</h2>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                    users.map(user => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.role === 1\r\n                                                    ? <i className=\"fas fa-check\" title=\"Admin\"></i>\r\n                                                    : <i className=\"fas fa-times\" title=\"User\"></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={`/admin/edit_user/${user._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\"\r\n                                                onClick={() => handleDelete(user._id)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllUser;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Admin.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\EditUser.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllProduct.js",["378","379","380"],"import React, {useContext, useState} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Avatar,Pagination } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport Loading from '../utils/loading/Loading'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction AllProduct() {\r\n    const state = useContext(GlobalState)\r\n    const [products] = state.productsAPI.products\r\n    const [categoriesListProduct] = state.categoriesAPI.categoriesListProduct\r\n    const [loading, setLoading] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.productsAPI.callback\r\n    const [productsCount] = state.productsAPI.productsCount\r\n    const [currentPage, setCurrentPage] = state.productsAPI.currentPage\r\n    const [resPerPage] = state.productsAPI.resPerPage\r\n\r\n    console.log('state all products')\r\n    console.log(products)\r\n    \r\n    const onChange = page => {\r\n        console.log('page');\r\n        console.log(page);\r\n        setCurrentPage(page)\r\n      };\r\n\r\n    const deleteProduct = async(id, public_id) => {\r\n        try {\r\n            setLoading(true)\r\n            const destroyImg = axios.post('/api/destroy_admin', {public_id},{\r\n                headers: {Authorization: token}\r\n            })\r\n            const deleteProduct = axios.delete(`/api/admin/products/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            await destroyImg\r\n            await deleteProduct\r\n            setCallback(!callback)\r\n            setLoading(false)\r\n            alert('Delete is successful')\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Products</h2>\r\n\r\n                    <div style={{overflowX: \"auto\"}} className=\"mr-b\">\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Discount</th>\r\n{/*                                     <th>Description</th>\r\n                                    <th>Content</th> */}\r\n                                    <th>Stock</th>\r\n                                    <th>Category</th>\r\n                                    <th>Image</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                    products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>{product.price}</td>\r\n                                            <td>{product.discount} %</td>\r\n{/*                                             <td className=\"txt-overflow\">{product.description}</td>\r\n                                            <td>{product.content}</td> */}\r\n                                            <td>{product.stock}</td>\r\n                                            <td value={product.category}>{categoriesListProduct.find(_=>_._id === product.category).name || \"\"}</td>\r\n                                            <td> <Avatar shape=\"square\" size={64} src={product.images.url}/></td>\r\n                                            <td>\r\n                                                <Link to={`/admin/edit_product/${product._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\" onClick={() => deleteProduct(product._id,product.images.public_id)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    resPerPage <= productsCount && (<Pagination defaultCurrent={1}\r\n                        defaultPageSize={resPerPage}  total={productsCount} onChange={onChange}/>)\r\n                }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllProduct;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\CreateProduct.js",["381","382"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport { Row, Col } from 'antd';\r\nimport './css/createProduct.css'\r\nimport './css/form.css'\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport quillEmoji from \"react-quill-emoji\";\r\nimport \"react-quill-emoji/dist/quill-emoji.css\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    price: 0,\r\n    discount: 0,\r\n/*     description: 'description', */\r\n    content: 'content',\r\n    stock: 0,\r\n    category: '',\r\n    _id: ''\r\n}\r\n\r\nfunction CreateProduct() {\r\n    const state = useContext(GlobalState)\r\n    const [product, setProduct] = useState(initialState)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [categoriesListProduct] = state.categoriesAPI.categoriesListProduct\r\n    const [categoriesList] = state.categoriesAPI.categoriesList\r\n    const [images, setImages] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const {isAdmin} = auth\r\n    const token = useSelector(state => state.token)\r\n\r\n    //const [isAdmin] = state.userAPI.isAdmin\r\n    //const [token] = state.token\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n\r\n    const [products] = state.productsAPI.products\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [callback, setCallback] = state.productsAPI.callback\r\n    const [description, setDescription] = useState('');\r\n\r\n    Quill.register(\r\n        {\r\n          \"formats/emoji\": quillEmoji.EmojiBlot,\r\n          \"modules/emoji-toolbar\": quillEmoji.ToolbarEmoji,\r\n          \"modules/emoji-textarea\": quillEmoji.TextAreaEmoji,\r\n          \"modules/emoji-shortname\": quillEmoji.ShortNameEmoji\r\n        },\r\n        true\r\n      );\r\n\r\n    useEffect(() => {\r\n        if(param.id){\r\n            console.log('param.id')\r\n            console.log(param.id)\r\n            setOnEdit(true)\r\n            products.forEach(product => {\r\n                if(product._id === param.id) {\r\n                    console.log('product')\r\n                    console.log(product)\r\n                    setProduct(product)\r\n                    setDescription(product.description)\r\n                    setImages(product.images)\r\n                }\r\n            })\r\n        }else{\r\n            console.log('param.id1')\r\n            console.log(param.id)\r\n            setOnEdit(false)\r\n            setProduct(initialState)\r\n            setImages(false)\r\n        }\r\n    }, [param.id, products])\r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            const file = e.target.files[0]\r\n            \r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 2* 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_product', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(res.data)\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleDestroy = async () => {\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            setLoading(true)\r\n            await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleDescription = async e =>{\r\n        console.log('e')\r\n        console.log(e)\r\n        setDescription(e)\r\n\r\n    }\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setProduct({...product, [name]:value})\r\n    }\r\n\r\n/*     const createCategoryList = (cate, options =[]) => {\r\n\r\n        cate.map((cat) =>{\r\n            options.push({value:cat._id, name: cat.name, parentId: cat.parentId});\r\n            if(cat.children.length > 0)\r\n            {\r\n                createCategoryList(cat.children, options)\r\n            }\r\n        })\r\n\r\n        return options;\r\n    }; */\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            if(!images) return alert(\"No Image Upload\")\r\n\r\n            if(onEdit){\r\n                await axios.put(`/api/admin/products/${product._id}`, {...product,description, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }else{\r\n                await axios.post('/api/admin/products/new', {...product, description, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n/* \r\n                console.log(typeof res.data.productnew._id)\r\n                let _id_update_cat;\r\n                categoriesList.map(_ =>{\r\n                    if(_._id === res.data.productnew.category)\r\n                    {\r\n                        _id_update_cat = _._id\r\n                    }\r\n                })\r\n\r\n                console.log({_id_update_cat})\r\n\r\n                await axios.patch(`/api/update_category_product/${_id_update_cat}`, {products:res.data.productnew._id}, {\r\n                    headers: {Authorization: token}\r\n                }) */\r\n            }\r\n            setCallback(!callback)\r\n            history.push(\"/admin/all_product\")\r\n        } catch (err) {\r\n            //alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n    return (\r\n        <>\r\n        <h2>{onEdit? \"Update Product\" : \"Create Product\"}</h2>\r\n        <div className=\"create_product\">\r\n            <Row gutter={[48, 16]}>\r\n                <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                <div className=\"upload\">\r\n                    <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\r\n                    {\r\n                        loading ? <div id=\"file_load\"><Loading /></div>\r\n\r\n                        :<div id=\"file_img\" style={styleUpload}>\r\n                            <img src={images ? images.url : ''} alt=\"\"/>\r\n                            <span className=\"cancel\" onClick={handleDestroy}>X</span>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                <form className='card' onSubmit={handleSubmit}>\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input class=\"group-control\" type=\"text\" name=\"name\" id=\"name\" required\r\n                        value={product.name} onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <input class=\"group-control\" type=\"number\" name=\"price\" id=\"price\" required\r\n                        value={product.price} onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"discount\">Discount</label>\r\n                        <input class=\"group-control\" type=\"number\" name=\"discount\" id=\"discount\" required\r\n                        value={product.discount} onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"price\">Stock</label>\r\n                        <input class=\"group-control\" type=\"number\" name=\"stock\" id=\"stock\" required\r\n                        value={product.stock} onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n {/*                        <textarea class=\"group-control\" type=\"text\" name=\"description\" id=\"description\" required\r\n                        value={product.description} rows=\"5\" onChange={handleChangeInput} /> */}\r\n                         <ReactQuill\r\n                            class=\"group-control\"\r\n\t\t\t\t\t\t\ttheme='snow'\r\n\t\t\t\t\t\t\tname=\"description\" \r\n                            id=\"description\"\r\n\t\t\t\t\t\t\tplaceholder='Description...'\r\n\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\tonChange={handleDescription}\r\n                            formats={[\r\n                                \"header\",\r\n                                \"font\",\r\n                                \"size\",\r\n                                \"align\",\r\n                                \"bold\",\r\n                                \"italic\",\r\n                                \"underline\",\r\n                                \"strike\",\r\n                                \"blockquote\",\r\n                                \"list\",\r\n                                \"bullet\",\r\n                                \"indent\",\r\n                                \"color\",\r\n                                \"background\",\r\n                                \"emoji\",\r\n                            ]}\r\n                            modules={{\r\n                            toolbar: {\r\n                                container: [\r\n                                    [{ header: [1, 2, 3, 4, 5, 6] }, { font: [] }],\r\n                                    [{ size: [] }],\r\n                                    [{ color: [] }, { background: [] }],\r\n                                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                                    [{ align: [] }],\r\n                                    [{ list: 'ordered' }, { list: 'bullet' }],\r\n                                    [\"emoji\"],\r\n                                    ['clean'],\r\n                                    ['code-block']\r\n                                ]\r\n                            },\r\n                            \"emoji-toolbar\": true,\r\n                            \"emoji-textarea\": true,\r\n                            \"emoji-shortname\": true,\r\n                        }}\r\n\t\t\t\t\t\t/> \r\n                    \r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea class=\"group-control\" type=\"text\" name=\"content\" id=\"content\" required\r\n                        value={product.content} rows=\"7\" onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"categories\">Categories: </label>\r\n                        <select class=\"group-control\" name=\"category\" value={product.category} onChange={handleChangeInput} >\r\n                            <option value=\"\">Please select a category</option>\r\n                            {\r\n                                categoriesListProduct.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                            }\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button className=\"btn-form\" type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n                </form>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateProduct","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Categories.js",["383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],"import React, {useState, useContext,useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { Tree } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [categories] = state.categoriesAPI.categories\r\n    console.log({categories})\r\n    const [typePage] = state.categoriesAPI.typePage\r\n    const [category, setCategory] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.categoriesAPI.callback\r\n    const [onAdd, setOnAdd] = useState(false)\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [onDelete, setOnDelete] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [parentCategoryId, setParentCategoryId] = useState('')\r\n    const [categoryType, setCategoryType] = useState('')\r\n\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [selectedArray, setSelectedArray] = useState([]);\r\n\r\n    \r\n\r\n    const onExpand = (expandedKeysValue) => {\r\n        console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n        // or, you can remove all expanded children keys.\r\n        setExpanded(expandedKeysValue)\r\n      };\r\n\r\n    const onSelect = (selectedKeys, info) => {\r\n        setSelected(selectedKeys)\r\n        console.log({selectedKeys});\r\n        console.log({selected})\r\n        \r\n      };\r\n    \r\n    const onCheck = (checkedKeys, info) => {\r\n        setChecked(checkedKeys)\r\n        console.log('onCheck', checkedKeys, info);\r\n    };\r\n\r\n    \r\n    const  handleCancel = () => {\r\n        setOnAdd(false)\r\n        setOnEdit(false)\r\n        setOnDelete(false)\r\n        setVisible(false)\r\n    };\r\n\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setCheckedArray(updatedCheckedArray);\r\n          } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setExpandedArray(updatedExpandedArray);\r\n          }else if (type == \"selected\") {\r\n            const updatedSelectedArray = selectedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setSelectedArray(updatedSelectedArray);\r\n          }\r\n    }\r\n    \r\n    const showModalAdd = () => {\r\n        setVisible(true)\r\n        setOnAdd(true)\r\n        console.log({onAdd})\r\n        setOnEdit(false)\r\n        setOnDelete(false)\r\n        if(selected)\r\n        {\r\n            setParentCategoryId(selected)\r\n        }\r\n        console.log({selected})\r\n        \r\n       \r\n    };\r\n\r\n    const ModalAdd = () =>{\r\n        return <>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Add new category\"\r\n                onOk={createCategory}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={createCategory}>\r\n                    Create\r\n                    </Button>\r\n                ]}\r\n                >\r\n                <Input style={{marginBottom :'20px'}} value={categoryName} placeholder=\"Category Name\" onChange={(e)=> setCategoryName(e.target.value)} />\r\n                <select style={{marginBottom :'20px'}} className=\"group-control-model\" value={parentCategoryId} onChange={(e)=> setParentCategoryId(e.target.value)} placeholder=\"Please select a category\">\r\n                    <option>Select a category</option>\r\n                    {\r\n                        createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n                <select style={{marginBottom :'20px'}} className=\"group-control-model\" value={categoryType} onChange={(e)=> setCategoryType(e.target.value)} placeholder=\"Please select a type\">\r\n                    <option>Select a type</option>\r\n                    {\r\n                        typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n            </Modal> \r\n        </>\r\n      }\r\n    \r\n    const updateCheckedExpandedSelected= ()=>{\r\n        setVisible(true)\r\n        const cats = createCategoryList(categories)\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        const selectedArray = [];\r\n\r\n        checked.length > 0 && checked.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && checkedArray.push(cat)\r\n        })\r\n\r\n        expanded.length > 0 && expanded.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && expandedArray.push(cat)\r\n        })\r\n\r\n        selected.length > 0 && selected.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && selectedArray.push(cat)\r\n        })\r\n\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n        setSelectedArray(selectedArray);\r\n        console.log({checked, expanded,selected, cats, checkedArray, expandedArray,selectedArray})\r\n    }\r\n\r\n    const showModalEdit= () => {\r\n        setOnEdit(true)\r\n        updateCheckedExpandedSelected()\r\n    };\r\n\r\n    const ModalEdit = () =>{\r\n        return <>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Edit new category\"\r\n                onOk={editCategory}\r\n                onCancel={handleCancel}\r\n                width={1000}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={editCategory}>\r\n                    Edit\r\n                    </Button>\r\n                ]}\r\n                >\r\n{/*                     <Row>\r\n                        <Col>\r\n                            <h6>Expanded</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        expandedArray.length > 0 && expandedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\" value={item.type} onChange={(e) => handleCategoryInput('type', e.target.value, index, 'expanded')} placeholder=\"Please select a type\">\r\n                                <option>Select a type</option>\r\n                                {\r\n                                    typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    } */}\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Checked</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        checkedArray.length > 0 && checkedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\" value={item.type} onChange={(e) => handleCategoryInput('type', e.target.value, index, 'checked')} placeholder=\"Please select a type\">\r\n                                <option>Select a type</option>\r\n                                {\r\n                                    typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n{/*                     <Row>\r\n                        <Col>\r\n                            <h6>Selected</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        selectedArray.length > 0 && selectedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'selected')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'selected')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\" value={item.type} onChange={(e) => handleCategoryInput('type', e.target.value, index, 'selected')} placeholder=\"Please select a type\">\r\n                                <option>Select a type</option>\r\n                                {\r\n                                    typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    }  */}\r\n\r\n            </Modal> \r\n        </>\r\n    }\r\n\r\n    const showModalDelete = () => {\r\n        setOnDelete(true)\r\n        updateCheckedExpandedSelected()\r\n    }\r\n\r\n    const ModalDelete = () =>{\r\n        console.log('delete', checkedArray)\r\n        return<>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Delete category\"\r\n                onOk={deleteCategory}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    No\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={deleteCategory}>\r\n                    Yes\r\n                    </Button>\r\n                ]}\r\n                >\r\n{/*                     <Row>\r\n                        <Col>\r\n                            <h6>Expanded</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        expandedArray.map((item,index) =>(<span key={index}>{item.name}</span>))\r\n                    } */}\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Checked</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        checkedArray.map((item,index) =>(<><span key={index}>{item.name}</span><br></br></>))\r\n                    }\r\n{/* \r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Selected</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        selectedArray.map((item,index) =>(<><span key={index}>{item.name}</span><br></br></>))\r\n                    } */}\r\n            </Modal> \r\n        </>\r\n    }\r\n\r\n    const renderCategories = (cate) => {\r\n        console.log(cate);\r\n        let myCategories = [];\r\n        cate.map((cat) => {\r\n            myCategories.push({\r\n            title: cat.name,\r\n            key: cat._id,\r\n            children:cat.children.length > 0 && renderCategories(cat.children),\r\n          });\r\n        });\r\n        return myCategories;\r\n    }; \r\n\r\n    \r\n    const createCategoryList = (cate, options =[]) => {\r\n\r\n        cate.map((cat) =>{\r\n            options.push({value:cat._id, name: cat.name, parentId: cat.parentId, type: cat.type, images:cat.images});\r\n            if(cat.children.length > 0)\r\n            {\r\n                createCategoryList(cat.children, options)\r\n            }\r\n        })\r\n\r\n        return options;\r\n    };\r\n\r\n    const createCategory = async e => {\r\n        const form = new FormData();\r\n        form.append('name', categoryName)\r\n        form.append('parentId', parentCategoryId)\r\n        form.append('type', categoryType)\r\n        const res = await axios.post('/api/category', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n        setCategoryName('')\r\n        setParentCategoryId('')\r\n        setCategoryType('')\r\n        setOnAdd(false)\r\n        setCallback(!callback)\r\n        console.log(res)\r\n        setVisible(false)\r\n    };\r\n\r\n    const editCategory = async e =>{\r\n/*         const form = new FormData();\r\n        \r\n        expandedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        checkedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        selectedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        const res = await axios.get('/api/category')\r\n        setCategories(res.data.categoryList)\r\n        console.log({res})\r\n        console.log({categories})\r\n\r\n        await axios.post('/api/category/update', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        setCheckedArray('');\r\n        setExpandedArray('');\r\n        setSelectedArray('');\r\n        setSelected([])\r\n        setOnEdit(false);\r\n        setCallback(!callback)\r\n        setVisible(false) */\r\n        const form = new FormData();\r\n/*         expandedArray.forEach((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('type', item.type)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n        }) */\r\n\r\n        checkedArray.forEach((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('type', item.type)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n        })\r\n\r\n/*         selectedArray.forEach((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('type', item.type)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n        })\r\n */\r\n        \r\n        //const arr  = Array.from(form);\r\n        //localStorage.setItem('myform', JSON.stringify(arr));\r\n        //console.log(JSON.stringify(arr))\r\n\r\n        const res =await axios.post('/api/category/update', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        if(res.status === 201)\r\n        {\r\n            console.log(res)\r\n        }else{\r\n            console.log(res)\r\n        }\r\n        setCheckedArray('');\r\n        setOnEdit(false);\r\n        setCallback(!callback)\r\n        setVisible(false)\r\n    }\r\n\r\n    const deleteCategory = async e =>{\r\n\r\n        //const expandedIdsArray = expandedArray.map((item,index) =>({_id: item.value}))\r\n        const checkedIdsArray = checkedArray.map((item,index) =>({_id: item.value}))\r\n        //const selectedIdsArray = selectedArray.map((item,index) =>({_id: item.value}))\r\n        //const idsArray = checkedArray.concat(selectedArray)\r\n        //console.log(idsArray)\r\n\r\n        console.log({checkedIdsArray})\r\n        \r\n        if(checkedIdsArray.length > 0){\r\n            const res = await axios.post('/api/category/delete', {ids:checkedIdsArray}, {\r\n                headers: {Authorization: token}\r\n        })\r\n\r\n            if(res.status ===  202)\r\n            {\r\n                setSelected([])\r\n                setOnDelete(false)\r\n                setCallback(!callback)\r\n                setVisible(false)\r\n                return alert(res.data.msg)\r\n            }\r\n        }\r\n\r\n/*         if(selectedIdsArray.length > 0){\r\n            const res = await axios.post('/api/category/delete', {ids:selectedIdsArray}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            if(res.status ===  202)\r\n            {\r\n                setSelected([])\r\n                setOnDelete(false)\r\n                setCallback(!callback)\r\n                setVisible(false)\r\n                return alert(res.data.msg)\r\n            }\r\n        }\r\n        setSelected([]) */\r\n        setOnDelete(false)\r\n        setCallback(!callback)\r\n        setVisible(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Row justify=\"space-between\">\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}}>\r\n                <h2 className=\"text-4xl\">All Categories</h2>\r\n            </Col>\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}} className=\"text-right mb-2\">\r\n                <Button className=\"mr-7\" type=\"primary\" onClick={showModalAdd}>\r\n                    ADD\r\n                </Button>\r\n                <Button className=\"mr-7\" type=\"primary\" onClick={showModalEdit}>\r\n                    EDIT\r\n                </Button> \r\n                <Button type=\"primary\" onClick={showModalDelete}>\r\n                    DELETE\r\n                </Button> \r\n                { onEdit ? ModalEdit() : onAdd ? ModalAdd(): onDelete ? ModalDelete():''}\r\n            </Col>\r\n        </Row>\r\n\r\n        <Tree\r\n            checkable\r\n            defaultExpandedKeys={['0-0-0', '0-0-1']}\r\n            defaultSelectedKeys={[]}\r\n            defaultCheckedKeys={[]}\r\n            onExpand={onExpand}\r\n            onSelect={onSelect}\r\n            onCheck={onCheck}\r\n            treeData={renderCategories(categories)}\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Categories;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\CreatePet.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Type.js",["408","409","410"],"import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\n\r\nfunction Type() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [types] = state.typesAPI.types\r\n    const [type, setType] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    console.log(token)\r\n    const [callback, setCallback] = state.typesAPI.callback\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const createType = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(onEdit){\r\n                const res = await axios.put(`/api/type/${id}`, {name: type}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Update is successful')\r\n            }else{\r\n                const res = await axios.post('/api/type', {name: type}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Create is successful')\r\n            }\r\n            setOnEdit(false)\r\n            setType('') \r\n            setCallback(!callback)\r\n            \r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n\r\n    const editType = async (id, name) =>{\r\n        setID(id)\r\n        setType(name)\r\n        setOnEdit(true)\r\n        setSuccess('Update is successful')\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n    const deleteType = async id =>{\r\n        try {\r\n            const res = await axios.delete(`/api/type/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setSuccess('Delete is successful')\r\n            setCallback(!callback)\r\n        } catch (err) {\r\n            setErr(err.response.data.msg)\r\n        }\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Types</h2>\r\n                    \r\n                    <form className='category' onSubmit={createType}>\r\n                    <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                        <Col span={8}><input type=\"text\" name=\"type\" placeholder=\"Type's name\" value={type} required onChange={e => setType(e.target.value)} /></Col>\r\n                        <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                    </Row>\r\n                    </form>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    types.map(type =>(\r\n                                        <tr key={type._id}>\r\n                                            <td>{type._id}</td>\r\n                                            <td>{type.name}</td>\r\n                                            <td>\r\n                                                <Link onClick={() => editType(type._id, type.name)}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <Link onClick={() => deleteType(type._id)}>\r\n                                                    <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Type;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Status.js",["411","412","413"],"import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\n\r\nfunction Status() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [statuses] = state.statusesAPI.statuses\r\n    const [status, setStatus] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.statusesAPI.callback\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const createStatus = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(onEdit){\r\n                const res = await axios.put(`/api/status/${id}`, {name: status}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Update is successful')\r\n            }else{\r\n                const res = await axios.post('/api/status', {name: status}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Create is successful')\r\n            }\r\n            setOnEdit(false)\r\n            setStatus('') \r\n            setCallback(!callback)\r\n            \r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n\r\n    const editsetStatus = async (id, name) =>{\r\n        setID(id)\r\n        setStatus(name)\r\n        setOnEdit(true)\r\n        setSuccess('Update is successful')\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n    const deletesetStatus = async id =>{\r\n        try {\r\n            const res = await axios.delete(`/api/status/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setSuccess('Delete is successful')\r\n            setCallback(!callback)\r\n        } catch (err) {\r\n            setErr(err.response.data.msg)\r\n        }\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Statuses</h2>\r\n                    \r\n                    <form className='category' onSubmit={createStatus}>\r\n                    <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                        <Col span={8}><input type=\"text\" name=\"status\" placeholder=\"Status\" value={status} required onChange={e => setStatus(e.target.value)} /></Col>\r\n                        <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                    </Row>\r\n                    </form>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    statuses.map(status =>(\r\n                                        <tr key={status._id}>\r\n                                            <td>{status._id}</td>\r\n                                            <td>{status.name}</td>\r\n                                            <td>\r\n                                                <Link onClick={() => editsetStatus(status._id, status.name)}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <Link onClick={() => deletesetStatus(status._id)}>\r\n                                                    <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Status;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\CreatePost.js",["414","415"],"import React, {useState, useContext, useEffect,useRef} from 'react'\r\nimport Helmet from 'react-helmet';\r\nimport { Row, Col } from 'antd';\r\nimport './css/form.css'\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from 'axios'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport quillEmoji from \"react-quill-emoji\";\r\nimport \"react-quill-emoji/dist/quill-emoji.css\";\r\nimport ImageResize from \"quill-image-resize-module-react\";\r\nimport ImageCompress from 'quill-image-compress';\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    topic:'',\r\n    _id: ''\r\n}\r\n\r\nfunction CreatePost() {\r\n    const state = useContext(GlobalState)\r\n    const token = useSelector(state => state.token)\r\n    const auth = useSelector(state => state.auth)\r\n    const {user, isAdmin} = auth\r\n    console.log('user',user.avatar)\r\n    const [myPost, setMyPost] = useState(initialState)\r\n\r\n    const [slug, setSlug] = useState('');\r\n    const [slugButton, setSlugButton] = useState(false);\r\n\r\n    const [images, setImages] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState('Choose image');\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [body, setBody] = useState('');\r\n\r\n    const [myPosts] = state.myPostsAPI.myPosts\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [callback, setCallback] = state.myPostsAPI.callback\r\n\r\n    //const [userAvatar, setUserAvatar] = useState('')\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n\r\n    let quillRef = useRef()\r\n\r\n    const [topics] = state.topicsAPI.topics\r\n\r\n    Quill.register(\r\n    {\r\n      \"formats/emoji\": quillEmoji.EmojiBlot,\r\n      \"modules/emoji-toolbar\": quillEmoji.ToolbarEmoji,\r\n      \"modules/emoji-textarea\": quillEmoji.TextAreaEmoji,\r\n      \"modules/emoji-shortname\": quillEmoji.ShortNameEmoji\r\n    },\r\n    true\r\n  );\r\n\r\n  Quill.register(\"modules/ImageResize\", ImageResize);\r\n\r\n  Quill.register(\"modules/imageCompress\", ImageCompress);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('quillRef.current',quillRef.current);\r\n        //setUserAvatar(user.avatar)\r\n        if(param.id){\r\n            console.log('param.id')\r\n            console.log(param.id)\r\n            setOnEdit(true)\r\n            myPosts.forEach(myPost => {\r\n                if(myPost._id === param.id) {\r\n                    setMyPost(myPost)\r\n                    setImages(myPost.images)\r\n                    setSlug(myPost.slug)\r\n                    setBody(myPost.body)\r\n                }\r\n            })\r\n        }else{\r\n            console.log('param.id1')\r\n            console.log(param.id)\r\n            setOnEdit(false)\r\n            setMyPost(initialState)\r\n            setImages(false)\r\n        }\r\n    }, [param.id, myPosts,quillRef])\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setMyPost({...myPost, [name]:value})\r\n\r\n        const createSlug = e.target.value.trim().split(' ').join('-').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n\t\tsetSlug(createSlug);\r\n    }\r\n\r\n    const slugHandle = (e) => {\r\n        setSlugButton(true);\r\n\t\tsetSlug(e.target.value);\r\n\t};\r\n\r\n    const handleURL = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetSlug(slug.trim().split(' ').join('-'));\r\n\t};\r\n\r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            console.log(e.target.files[0].name)\r\n            setCurrentImage(e.target.files[0].name)\r\n\r\n            const file = e.target.files[0]\r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 2* 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_post', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n\r\n            setLoading(false)\r\n            setImages(res.data)\r\n        } catch (err) {\r\n            \r\n        }\r\n    };\r\n\r\n    const handleDestroy = async () => {\r\n        try {\r\n            setLoading(true)\r\n            await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setCurrentImage('Choose image')\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleBody = async e =>{\r\n        console.log('e')\r\n        console.log(e)\r\n        setBody(e)\r\n\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n\r\n    const handleDescription = (e) => {\r\n        const {name, value} = e.target\r\n        setMyPost({...myPost, [name]:value})\r\n\t};\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            console.log(images)\r\n            if(!images) return alert(\"No Image Upload\")\r\n            if(!slug || !body) return alert(\"Please fill in all fields.\")\r\n\r\n            if(onEdit){\r\n                 await axios.put(`/api/admin/posts/${myPost._id}`, {...myPost, images ,slug , body}, {\r\n                    headers: {Authorization: token}\r\n                }) \r\n            }else{\r\n                await axios.post('/api/admin/posts/new', {...myPost, images ,slug , body}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }\r\n            setCallback(!callback)\r\n            history.push(\"/admin/all_post\")\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const imageHandler = React.useCallback(() => {\r\n        const input = document.createElement('input')\r\n        input.setAttribute('type', 'file')\r\n        input.setAttribute('accept', 'image/*')\r\n        console.log(input)\r\n        input.click()\r\n        input.onchange = async () => {\r\n            const file = input.files[0]\r\n            const formData = new FormData()\r\n            formData.append('file', file)\r\n            formData.append('upload_preset', 'wwosfrvh')\r\n            const res = await axios.post('https://api.cloudinary.com/v1_1/lucy2619288/image/upload', formData)\r\n            console.log('test upload: ')\r\n            console.log('test upload: quillRef.current.getEditor()',quillRef.current.getEditor())\r\n\r\n            const link = res.data.url\r\n    \r\n            // this part the image is inserted\r\n            // by 'image' option below, you just have to put src(link) of img here. \r\n            quillRef.current.getEditor().insertEmbed(quillRef.current.getEditor().getSelection().index, 'image', link)\r\n        }\r\n      }, [quillRef]);\r\n      \r\n    return (\r\n<div className=\"create\">\r\n{/*         <Helmet>\r\n\t\t\t<title>{onEdit? \"Update Post\" : \"Create Post\"}</title>\r\n\t\t\t<meta name='description' content='Create a new post' />\r\n\t\t</Helmet>\r\n */}\r\n        <div className=\"create-product\">\r\n        <h2>{onEdit? \"Update Post\" : \"Create Post\"}</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Row gutter={[48, 16]}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                               <div className ='card'>\r\n                                    <div className=\"group\">\r\n                                        <label htmlFor=\"title\">Post Title</label>\r\n                                        <input className=\"group-control\" type=\"text\" name=\"title\" id=\"title\" placeholder='Post title...' onChange={handleChangeInput} value ={myPost.title}/>\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                        <label htmlFor='slug'>Post URL</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            name='slug'\r\n                                            id='slug'\r\n                                            className='group-control'\r\n                                            placeholder='Post URL...'\r\n                                            onChange={slugHandle}\r\n                                            value={slug}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                        {slugButton ? (\r\n                                            <button class='btn-form btn-default' onClick={handleURL}>\r\n                                                Update Slug\r\n                                            </button>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"group\">\r\n                                        <label className='file__label' htmlFor=\"file\">{loading?currentImage:currentImage}</label>\r\n                                        <input type=\"file\" name=\"file\" id=\"file\" onChange={handleUpload}/>\r\n                                    </div>\r\n                                    \r\n                                    <div className='group'>\r\n                                                <label htmlFor='body'>Post body</label>\r\n                                                <ReactQuill\r\n                                                    ref={quillRef}\r\n                                                    theme='snow'\r\n                                                    id='body'\r\n                                                    placeholder='Post body...'\r\n                                                    value={body}\r\n                                                    onChange={handleBody}\r\n                                                    formats={[\r\n                                                        \"header\",\r\n                                                        \"font\",\r\n                                                        \"size\",\r\n                                                        \"align\",\r\n                                                        \"bold\",\r\n                                                        \"italic\",\r\n                                                        \"underline\",\r\n                                                        \"strike\",\r\n                                                        \"blockquote\",\r\n                                                        \"list\",\r\n                                                        \"bullet\",\r\n                                                        \"indent\",\r\n                                                        \"color\",\r\n                                                        \"background\",\r\n                                                        \"link\",\r\n                                                        \"image\",\r\n                                                        \"emoji\",\r\n                                                        \"video\",\r\n                                                    ]}\r\n                                                    modules={{\r\n                                                    toolbar: {\r\n                                                        container: [\r\n                                                            [{ header: [1, 2, 3, 4, 5, 6] }, { font: [] }],\r\n                                                            [{ size: [] }],\r\n                                                            [{ color: [] }, { background: [] }],\r\n                                                            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                                                            [{ align: [] }],\r\n                                                            [{ list: 'ordered' }, { list: 'bullet' }],\r\n                                                            ['link', 'image', 'video'],\r\n                                                            [\"emoji\"],\r\n                                                            ['clean'],\r\n                                                            ['code-block']\r\n                                                        ],\r\n                                                        handlers: {\r\n                                                            image : imageHandler\r\n                                                        },\r\n                                                    },\r\n                                                    ImageResize:{\r\n                                                            parchment: Quill.import('parchment'),\r\n                                                            modules: [ 'Resize', 'DisplaySize', 'Toolbar' ],\r\n                                                            handleStyles: {\r\n                                                                backgroundColor: 'black',\r\n                                                                border: 'none',\r\n                                                                color: 'white'\r\n                                                                // other camelCase styles for size display\r\n                                                            },\r\n                                                            displayStyles: {\r\n                                                                backgroundColor: 'black',\r\n                                                                border: 'none',\r\n                                                                color: 'white'\r\n                                                                // other camelCase styles for size display\r\n                                                            }\r\n                                                    },\r\n                                                    \"emoji-toolbar\": true,\r\n                                                    \"emoji-textarea\": true,\r\n                                                    \"emoji-shortname\": true,\r\n                                                }}\r\n                                                />\r\n                                    </div>\r\n                                    \r\n                                    <div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\t\t\trows='10'\r\n\t\t\t\t\t\t\t\t\t\tclassName='group-control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\r\n\t\t\t\t\t\t\t\t\t\tmaxLength='500'\r\n                                        onChange={handleDescription}\r\n                                        defaultValue={myPost.description}>\r\n                                        </textarea>\r\n\t\t\t\t\t\t\t\t\t<p className='length'>\r\n                                        {myPost.description?myPost.description.length:'0'}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                    <div className='group'>\r\n                                        <div className='imagePreview'>\r\n                                        {\r\n                                            loading ? <div id=\"file_load\"><Loading /></div>\r\n\r\n                                            :<div id=\"img_post\" style={styleUpload}>\r\n                                                <img src={images ? images.url : ''} alt=\"\"/>\r\n                                                <span className=\"cancel\" onClick={handleDestroy}>X</span>\r\n                                            </div>\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"group\">\r\n                                        <label htmlFor=\"topic\">Topic: </label>\r\n                                        <select class=\"group-control\" name=\"topic\" value={myPost.topic} onChange={handleDescription} >\r\n                                            <option value=\"\">Please select a topic</option>\r\n                                            {\r\n                                                topics.map(topic => (\r\n                                                    <option value={topic._id} key={topic._id}>\r\n                                                        {topic.name}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                </select>\r\n                            </div>\r\n\r\n                                    <div className='group'>\r\n                                                <input\r\n                                                    type='submit'\r\n                                                    value={onEdit? \"Update Post\" : \"Create Post\"}\r\n                                                    className='btn-form'\r\n                                                />\r\n                                    </div>\r\n                               </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllPost.js",["416","417","418","419"],"import React, {useContext, useState} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Avatar } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport Loading from '../utils/loading/Loading'\r\nimport axios from 'axios'\r\n\r\nfunction AllPost() {\r\n    const state = useContext(GlobalState)\r\n    const [myPosts, setMyPosts] = state.myPostsAPI.myPosts\r\n    const [loading, setLoading] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.myPostsAPI.callback\r\n    console.log('state all post')\r\n    console.log(myPosts)\r\n\r\n\r\n    const deleteMyPost = async(id, public_id) => {\r\n        try {\r\n            setLoading(true)\r\n            const destroyImg = axios.post('/api/destroy_admin', {public_id},{\r\n                headers: {Authorization: token}\r\n            })\r\n            const deleteMyPost = axios.delete(`/api/admin/posts/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            await destroyImg\r\n            await deleteMyPost\r\n            setCallback(!callback)\r\n            setLoading(false)\r\n            alert('Delete is successful')\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n <>\r\n        <div className=\"col-right\">\r\n                    <h2>My Post</h2>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>Body</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                    myPosts.map(myPost => (\r\n                                        <tr key={myPost._id}>\r\n                                            <td>{myPost._id}</td>\r\n                                            <td>{myPost.title}</td>\r\n                                            <td>\r\n                                                <Link to={`/admin/edit_post/${myPost._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\" onClick={() => deleteMyPost(myPost._id,myPost.images.public_id)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPost;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\AllPet.js",["420","421","422","423","424"],"import React, {useContext, useState} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Avatar } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport Loading from '../utils/loading/Loading'\r\nimport axios from 'axios'\r\nimport SearchPet from '../utils/search/SearchPet'\r\nimport { Pagination } from 'antd';\r\nimport { Row, Col } from 'antd';\r\n\r\nfunction AllPet() {\r\n    const state = useContext(GlobalState)\r\n    const [pets] = state.petsAPI.pets\r\n    const [loading, setLoading] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.petsAPI.callback\r\n    const [currentPage, setCurrentPage] = state.petsAPI.currentPage\r\n    const [petsCount] = state.petsAPI.petsCount\r\n    const [resPerPage] = state.petsAPI.resPerPage\r\n    const [types] = state.typesAPI.types\r\n    const [statuses] = state.statusesAPI.statuses\r\n\r\n    console.log('state all pets')\r\n    console.log(resPerPage)\r\n \r\n    const onChange = page => {\r\n        console.log('page');\r\n        console.log(page);\r\n        setCurrentPage(page)\r\n      };\r\n\r\n    const deletePet = async(id, public_id) => {\r\n        try {\r\n            setLoading(true)\r\n            const destroyImg = axios.post('/api/destroy_admin', {public_id},{\r\n                headers: {Authorization: token}\r\n            })\r\n            const deletePet = axios.delete(`/api/admin/pet/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            await destroyImg\r\n            await deletePet\r\n            setCallback(!callback)\r\n            setLoading(false)\r\n            alert('Delete is successful')\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-right\">\r\n                <h2>All Pets</h2>\r\n                <SearchPet/>\r\n                <div style={{overflowX: \"auto\"}} className=\"mr-b\">\r\n                    <table className=\"customers\">\r\n                        <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Pet Code</th>\r\n                                    <th>Name</th>\r\n                                    <th>Species</th>\r\n                                    <th>Type</th>\r\n                                    <th>Color</th>\r\n                                    <th>Weight</th>\r\n                                    <th>Sex</th>\r\n                                    <th>Vaccination</th>\r\n                                    <th>More Information</th>\r\n                                    <th>Status</th>\r\n                                    <th>Image</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                        </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        pets.map((pet)=>(\r\n                                            <tr key={pet._id}>\r\n                                                <td>{pet._id}</td>\r\n                                                <td>{pet.pet_code}</td>\r\n                                                <td>{pet.name}</td>\r\n                                                <td>{pet.species}</td>\r\n                                                <td value={pet.type}>{types.find(_=>_._id === pet.type).name || \"\"}</td>\r\n                                                <td>{pet.color}</td>\r\n                                                <td>{pet.weight}</td>\r\n                                                <td>{pet.sex}</td>\r\n                                                <td>{pet.vaccination}</td>\r\n                                                <td>{pet.moreinfor}</td>\r\n                                                <td value={pet.status}>{statuses.find(_=>_._id === pet.status).name || \"\"}</td>\r\n                                                <td> <Avatar shape=\"square\" size={64} src={pet.images.url}/></td>\r\n                                                <td>\r\n                                                <Link to={`/admin/edit_pet/${pet._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\" onClick={() => deletePet(pet._id,pet.images.public_id)} ></i>\r\n                                            </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                    </table>\r\n                </div>\r\n          </div>\r\n          \r\n                {\r\n                    resPerPage <= petsCount && (<Pagination defaultCurrent={1}\r\n                        defaultPageSize={resPerPage}  total={petsCount} onChange={onChange}/>)\r\n                }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPet;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\pets\\Pets.js",["425","426","427","428","429"],"import React,{useContext} from 'react';\r\nimport BreadCrumb from '../BreadCumb'\r\nimport SearchPet from '../utils/search/SearchPet'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport PetItem from '../utils/petItem/PetItem'\r\nimport { Row, Col } from 'antd';\r\nimport Loading from '../utils/loading/Loading'\r\nimport \"aos/dist/aos.css\"\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nfunction Pets() {\r\n    const state = useContext(GlobalState)\r\n    const [pets, setPets] = state.petsAPI.pets\r\n    const [page, setPage] = state.petsAPI.page\r\n    const [result, setResult] = state.petsAPI.result\r\n    \r\n\r\n     \r\n    console.log('state all pets.js')\r\n    console.log(pets)\r\n    return (\r\n        <>\r\n        <div className=\"bg-gray-100 lg:py-28 h-full pb-96\">\r\n            <div className='container'>\r\n                <div className='pt-20'><SearchPet className='column'/></div>\r\n                <InfiniteScroll \r\n                    dataLength={pets.length} //This is important field to render the next data\r\n                    next={result < page * 8 ? \"\":() => setPage(page+1)}\r\n                    hasMore={result < page * 8 ? false :true}\r\n                    loader={ result < page * 8 ? \"\":<h3 className=\"text-center mt-6\">Loading...</h3>}\r\n                    endMessage={\r\n                        <p className=\"text-center mt-6\">\r\n                            <b>You have seen it all</b>\r\n                        </p>\r\n                    }\r\n                >\r\n                <Row gutter={[24, 24]}>\r\n                {\r\n                    pets.map(pet =>{\r\n                        return <PetItem key={pet._id} pet={pet} data-aos=\"fade-right\"/>\r\n                    })\r\n                }\r\n                </Row>\r\n                </InfiniteScroll>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pets;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\BreadCumb.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\headers\\HeaderPage.js",["430","431"],"import React, {useEffect,useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Menu, Dropdown,Avatar,Badge } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { LoginOutlined} from '@ant-design/icons';\r\nimport {GlobalState} from '../../GlobalState';\r\nimport {useSelector} from 'react-redux'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nfunction HeaderPage() {\r\n    \r\n   const state = useContext(GlobalState)\r\n   /* console.log(state) */\r\n   const auth = useSelector(state => state.auth)\r\n   const {user, isLogged} = auth\r\n   const [cart] = state.userAPI.cart\r\n\r\n    const home = async() => {\r\n      window.location.href = '/';\r\n    }\r\n    const adoption = async() => {\r\n        window.location.href = '/adoption';\r\n    }\r\n    const product = async() => {\r\n        window.location.href = '/product';\r\n    }\r\n    const news = async() => {\r\n        window.location.href = '/news';\r\n    }\r\n\r\n   const handleLogout = async () => {\r\n     try {\r\n         await axios.get('/user/logout')\r\n         localStorage.removeItem('firstLogin')\r\n         localStorage.removeItem('token')\r\n         window.location.href = \"/\";\r\n     } catch (err) {\r\n         window.location.href = \"/\";\r\n     }\r\n }\r\n\r\n const handleProfile = async () => {\r\n  try {\r\n      window.location.href = \"/profile\";\r\n  } catch (err) {\r\n      window.location.href = \"/profile\";\r\n  }\r\n}\r\n\r\nconst handleHistory = async () => {\r\ntry {\r\n    window.location.href = \"/history\";\r\n} catch (err) {\r\n    window.location.href = \"/history\";\r\n}\r\n}\r\n const click = async () => {\r\n  const show = document.querySelector(\".show\");\r\n  if(show)\r\n  {\r\n    document.body.classList.remove(\"show\");\r\n  }\r\n}\r\n   const IconFont = createFromIconfontCN({\r\n     scriptUrl: [\r\n       '//at.alicdn.com/t/font_2520839_3xfc6cekias.js', \r\n       '//at.alicdn.com/t/font_2520839_dpus1tqve4p.js',\r\n       '//at.alicdn.com/t/font_2520839_9pnrampty8l.js'\r\n     ],\r\n   });\r\n\r\n\r\n  useEffect(() => {\r\n   const nav = document.querySelector(\".nav-menu\");\r\n   const navigation = document.querySelector(\".navigation_page\");\r\n   const header = document.querySelector(\".header_page\");\r\n   const nav_link = document.querySelectorAll(\".scroll-link\");\r\n   const openBtn = document.querySelector(\".hamburger\");\r\n   const closeBtn = document.querySelector(\".close\");\r\n   const navLeft = nav.getBoundingClientRect().left;\r\n   const show = document.querySelector(\".show\");\r\n\r\n   /* console.log('show',show); */\r\n   if(show)\r\n   {\r\n    navigation.classList.remove(\"show\");\r\n    nav.classList.remove(\"show\");\r\n    document.body.classList.remove(\"show\");\r\n   }\r\n\r\n   openBtn.addEventListener(\"click\", () => {\r\n     if (navLeft < 0) {\r\n       for(var x=0; x < nav_link.length; x++)\r\n           {\r\n               nav_link[x].classList.add(\"nav-link-response\");\r\n               nav_link[x].classList.remove(\"nav_link\");\r\n           }\r\n       header.classList.remove(\"header_page\");\r\n       navigation.classList.add(\"show\");\r\n       nav.classList.add(\"show\");\r\n       document.body.classList.add(\"show\");\r\n     }\r\n   });\r\n\r\n   closeBtn.addEventListener(\"click\", () => {\r\n     if (navLeft < 0) {\r\n       for(var x=0; x < nav_link.length; x++)\r\n       {\r\n           nav_link[x].classList.remove(\"nav-link-response\");\r\n           nav_link[x].classList.add(\"nav_link\");\r\n       }\r\n       header.classList.add(\"header_page\");\r\n       navigation.classList.remove(\"show\");\r\n       nav.classList.remove(\"show\");\r\n       document.body.classList.remove(\"show\");\r\n     }\r\n });\r\n\r\n const navBar = document.querySelector(\".navigation_page\");\r\n const navHeight = navBar.getBoundingClientRect().height;\r\n window.addEventListener(\"scroll\", () => {\r\n   const scrollHeight = window.pageYOffset;\r\n   if (scrollHeight > navHeight) {\r\n     navBar.classList.add(\"fix-nav\");\r\n     for(var x=0; x < nav_link.length; x++)\r\n     {\r\n         nav_link[x].classList.add(\"nav-link-response\");\r\n         nav_link[x].classList.remove(\"nav_link\");\r\n     } \r\n\r\n   } else {\r\n     navBar.classList.remove(\"fix-nav\");\r\n     for(var x=0; x < nav_link.length; x++)\r\n     {\r\n         nav_link[x].classList.remove(\"nav-link-response\");\r\n         nav_link[x].classList.add(\"nav_link\");\r\n     }\r\n   }\r\n });\r\n\r\n });\r\n \r\n   const menu = (\r\n     <Menu>\r\n       <Menu.Item icon={<LoginOutlined />}>\r\n         <Link to=\"/login\">\r\n           Đăng nhập\r\n         </Link>\r\n       </Menu.Item>\r\n       <Menu.Divider />\r\n       <Menu.Item icon={<IconFont type=\"iconregister\" style={{ fontSize: '16px'}}/>}>\r\n         <Link to='/register'>\r\n           Đăng ký\r\n         </Link>\r\n       </Menu.Item>\r\n     </Menu>\r\n   );\r\n\r\n\r\n   const menu1 =(\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Link target=\"_blank\" class='user-name' onClick={handleProfile}>\r\n          <Avatar size={20} src={user.avatar} />\r\n          <span>{user.name}</span>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item icon={<IconFont type=\"iconhistory\" style={{ fontSize: '20px'}}/>}>\r\n        <Link to='/' onClick={handleHistory}>\r\n          Lịch sử mua hàng\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item icon={<IconFont type=\"iconlogout\" style={{ fontSize: '20px'}}/>}>\r\n        <Link to='/' onClick={handleLogout}>\r\n          Đăng xuất\r\n        </Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n   const normal = () =>{\r\n     return <>\r\n           <Link>\r\n               <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\r\n               <Avatar size={42} icon={<IconFont type=\"iconuser\" />} />\r\n             </Dropdown>\r\n           </Link>\r\n     </>\r\n   }\r\n\r\n   const userLink =() =>{\r\n     return <>\r\n         <Link>\r\n           <Dropdown overlay={menu1} placement=\"bottomLeft\" arrow>\r\n           <Avatar size={42} src={user.avatar} />\r\n         </Dropdown>\r\n         </Link>\r\n     </>\r\n\r\n   }\r\n   return (\r\n <>\r\n\r\n   <header id=\"header_page\" className=\"header_page\">\r\n     <nav className=\"navigation_page\">\r\n       <div className=\"nav-center container\">\r\n         <Link to='/' className=\"logo\">\r\n           <img src=\"https://res.cloudinary.com/lucy2619288/image/upload/v1618744835/logo/logo_primary_iamyl6.png\" alt=\"\" />\r\n         </Link>\r\n         <div className=\"nav-menu\">\r\n           <div className=\"nav-top\">\r\n             <div className=\"logo\">\r\n               <Link>\r\n                 <img src=\"https://res.cloudinary.com/lucy2619288/image/upload/v1618746342/logo/logo_edulxq.png\" alt=\"\" />\r\n               </Link>\r\n             </div>\r\n             <div className=\"close\">\r\n               <i className=\"fas fa-times\" />\r\n             </div>\r\n           </div>\r\n           <ul className=\"nav-list\">\r\n               <Link onClick={home} class=\"nav-item nav-link-page scroll-link\">Trang chủ</Link>\r\n               <Link onClick={adoption} class=\"nav-item nav-link-page scroll-link\">Nhận nuôi</Link>\r\n               <Link onClick={product} class=\"nav-item nav-link-page scroll-link\">Sản phẩm</Link>\r\n               <Link onClick={news} class=\"nav-item nav-link-page scroll-link\">Tin tức</Link>\r\n           </ul>\r\n         </div>\r\n\r\n         <div className=\"nav-icons\">\r\n           {\r\n              isLogged ? userLink() :  normal()\r\n           }\r\n           <Link to=\"/cart\">\r\n               <Badge count={cart.length}>\r\n                 <Avatar  size={42} icon={<IconFont type=\"iconcart2\"/>} />\r\n             </Badge>\r\n           </Link>\r\n       </div>\r\n\r\n\r\n         <div  className=\"hamburger\">\r\n           <i className=\"fas fa-bars\" />\r\n         </div>\r\n       </div>\r\n     </nav>\r\n   </header>\r\n </>\r\n   );\r\n}\r\n\r\nexport default HeaderPage;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\pets\\DetailPet.js",["432","433","434","435"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Row, Col} from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport Aos from 'aos'\r\nimport \"aos/dist/aos.css\"\r\n\r\n\r\nfunction DetailPet() {\r\n    const params = useParams()\r\n    const state = useContext(GlobalState)\r\n    const [pets, setPets] = state.petsAPI.pets\r\n    const [detailPet, setDetailPet] = useState([])\r\n    const [name_pet, setNamePet] = state.petsAPI.name_pet\r\n    const [statuses] = state.statusesAPI.statuses\r\n\r\n    const submit = async () => {\r\n        try {\r\n            window.location.href = \"https://forms.gle/iVPUAfwN8DTRDY9B7\";\r\n        } catch (err) {\r\n            window.location.href = \"https://forms.gle/iVPUAfwN8DTRDY9B7\";\r\n        }\r\n    }\r\n\r\n    console.log('params',params)\r\n    useEffect(() =>{\r\n        Aos.init({duration: 2000}); \r\n        if(params.id){\r\n\r\n            pets.forEach(pet => {\r\n                if(pet._id === params.id){\r\n                    localStorage.setItem('id_pet', pet._id)\r\n                    setDetailPet(pet)\r\n                    setNamePet(pet.name)\r\n                } \r\n            })\r\n        }\r\n    },[params.id, pets,setNamePet])\r\n\r\n    console.log('detailPet',detailPet)\r\n\r\n    if(detailPet.length === 0) return null;\r\n    return (\r\n        <>\r\n        <div className='container'>\r\n            <Row gutter={[16, 16]} style={{marginTop:'115px', marginBottom:'115px'}} >\r\n                <Col data-aos=\"zoom-out-right\" xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 9}} lx={{span: 9}}><img alt=\"\" className=\"lg:w-1/2 w-full object-cover object-center rounded border border-gray-200\" src={detailPet.images.url} /></Col>\r\n                <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 15}} lx={{span: 15}}>\r\n                    <div className=\"flex-wrap content-center \">\r\n                        <h1 className='detail_name text-5xl font-bold'>{detailPet.name}</h1>\r\n                        <ul className='detail_list text-2xl leading-10'>\r\n                            <li><strong>Mã: </strong>{detailPet.pet_code}</li>\r\n                            <li value={detailPet.status}><strong>Trạng thái: </strong>{statuses.find(_=>_._id === detailPet.status).name || \"\"}</li>\r\n                            <li><strong>Giống: </strong>{detailPet.species}</li>\r\n                            <li><strong>Màu sắc: </strong>{detailPet.color}</li>\r\n                            <li><strong>Cân nặng: </strong>{detailPet.weight} kg</li>\r\n                            <li><strong>Giới tính: </strong>{detailPet.sex}</li>\r\n                            <li><strong>Tiêm phòng: </strong>{detailPet.vaccination}</li>\r\n                            <li><strong>Thông tin thêm: </strong>{detailPet.moreinfor}</li>\r\n                            <li><button className=\"mt-9 bg-red-500 transition duration-700 ease-in-out ... transform hover:scale-110 text-white font-bold py-3 px-20 rounded-full focus:outline-none\" onClick={submit}>\r\n                            Đăng ký nhận nuôi\r\n                        </button></li>\r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailPet;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\products\\DetailProduct.js",["436","437","438","439","440","441","442","443","444"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Row, Col} from 'antd';\r\nimport {Avatar, Form, Button, Input, Rate,Dropdown,Menu } from 'antd';\r\nimport Aos from 'aos'\r\nimport \"aos/dist/aos.css\"\r\nimport { Image } from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport moment from 'moment';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nfunction DetailProduct() {\r\n    const params = useParams()\r\n    const state = useContext(GlobalState)\r\n    const [productsUi] = state.productsAPI.productsUi\r\n    const [detailProduct, setDetailProduct] = useState([])\r\n    const [name_product, setNameProduct] = state.productsAPI.name_product\r\n    const [categoriesListProduct] = state.categoriesAPI.categoriesListProduct\r\n    const [productsList] = state.productsAPI.productsList\r\n    const addCart = state.userAPI.addCart\r\n    const auth = useSelector(state => state.auth)\r\n    const token = useSelector(state => state.token)\r\n    const {user, isLogged} = auth\r\n    console.log({user})\r\n\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const [productId, setProductId] = state.productsAPI.productId\r\n    const [reviewsProduct, setReviewProductList] = state.productsAPI.reviewsProduct\r\n    const [callback, setCallback] = state.productsAPI.callback\r\n\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    console.log('params',params)\r\n\r\n    const IconFont = createFromIconfontCN({\r\n        scriptUrl: [\r\n          '//at.alicdn.com/t/font_2520839_3xfc6cekias.js', \r\n          '//at.alicdn.com/t/font_2520839_dpus1tqve4p.js',\r\n          '//at.alicdn.com/t/font_2520839_9pnrampty8l.js',\r\n          '//at.alicdn.com/t/font_2520839_a8dmq0qr21l.js'\r\n        ],\r\n      });\r\n\r\n    useEffect(() =>{\r\n        Aos.init({duration: 2000}); \r\n        if(params.id){\r\n\r\n          productsUi.forEach(product => {\r\n                if(product._id === params.id){\r\n                    localStorage.setItem('id_product', product._id)\r\n                    setDetailProduct(product)\r\n                    setNameProduct(product.content)\r\n                    setProductId(product._id)\r\n                } \r\n            })\r\n        }\r\n    },[params.id, productsUi,setNameProduct,setProductId])\r\n\r\n    \r\n    console.log('detailProduct',detailProduct)\r\n\r\n    const detail = async(id) => {\r\n        window.location.href = `/product/${id}`;\r\n    }\r\n\r\n    if(detailProduct.length === 0) return null;\r\n\r\n    const normal = () =>{\r\n        return <>\r\n                <Form.Item>\r\n                    <Avatar size={42} src={\"https://res.cloudinary.com/lucy2619288/image/upload/v1625926380/avatar/avatar_zm3zgh.png\"}/>\r\n                </Form.Item>\r\n        </>\r\n      }\r\n\r\n      const login = () =>{\r\n        return <>\r\n                <Form.Item>\r\n                    <Avatar size={42} src={user.avatar}/>\r\n                </Form.Item>\r\n        </>\r\n      }\r\n\r\n      const dropdownEditReview = (id,r,c) =>{\r\n        return <>\r\n                <Dropdown \r\n                overlay={\r\n                <Menu>\r\n                    <Menu.Item key=\"1\">\r\n                        <Button type=\"primary\" onClick={() => editReview(r,c)}>\r\n                            Sửa review\r\n                        </Button>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" >\r\n                        <Button type=\"primary\" danger onClick={() => deleteReview(id,productId)}>\r\n                            Xóa review\r\n                        </Button>\r\n                    </Menu.Item>\r\n                </Menu>\r\n        } \r\n        placement=\"bottomCenter\" arrow>       \r\n        <IconFont type=\"icondot_vertical\" />\r\n                </Dropdown>\r\n            </>\r\n      }\r\n\r\n/*       const menu = () => (\r\n        <Menu>\r\n          <Menu.Item key=\"1\">\r\n            <Button type=\"primary\">\r\n                Sửa review\r\n            </Button>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" >\r\n            <Button type=\"primary\" danger>\r\n                Xóa review\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      ); */\r\n\r\n      const onChangeComment = e => {\r\n          console.log(e.target.value)\r\n          setComment(e.target.value)\r\n      };\r\n\r\n      const onChangeRating= e => {\r\n        console.log(e)\r\n        setRating(e)\r\n    };\r\n\r\n    const createReview = async e =>{\r\n        const form = new FormData();\r\n        form.append('rating', rating)\r\n        form.append('comment', comment)\r\n        form.append('productId', productId)\r\n        const res = await axios.put('/api/review', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n        console.log(res)\r\n        setComment('')\r\n        setRating('')\r\n        setOnEdit(false)\r\n        setCallback(!callback)\r\n    }\r\n\r\n    const editReview = async (rating, comment) =>{\r\n        setRating(rating)\r\n        setComment(comment)\r\n        setOnEdit(true)\r\n    }\r\n\r\n    const deleteReview = async (id,productId) =>{\r\n        console.log(id)\r\n        console.log(productId)\r\n             await axios.delete(`/api/delete_review?id=${id}&productId=${productId}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setCallback(!callback) \r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"bg-gray-100\">\r\n            <div className=\"container-detail container pt-20 pb-20\">\r\n                <div className=\"group-detail\" data-aos=\"fade-up\" data-aos-easing=\"ease-out-cubic\">\r\n                    <Row gutter={[16, 16]}>\r\n                        <Col data-aos=\"zoom-out-right\" xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 9}} lx={{span: 9}}><Image width={300}  src={detailProduct.images.url} /></Col> \r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 15}} lx={{span: 15}}>\r\n                            <div className=\"name-detail\">\r\n                                <h3>{detailProduct.content}</h3>\r\n                            </div>\r\n                            <div className=\"group-description-more mt-10\">\r\n                                <div className=\"description-more-info\">\r\n                                    <p>Mã sản phẩm: <span>{detailProduct._id}</span></p>\r\n                                    <p>Loại sản phẩm: <span value={detailProduct.category}>{categoriesListProduct.find(_=>_._id) && categoriesListProduct.find(_=>_._id === detailProduct.category).name || \"\"}</span></p>\r\n                                    <p>Sản phẩm có sẵn: <span>{detailProduct.stock} sản phẩm</span></p>\r\n                                    <p>Đã bán: <span>{detailProduct.sold} sản phẩm</span></p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"group-description-more mt-10\">\r\n                                <div className=\"description-more-info\">\r\n                                    <Row gutter={[16, 16]}>\r\n                                        <Col data-aos=\"zoom-out-right\" xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 12}} lx={{span: 12}}>\r\n                                            <div class=\"space-x-4 my-4\">\r\n                                                <div>\r\n                                                    <h3 class=\"text-gray-400 text-2xl line-through\">{numberWithCommas((detailProduct.price*100)/(100-detailProduct.discount))} vnd</h3>\r\n                                                    <h1 class=\"text-red-500 text-5xl font-semibold\">{numberWithCommas(detailProduct.price)} vnd<span className=\"text-3xl\">(-{detailProduct.discount}%)</span></h1>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col data-aos=\"zoom-out-right\" xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 12}} lx={{span: 12}}>\r\n                                            {/* <p>Gía: <span>{numberWithCommas(detailProduct.price)} <u>vnd</u></span></p> */}\r\n                                            <button className=\"mt-9 bg-red-500 transition duration-700 ease-in-out ... transform hover:scale-110 text-white font-bold py-3 px-20 rounded-lg focus:outline-none\" onClick={() => addCart(detailProduct)}>\r\n                                                Thêm vào giỏ hàng\r\n                                            </button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </Col> \r\n                    </Row>\r\n                </div>\r\n\r\n                <div className=\"group-description\" data-aos=\"fade-up\" data-aos-easing=\"ease-out-cubic\">\r\n                    <h2>Mô tả sản phẩm</h2>\r\n                    <div dangerouslySetInnerHTML={{ __html: detailProduct.description }} /> \r\n                </div>\r\n\r\n                <div className=\"group-comment mt-10\">\r\n                    <Form>\r\n                        {\r\n                            isLogged? login(): normal()\r\n                        }\r\n                        <Form.Item>\r\n                            <Rate value={rating} onChange={onChangeRating} count={5} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <TextArea value={comment} rows={8} showCount maxLength={1000} onChange={onChangeComment} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {\r\n                                isLogged?\r\n                                <Button onClick={createReview} htmlType=\"submit\" type=\"primary\">\r\n                                   {\r\n                                       onEdit && \"Cập nhật\" || \"Bình luận\"\r\n                                   }\r\n                                </Button>\r\n                                :\r\n                                <Button type=\"primary\" disabled>\r\n                                    Bình luận\r\n                                </Button>\r\n                            }\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                \r\n                <div className=\"group-list-comment\">\r\n                    <div className=\"comment-title\">\r\n                        <h3 className=\"text-3xl\">Nhận xét của khách hàng<span>({reviewsProduct.length} bình luận)</span></h3>\r\n                    </div>\r\n\r\n                    <div className=\"comment-item\">\r\n                        {\r\n                             reviewsProduct.map(r =>(\r\n                                <Row align=\"top\" className=\"mt-5\">\r\n                                    <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 1}} lx={{span: 1}}>\r\n                                        <Avatar size={42} src={r.avatar}/>\r\n                                    </Col>\r\n\r\n                                    <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 23}} lx={{span: 23}}>\r\n                                        <Row align=\"top\" className=\"comment-content\">\r\n                                                <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 23}} lx={{span: 23}}>\r\n                                                \r\n                                                    <h3>{r.name}</h3>\r\n                                                    <p className=\"comment-time\">{moment(r.time).fromNow()}</p>\r\n                                                    <Rate value={r.rating} count={5} />\r\n                                                    <p>{r.comment}</p>\r\n                                                \r\n                                                </Col>\r\n                                                <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 1}} lx={{span: 1}}>\r\n                                                {\r\n                                                    reviewsProduct.find(_=>_.user) && reviewsProduct.find(_=>_.user === user._id) && dropdownEditReview(r._id, r.rating, r.comment) || \"\"\r\n                                                }\r\n                                                </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                             ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"group-products-type-detail group-products-type\" data-aos=\"fade-up\" data-aos-easing=\"ease-out-cubic\">\r\n                    <h3 className=\"text-3xl\">Sản phẩm cùng loại</h3>\r\n                    <div className=\"products-type\">\r\n                    {\r\n                        productsUi.map(product => (\r\n                            product.category === detailProduct.category \r\n                            &&\r\n                            <div className=\"item-products-type\" data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                <Link  onClick={() => detail(product._id)}>\r\n                                    <div className=\"ig-products-type\">\r\n                                        <img src={product.images.url} alt=\"\"></img>\r\n                                    </div>\r\n                                    <div className=\"name-products-type\">\r\n                                        <p>{product.content}</p>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"price-products-type\">\r\n                                    <div className=\"group-price\">\r\n                                        <span>{numberWithCommas(product.price)} <u>đ</u></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailProduct;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\products\\Products.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\cart\\Cart.js",["445","446","447","448"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col} from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport PaypalButton from './PaypalButton'\r\nimport { Drawer} from 'antd';\r\nimport \"aos/dist/aos.css\"\r\nimport Aos from 'aos'\r\nimport { Form, Input, Button, Select } from 'antd';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nfunction Cart() {\r\n    const state = useContext(GlobalState)\r\n    const [cart, setCart] = state.userAPI.cart\r\n    const [cities, setCities]= state.userAPI.cities\r\n    const [city, setCity] = useState('')\r\n\r\n    const [idCity, setIdCity]= useState('')\r\n    const [districts,setDistricts] =  useState([])\r\n    const [district,setDistrict] =  useState('')\r\n\r\n    const [idDistrict, setIdDistrict]= useState('')\r\n    const [wards,setWards] =  useState([])\r\n    const [idWard, setIdWard]= useState('')\r\n    const [ward,setWard] =  useState('')\r\n    const [address,setAddres] =  useState('')\r\n    const [phone, setPhone] =  useState('')\r\n\r\n    const [total, setTotal] = useState(0)\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.productsAPI.callback\r\n    const [visible, setVisible] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n    \r\n\r\n    const handleCity = async e => {\r\n        console.log('e.target.value city')\r\n        console.log(e)\r\n        //setCity(e)\r\n        setIdCity(e)\r\n    }\r\n\r\n    const handleDistrict = async e => {\r\n        console.log('e.target.value district')\r\n        console.log(e)\r\n        setIdDistrict(e)\r\n    }\r\n\r\n    const handleWard = async e => {\r\n        console.log('e.target.value Ward')\r\n        console.log(e)\r\n        setIdWard(e)\r\n        \r\n    }\r\n\r\n    const handleAddress = async e => {\r\n        console.log('Address', e.target.value+\" \"+ ward + \" \" + district + \" \" + city);\r\n        setAddres(e.target.value+\" \"+ ward + \" \" + district + \" \" + city)\r\n      };\r\n\r\n      const handlePhone = e => {\r\n        console.log('Phone', e.target.value);\r\n        setPhone(e.target.value)\r\n      };\r\n\r\n      const tailLayout = {\r\n        wrapperCol: {span: 24 },\r\n      };\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n      };\r\n    \r\n      const onClose = () => {\r\n        setVisible(false);\r\n      };\r\n\r\n\r\n    useEffect(() =>{\r\n        Aos.init({duration: 2000}); \r\n        const getTotal = () =>{\r\n            const total = cart.reduce((prev, item) => {\r\n                console.log(\"prev\",prev)\r\n                console.log(\"item.price\",item.price)\r\n                console.log(\"item.quantity\",item.quantity)\r\n                return prev + (item.price * item.quantity)\r\n            },0)\r\n\r\n            setTotal(total)\r\n        }\r\n\r\n        getTotal()\r\n\r\n\r\n        if(idCity)\r\n        {\r\n            const getDistricts = async () =>{\r\n                const res = await axios.get(`/user/district/${idCity}`)\r\n                console.log(res.data.district)\r\n                setDistricts(res.data.district)\r\n            }\r\n            getDistricts()\r\n\r\n            \r\n            if(cities.find(_ =>_.ID === idCity))\r\n            {\r\n                const nameCity = cities.find(_ =>_.ID === idCity).Title\r\n                console.log({nameCity})\r\n                setCity(nameCity)\r\n            }\r\n            setIdCity('')\r\n        }\r\n\r\n        if(idDistrict)\r\n        {\r\n            const getWards = async () =>{\r\n                const res = await axios.get(`/user/ward/${idDistrict}`)\r\n                console.log(res.data.ward)\r\n                setWards(res.data.ward)\r\n            }\r\n            getWards()\r\n\r\n            if(districts.find(_ =>_.ID === idDistrict))\r\n            {\r\n                const nameDistrict = districts.find(_ =>_.ID === idDistrict).Title\r\n                console.log({nameDistrict})\r\n                setDistrict(nameDistrict)\r\n            } \r\n            setIdDistrict('')\r\n        }\r\n\r\n        if(idWard)\r\n        {\r\n            if(wards.find(_ =>_.ID === idWard))\r\n            {\r\n                const nameWard = wards.find(_ =>_.ID === idWard).Title\r\n                console.log({nameWard})\r\n                setWard(nameWard)\r\n            }\r\n        }\r\n\r\n    },[cart,setDistricts,idCity,setCity,cities,idDistrict,districts,idWard,wards])\r\n\r\n    const addToCart = async (cart) =>{\r\n        await axios.patch('/user/addcart', {cart}, {\r\n            headers: {Authorization: token}\r\n        })\r\n    }\r\n\r\n    const increment = (id) =>{\r\n        cart.forEach(item => {\r\n            if(item._id === id){\r\n                item.quantity += 1\r\n            }\r\n        })\r\n\r\n        setCart([...cart])\r\n        console.log({cart})\r\n        addToCart(cart)\r\n    }\r\n\r\n    const decrement = (id) =>{\r\n        cart.forEach(item => {\r\n            if(item._id === id){\r\n                item.quantity === 1 ? item.quantity = 1 : item.quantity -= 1\r\n            }\r\n        })\r\n\r\n        setCart([...cart])\r\n        console.log({cart})\r\n        addToCart(cart)\r\n    }\r\n\r\n    const removeProduct = (id) =>{\r\n        if(window.confirm(\"Do you want to delete this product?\")){\r\n            cart.forEach((item, index) => {\r\n                if(item._id === id){\r\n                    cart.splice(index, 1)\r\n                }\r\n            })\r\n\r\n            setCart([...cart])\r\n            addToCart(cart)\r\n        }\r\n    }\r\n\r\n    const tranSuccess = async(payment) => {\r\n        console.log('test paypal')\r\n        const {paymentID, address} = payment;\r\n        console.log({cart})\r\n\r\n        await axios.post('/api/payment', {cart, paymentID, address, status:2,type:2,total}, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        setCart([])\r\n        addToCart([])\r\n/*         \r\n        console.log(\"test alert transucess\") */\r\n        showSuccessMsg('success',\"Bạn đã đặt hàng thành công\") \r\n\r\n        setCallback(!callback)\r\n\r\n    }\r\n\r\n    const orderSuccess = async() => {\r\n        console.log({cart})\r\n        const form = new FormData();\r\n        form.append('address', address)\r\n        form.append('phone', phone)\r\n        form.append('total', total)\r\n        if(!city)\r\n        {\r\n            return showErrMsg('error',\"Bạn chưa chọn thành phố\")\r\n        }else if(!district){\r\n            return showErrMsg('error',\"Bạn chưa chọn quận/huyện\")\r\n        }else if(!ward)\r\n        {\r\n            return showErrMsg('error',\"Bạn chưa chọn phường/xã\")\r\n        }else if(!address)\r\n        {\r\n            return showErrMsg('error',\"Bạn chưa nhập địa chỉ\")\r\n        }else if(!phone){\r\n            return showErrMsg('error',\"Bạn chưa nhập số điện thoại\")\r\n        }\r\n\r\n        await axios.post('/api/payment', {cart, address,phone,total,status:1, type:1}, {\r\n            headers: {Authorization: token}\r\n        })\r\n        \r\n        setCart([])\r\n        addToCart([])\r\n/*         \r\n        console.log(\"test alert transucess\") */\r\n        showSuccessMsg('success',\"Bạn đã đặt hàng thành công. Hãy nghe điện thoại để xác nhận đơn hàng nhé!\") \r\n\r\n        setCallback(!callback)\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n /*    if(cart.length === 0) return<>\r\n \r\n        </> */\r\n\r\n    return (\r\n        <>\r\n        {\r\n            cart.length === 0 && <div className=\"bg-gray-100\">\r\n            <div className=\"container pt-40 pb-40 container-card\">\r\n                <div className=\"group-card\">\r\n                    <h2>Giỏ hàng <span>(0 sản phẩm)</span></h2>\r\n                    <div className=\"no-data-cart\">\r\n                        <h3>Không có sản phẩm nào trong giỏ hàng của bạn</h3>\r\n                        <Link className=\"transition duration-700 ease-in-out ... transform hover:scale-110 focus:outline-none\" to=\"/product\">Tiếp tục mua sắm</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ||\r\n        <div className=\"bg-gray-100\">\r\n        <div className=\"container pt-40 pb-40 container-card\">\r\n            <div className=\"group-card\">\r\n                <h2 className=\"text-4xl\">Giỏ hàng <span>({cart.length}  sản phẩm)</span></h2>\r\n                <div className=\"group-card-item\">\r\n                    <Row gutter={[16, 16]}>\r\n                            \r\n                                <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 16}} lx={{span: 16}}>\r\n                                {\r\n                                    cart.map(product =>(\r\n                                    <div class=\"frames-card-item\" key={product._id}>\r\n                                        <button onClick={() => removeProduct(product._id)} className=\"delete-item\">\r\n                                            <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                        </button> \r\n                                        <div className=\"card-items\">\r\n                                            <Row gutter={[16, 16]} justify=\"space-around\">\r\n                                                <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                                                    <Avatar shape=\"square\" size={120} src={product.images.url}/>\r\n                                                </Col>\r\n                                                <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                                                    <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                                                    <p>{product.content}</p>\r\n                                                </Col>\r\n                                                <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                                                    <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                                                    <p className=\"price text-4xl\">{numberWithCommas(product.price)} <u>đ</u></p>\r\n                                                </Col>\r\n                                                <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                                                    <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                                                    <div className=\"quantity-number\">\r\n                                                        <button onClick={() => decrement(product._id)} class=\"click-left\">-</button>\r\n                                                        <div>{product.quantity}</div>\r\n                                                        <button onClick={() => increment(product._id)} class=\"click-right\">+</button>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row> \r\n                                            <div className=\"total-item\">\r\n                                                <p className=\"total-sum font-bold text-3xl\">\r\n                                                    Tổng cộng: {numberWithCommas(product.price*product.quantity)} <u>đ</u>\r\n                                                </p>  \r\n                                            </div>\r\n                                        </div>                                            \r\n                                    </div>))\r\n                                }\r\n                                </Col>\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <div className=\"card-total-money\">\r\n                                <div className=\"total-money\">\r\n                                    <h3>Thành tiền</h3>\r\n                                    <div className=\" mb-10 group-total-money\">\r\n                                        <p>{numberWithCommas(total)} <u>đ</u></p>\r\n                                    </div>\r\n                                    <PaypalButton\r\n                                    total={total*4/100000}\r\n                                    tranSuccess={tranSuccess}/>\r\n                                    <button onClick={showDrawer} className=\"check-out transition duration-700 ease-in-out ... transform hover:scale-110 focus:outline-none\">Thanh toán khi nhận hàng</button>\r\n                                    <Drawer\r\n                                        title=\"Thông tin nhận hàng\"\r\n                                        placement=\"right\"\r\n                                        closable={false}\r\n                                        onClose={onClose}\r\n                                        visible={visible}\r\n                                        width={380}\r\n                                    >\r\n                                    <Form\r\n                                        layout=\"vertical\"\r\n                                    >\r\n                                        <Form.Item\r\n                                        name=\"city\"\r\n                                        label=\"Tỉnh/ Thành phố\"\r\n                                        rules={[{ required: true, message: 'Vui lòng chọn tỉnh thành phố' }]}\r\n                                        >\r\n                                            <Select\r\n                                                placeholder=\"Tỉnh/ Thành phố\"\r\n                                                onChange={handleCity}\r\n                                                value={city}\r\n                                                allowClear>\r\n                                                {\r\n                                                    cities.map(option =><Option key={option.ID} value={option.ID}>{option.Title}</Option>)\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                        name=\"district\"\r\n                                        label=\"Quận/ Huyện\"\r\n                                        rules={[{ required: true, message: 'Vui lòng chọn quận huyện' }]}\r\n                                        >\r\n                                            <Select\r\n                                                placeholder=\"Quận/ Huyện\"\r\n                                                onChange={handleDistrict}\r\n                                                value={district}\r\n                                                allowClear\r\n                                            >\r\n                                                {\r\n                                                    districts.map(option =><Option key={option.ID} value={option.ID}>{option.Title}</Option>)\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                        name=\"ward\"\r\n                                        label=\"Phường, xã & thị trấn\"\r\n                                        rules={[{ required: true, message: 'Vui lòng chọn phường xã' }]}\r\n                                        \r\n                                        >\r\n                                            <Select\r\n                                                placeholder=\"Phường, xã & thị trấn\"\r\n                                                onChange={handleWard}\r\n                                                allowClear\r\n                                                value={ward}\r\n                                            >\r\n                                                {\r\n                                                    wards.map(option =><Option key={option.ID} value={option.ID}>{option.Title}</Option>)\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n\r\n\r\n                                        <Form.Item\r\n                                        name=\"address\"\r\n                                        label=\"Địa chỉ(số nhà, tên đường)\"\r\n                                        rules={[{ required: true, message: 'Vui lòng nhập địa chỉ' }]}\r\n                                        >\r\n                                           <TextArea showCount maxLength={100} onChange={handleAddress} />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                        name=\"phone\"\r\n                                        label=\"Số điện thoại\"\r\n                                        rules={[{ required: true, message: 'Vui lòng nhập số điện thoại' }]}\r\n                                        >\r\n                                           <Input placeholder=\"Số điện thoại\" value={phone}onChange={handlePhone}/>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item {...tailLayout}>\r\n                                            <Button onClick={orderSuccess} className=\"order\" type=\"primary\" htmlType=\"submit\">Đặt hàng ngay</Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                    </Drawer>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Topic.js",["449","450","451"],"import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\n\r\nfunction Topic() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [topics] = state.topicsAPI.topics\r\n    const [topic, setTopic] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.topicsAPI.callback\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const createTopic = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(onEdit){\r\n                const res = await axios.put(`/api/topic/${id}`, {name: topic}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Update is successful')\r\n            }else{\r\n                const res = await axios.post('/api/topic', {name: topic}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Create is successful')\r\n            }\r\n            setOnEdit(false)\r\n            setTopic('') \r\n            setCallback(!callback)\r\n            \r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n    const editTopic = async (id, name) =>{\r\n        setID(id)\r\n        setTopic(name)\r\n        setOnEdit(true)\r\n        setSuccess('Update is successful')\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n    const deleteTopic = async id =>{\r\n        try {\r\n            const res = await axios.delete(`/api/topic/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setSuccess('Delete is successful')\r\n            setCallback(!callback)\r\n        } catch (err) {\r\n            setErr(err.response.data.msg)\r\n        }\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Topics</h2>\r\n                    \r\n                    <form className='category' onSubmit={createTopic}>\r\n                    <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                        <Col span={8}><input type=\"text\" name=\"type\" placeholder=\"Type's name\" value={topic} required onChange={e => setTopic(e.target.value)} /></Col>\r\n                        <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                    </Row>\r\n                    </form>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    topics.map(topic =>(\r\n                                        <tr key={topic._id}>\r\n                                            <td>{topic._id}</td>\r\n                                            <td>{topic.name}</td>\r\n                                            <td>\r\n                                                <Link onClick={() => editTopic(topic._id, topic.name)}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <Link onClick={() => deleteTopic(topic._id)}>\r\n                                                    <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Topic;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\TypePage.js",["452","453","454"],"import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\n\r\nfunction TypePage() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [typePage] = state.categoriesAPI.typePage\r\n    const [type, setType] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.categoriesAPI.callback\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const createType = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(onEdit){\r\n                const res = await axios.put(`/api/typepage/${id}`, {name: type}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Update is successful')\r\n            }else{\r\n                const res = await axios.post('/api/typepage', {name: type}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Create is successful')\r\n            }\r\n            setOnEdit(false)\r\n            setType('') \r\n            setCallback(!callback)\r\n            \r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n\r\n    const editType = async (id, name) =>{\r\n        setID(id)\r\n        setType(name)\r\n        setOnEdit(true)\r\n        setSuccess('Update is successful')\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n    const deleteType = async id =>{\r\n        try {\r\n            const res = await axios.delete(`/api/typepage/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setSuccess('Delete is successful')\r\n            setCallback(!callback)\r\n        } catch (err) {\r\n            setErr(err.response.data.msg)\r\n        }\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Types</h2>\r\n                    \r\n                    <form className='category' onSubmit={createType}>\r\n                    <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                        <Col span={8}><input type=\"text\" name=\"type\" placeholder=\"Type's name\" value={type} required onChange={e => setType(e.target.value)} /></Col>\r\n                        <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                    </Row>\r\n                    </form>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    typePage.map(type =>(\r\n                                        <tr key={type._id}>\r\n                                            <td>{type._id}</td>\r\n                                            <td>{type.name}</td>\r\n                                            <td>\r\n                                                <Link onClick={() => editType(type._id, type.name)}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <Link onClick={() => deleteType(type._id)}>\r\n                                                    <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TypePage;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\history\\OrderHistory.js",["455","456","457","458","459","460","461","462","463","464","465","466"],"import React, {useContext, useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Tabs, Button } from 'antd';\r\nimport { Row, Col} from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport \"aos/dist/aos.css\"\r\nimport Aos from 'aos'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi';\r\nimport { Tag } from 'antd';\r\nmoment.locale('vi');\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction OrderHistory() {\r\n  const state = useContext(GlobalState)\r\n  const [history, setHistory] = state.userAPI.history\r\n  const token = useSelector(state => state.token)\r\n  const [callbackPayment, setCallbackPayment] = state.userAPI.callbackPayment\r\n\r\n  const IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n      '//at.alicdn.com/t/font_2520839_vl6foh3kj58.js'\r\n    ],\r\n  });\r\n\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n  useEffect(() => {\r\n    Aos.init({duration: 2000});\r\n  })\r\n\r\n  const handleUpdate = async (id) => {\r\n    console.log({id})\r\n    const res = await axios.patch(`/api/update_payment/${id}`, {status:0},{\r\n        headers: {Authorization: token}\r\n    })\r\n    console.log({res})\r\n    showSuccessMsg('success',\"Hủy thành công\")\r\n    setCallbackPayment(!callbackPayment)\r\n  }\r\n\r\n  const rederContentTab1 = (his) =>{\r\n    let myHistory =[];\r\n    his.map((h) => {\r\n        myHistory.push(\r\n          <Row gutter={[16, 16]}>\r\n          <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n            <div className=\"card-history\" key={h._id}>\r\n              {\r\n                h.cart.map(_ =>(\r\n                  <div className=\"card-buy\">\r\n                    <Row gutter={[16, 16]} justify=\"space-around\">\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                        <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                          <p>{_.content}</p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                          <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                        <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                        <div>{_.quantity}</div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ))\r\n              }\r\n\r\n              <div className=\"card-infor\">\r\n                <div className=\"sum-total\">\r\n                  <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                  <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                  {\r\n                    h.status === 1 &&\r\n                    <div className=\"button-more-infor\">\r\n                      <Tag className=\"cursor-pointer ...\" color=\"#f50\" onClick={() => handleUpdate(h._id)}  size=\"small\" danger icon={<IconFont type=\"iconcancel\" style={{ fontSize: '18px'}}/>}>\r\n                          Hủy đơn hàng\r\n                      </Tag>\r\n                      <Tag color=\"#2db7f5\">\r\n                        {h.statusName}\r\n                      </Tag>\r\n                  </div>\r\n                  || \r\n                  <div className=\"button-more-infor\">\r\n                  <Tag color=\"#2db7f5\">\r\n                      {h.statusName}\r\n                  </Tag>\r\n                </div>\r\n                  }\r\n                  <div className=\"infor-detail mt-5\">\r\n                    \r\n                  {\r\n                    h.type === 1\r\n                    &&\r\n                    <>\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address}</span></p>\r\n                    </div>\r\n                    <div className=\"group-phone\">\r\n                      <p>Số điện thoại: <span>{h.phone}</span></p>\r\n                    </div>\r\n                    </>\r\n                    ||\r\n                    <>\r\n                    <div className=\"group-payment\">\r\n                      <p>PaymentID: <span>{h.paymentID}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address.line1 + \" - \" + h.address.city}</span></p>\r\n                    </div>\r\n                    </>\r\n                  }\r\n{/*                     <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address}</span></p>\r\n                    </div> */}\r\n\r\n\r\n\r\n                    <div className=\"group-type\">\r\n                      <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-day\">\r\n                      <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        );\r\n  });\r\n  return myHistory;\r\n}\r\n\r\n  const rederContentTab2 = (his) =>{\r\n    let myHistory =[];\r\n    his.map((h) => {\r\n      if(h.status === 1)\r\n      {\r\n        myHistory.push(\r\n          <Row gutter={[16, 16]}>\r\n            <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n              <div className=\"card-history\" key={h._id}>\r\n                {\r\n                  h.cart.map(_ =>(\r\n                    <div className=\"card-buy\">\r\n                      <Row gutter={[16, 16]} justify=\"space-around\">\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                          <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                        </Col>\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                            <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                            <p>{_.content}</p>\r\n                        </Col>\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                            <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                            <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                        </Col>\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                          <div>{_.quantity}</div>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  ))\r\n                }\r\n\r\n                <div className=\"card-infor\">\r\n                  <div className=\"sum-total\">\r\n                    <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                    <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                    <div className=\"button-more-infor\">\r\n                      <Tag className=\"cursor-pointer ...\" color=\"#f50\" onClick={() => handleUpdate(h._id)}  size=\"small\" danger icon={<IconFont type=\"iconcancel\" style={{ fontSize: '18px'}}/>}>\r\n                          Hủy đơn hàng\r\n                      </Tag>\r\n                    </div>\r\n                    <div className=\"infor-detail mt-5\">\r\n                      <div className=\"group-address\">\r\n                        <p>Địa chỉ: <span>{h.address}</span></p>\r\n                      </div>\r\n\r\n                      <div className=\"group-phone\">\r\n                        <p>Số điện thoại: <span>{h.phone}</span></p>\r\n                      </div>\r\n\r\n                      <div className=\"group-type\">\r\n                        <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                      </div>\r\n\r\n                      <div className=\"group-day\">\r\n                        <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      }\r\n\r\n  });\r\n  return myHistory;\r\n}\r\n\r\nconst rederContentTab3 = (his) =>{\r\n  let myHistory =[];\r\n  his.map((h) => {\r\n    if(h.status === 2)\r\n    {\r\n      myHistory.push(\r\n        <Row gutter={[16, 16]}>\r\n          <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n            <div className=\"card-history\" key={h._id}>\r\n              {\r\n                h.cart.map(_ =>(\r\n                  <div className=\"card-buy\">\r\n                    <Row gutter={[16, 16]} justify=\"space-around\" align=\"middle\">\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                        <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                          <p>{_.content}</p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                          <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                        <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                        <div>{_.quantity}</div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ))\r\n              }\r\n\r\n              <div className=\"card-infor\">\r\n                <div className=\"sum-total\">\r\n                  <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                  <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                  <div className=\"infor-detail mt-5\">\r\n                  <div className=\"group-payment\">\r\n                      <p>PaymentID: <span>{h.paymentID}</span></p>\r\n                  </div>\r\n\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address.line1 + \" - \" + h.address.city}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-type\">\r\n                      <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-day\">\r\n                      <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n});\r\nreturn myHistory;\r\n}\r\n\r\n\r\n\r\nconst rederContentTab4 = (his) =>{\r\n  let myHistory =[];\r\n  his.map((h) => {\r\n    if(h.status === 0)\r\n    {\r\n      myHistory.push(\r\n        <Row gutter={[16, 16]}>\r\n          <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n            <div className=\"card-history\" key={h._id}>\r\n              {\r\n                h.cart.map(_ =>(\r\n                  <div className=\"card-buy\">\r\n                    <Row gutter={[16, 16]} justify=\"space-around\" align=\"middle\">\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                        <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                          <p>{_.content}</p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                          <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                        <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                        <div>{_.quantity}</div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ))\r\n              }\r\n\r\n              <div className=\"card-infor\">\r\n                <div className=\"sum-total\">\r\n                  <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                  <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                  <div className=\"infor-detail mt-5\">\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-phone\">\r\n                      <p>Số điện thoại: <span>{h.phone}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-type\">\r\n                      <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-day\">\r\n                      <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n});\r\nreturn myHistory;\r\n}\r\n\r\nconst panes = [\r\n  { title: 'Tất cả', content: rederContentTab1(history), key: '1' },\r\n  { title: 'Chưa thanh toán', content: rederContentTab2(history), key: '2' },\r\n  { title: 'Đã thanh toán', content:rederContentTab3(history) ,key: '3' },\r\n  { title: 'Đã hủy', content:rederContentTab4(history), key: '4' }\r\n];\r\n  return (\r\n  <div className=\"bg-gray-100\">\r\n    <div className=\"container pt-20 pb-20\">\r\n      <div className=\"container-history-cart\">\r\n        <h2 className=\"text-4xl mb-10\">Lịch sử mua hàng</h2>\r\n        <Tabs>\r\n          {panes.map(_ =>(\r\n            <TabPane tab={_.title} key={_.key}>\r\n            {_.content}\r\n            </TabPane>\r\n          ))}\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\OrderHistoryAdmin.js",["467","468","469","470","471","472","473","474","475","476","477","478"],"import React, {useContext, useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Tabs, Button } from 'antd';\r\nimport { Row, Col} from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport \"aos/dist/aos.css\"\r\nimport Aos from 'aos'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi';\r\nimport { Tag } from 'antd';\r\nmoment.locale('vi');\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction OrderHistory() {\r\n  const state = useContext(GlobalState)\r\n  const [history, setHistory] = state.userAPI.history\r\n  const token = useSelector(state => state.token)\r\n  const [callbackPayment, setCallbackPayment] = state.userAPI.callbackPayment\r\n\r\n  const IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n      '//at.alicdn.com/t/font_2520839_vl6foh3kj58.js'\r\n    ],\r\n  });\r\n\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n  useEffect(() => {\r\n    Aos.init({duration: 2000});\r\n  })\r\n\r\n  const handleUpdate = async (id) => {\r\n    console.log({id})\r\n    const res = await axios.patch(`/api/update_payment/${id}`, {status:0},{\r\n        headers: {Authorization: token}\r\n    })\r\n    console.log({res})\r\n    showSuccessMsg('success',\"Hủy thành công\")\r\n    setCallbackPayment(!callbackPayment)\r\n  }\r\n\r\n  const rederContentTab1 = (his) =>{\r\n    let myHistory =[];\r\n    his.map((h) => {\r\n        myHistory.push(\r\n          <Row gutter={[16, 16]}>\r\n          <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n            <div className=\"card-history\" key={h._id}>\r\n              {\r\n                h.cart.map(_ =>(\r\n                  <div className=\"card-buy\">\r\n                    <Row gutter={[16, 16]} justify=\"space-around\" align=\"middle\">\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                        <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                          <p>{_.content}</p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                          <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                        <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                        <div>{_.quantity}</div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ))\r\n              }\r\n\r\n              <div className=\"card-infor\">\r\n                <div className=\"sum-total\">\r\n                  <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                  <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                  {\r\n                    h.status === 1 &&\r\n                    <div className=\"button-more-infor\">\r\n                      <Tag className=\"cursor-pointer ...\" color=\"#f50\" onClick={() => handleUpdate(h._id)}  size=\"small\" danger icon={<IconFont type=\"iconcancel\" style={{ fontSize: '18px'}}/>}>\r\n                          Hủy đơn hàng\r\n                      </Tag>\r\n                      <Tag color=\"#2db7f5\">\r\n                        {h.statusName}\r\n                      </Tag>\r\n                  </div>\r\n                  || \r\n                  <div className=\"button-more-infor\">\r\n                  <Tag color=\"#2db7f5\">\r\n                      {h.statusName}\r\n                  </Tag>\r\n                </div>\r\n                  }\r\n                  <div className=\"infor-detail mt-5\">\r\n                    <div className=\"group-phone\">\r\n                        <p>Tên người mua: <span>{h.name}</span></p>\r\n                    </div>\r\n                    <div className=\"group-phone\">\r\n                        <p>Mail người mua: <span>{h.email}</span></p>\r\n                    </div>\r\n                    \r\n                  {\r\n                    h.type === 1\r\n                    &&\r\n                    <>\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address}</span></p>\r\n                    </div>\r\n                    <div className=\"group-phone\">\r\n                      <p>Số điện thoại: <span>{h.phone}</span></p>\r\n                    </div>\r\n                    </>\r\n                    ||\r\n                    <>\r\n                    <div className=\"group-payment\">\r\n                      <p>PaymentID: <span>{h.paymentID}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address.line1 + \" - \" + h.address.city}</span></p>\r\n                    </div>\r\n                    </>\r\n                  }\r\n{/*                     <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address}</span></p>\r\n                    </div> */}\r\n\r\n\r\n\r\n                    <div className=\"group-type\">\r\n                      <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-day\">\r\n                      <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        );\r\n  });\r\n  return myHistory;\r\n}\r\n\r\n  const rederContentTab2 = (his) =>{\r\n    let myHistory =[];\r\n    his.map((h) => {\r\n      if(h.status === 1)\r\n      {\r\n        myHistory.push(\r\n          <Row gutter={[16, 16]}>\r\n            <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n              <div className=\"card-history\" key={h._id}>\r\n                {\r\n                  h.cart.map(_ =>(\r\n                    <div className=\"card-buy\">\r\n                      <Row gutter={[16, 16]} justify=\"space-around\" align=\"middle\">\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                          <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                        </Col>\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                            <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                            <p>{_.content}</p>\r\n                        </Col>\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                            <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                            <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                        </Col>\r\n                        <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                          <div>{_.quantity}</div>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  ))\r\n                }\r\n\r\n                <div className=\"card-infor\">\r\n                  <div className=\"sum-total\">\r\n                    <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                    <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                    <div className=\"button-more-infor\">\r\n                      <Tag className=\"cursor-pointer ...\" color=\"#f50\" onClick={() => handleUpdate(h._id)}  size=\"small\" danger icon={<IconFont type=\"iconcancel\" style={{ fontSize: '18px'}}/>}>\r\n                          Hủy đơn hàng\r\n                      </Tag>\r\n                    </div>\r\n                    <div className=\"infor-detail mt-5\">\r\n                      <div className=\"group-phone\">\r\n                          <p>Tên người mua: <span>{h.name}</span></p>\r\n                      </div>\r\n                      <div className=\"group-phone\">\r\n                          <p>Mail người mua: <span>{h.email}</span></p>\r\n                      </div>\r\n                      <div className=\"group-address\">\r\n                        <p>Địa chỉ: <span>{h.address}</span></p>\r\n                      </div>\r\n\r\n                      <div className=\"group-phone\">\r\n                        <p>Số điện thoại: <span>{h.phone}</span></p>\r\n                      </div>\r\n\r\n                      <div className=\"group-type\">\r\n                        <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                      </div>\r\n\r\n                      <div className=\"group-day\">\r\n                        <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      }\r\n\r\n  });\r\n  return myHistory;\r\n}\r\n\r\nconst rederContentTab3 = (his) =>{\r\n  let myHistory =[];\r\n  his.map((h) => {\r\n    if(h.status === 2)\r\n    {\r\n      myHistory.push(\r\n        <Row gutter={[16, 16]}>\r\n          <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n            <div className=\"card-history\" key={h._id}>\r\n              {\r\n                h.cart.map(_ =>(\r\n                  <div className=\"card-buy\">\r\n                    <Row gutter={[16, 16]} justify=\"space-around\" align=\"middle\">\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                        <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                          <p>{_.content}</p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                          <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                        <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                        <div>{_.quantity}</div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ))\r\n              }\r\n\r\n              <div className=\"card-infor\">\r\n                <div className=\"sum-total\">\r\n                  <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                  <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                  <div className=\"infor-detail mt-5\">\r\n                    <div className=\"group-phone\">\r\n                        <p>Tên người mua: <span>{h.name}</span></p>\r\n                    </div>\r\n                    <div className=\"group-phone\">\r\n                        <p>Mail người mua: <span>{h.email}</span></p>\r\n                    </div>\r\n                  <div className=\"group-payment\">\r\n                      <p>PaymentID: <span>{h.paymentID}</span></p>\r\n                  </div>\r\n\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address.line1 + \" - \" + h.address.city}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-type\">\r\n                      <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-day\">\r\n                      <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n});\r\nreturn myHistory;\r\n}\r\n\r\n\r\n\r\nconst rederContentTab4 = (his) =>{\r\n  let myHistory =[];\r\n  his.map((h) => {\r\n    if(h.status === 0)\r\n    {\r\n      myHistory.push(\r\n        <Row gutter={[16, 16]}>\r\n          <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}}>\r\n            <div className=\"card-history\" key={h._id}>\r\n              {\r\n                h.cart.map(_ =>(\r\n                  <div className=\"card-buy\">\r\n                    <Row gutter={[16, 16]} justify=\"space-around\" align=\"middle\">\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                        <Avatar shape=\"square\" size={120} src={_.images.url}/>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Sản phẩm</h3>\r\n                          <p>{_.content}</p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                          <h3 className=\"text-3xl font-bold\">Gía</h3>\r\n                          <p className=\"price text-3xl\">{numberWithCommas(_.price)} <u>đ</u></p>\r\n                      </Col>\r\n                      <Col data-aos=\"zoom-out-left\"  xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} className=\"text-center\">\r\n                        <h3 className=\"text-3xl font-bold\">Số lượng</h3>\r\n                        <div>{_.quantity}</div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ))\r\n              }\r\n\r\n              <div className=\"card-infor\">\r\n                <div className=\"sum-total\">\r\n                  <h5 className=\"text-2xl font-bold\">Tổng cộng</h5>\r\n                  <p className=\"price text-4xl\">{numberWithCommas(h.total)} <u>đ</u></p>\r\n                  <div className=\"infor-detail mt-5\">\r\n                    <div className=\"group-user\">\r\n                        <p>Tên người mua: <span>{h.name}</span></p>\r\n                    </div>\r\n                    <div className=\"group-mail\">\r\n                        <p>Mail người mua: <span>{h.email}</span></p>\r\n                    </div>\r\n                    <div className=\"group-address\">\r\n                      <p>Địa chỉ: <span>{h.address}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-phone\">\r\n                      <p>Số điện thoại: <span>{h.phone}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-type\">\r\n                      <p>Hình thức thanh toán: <span>{h.typeName}</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"group-day\">\r\n                      <p>Ngày đặt hàng: <span>{`${moment(h.createdAt).fromNow()}, ${moment(h.createdAt).format('LLLL')}`}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n});\r\nreturn myHistory;\r\n}\r\n\r\nconst panes = [\r\n  { title: 'Tất cả', content: rederContentTab1(history), key: '1' },\r\n  { title: 'Chưa thanh toán', content: rederContentTab2(history), key: '2' },\r\n  { title: 'Đã thanh toán', content:rederContentTab3(history) ,key: '3' },\r\n  { title: 'Đã hủy', content:rederContentTab4(history), key: '4' }\r\n];\r\n  return (\r\n  <div className=\"bg-gray-100\">\r\n    <div className=\"pt-20 pb-20\">\r\n      <div className=\"container-history-cart\">\r\n        <h2 className=\"text-4xl mb-10\">Lịch sử mua hàng</h2>\r\n        <Tabs>\r\n          {panes.map(_ =>(\r\n            <TabPane tab={_.title} key={_.key}>\r\n            {_.content}\r\n            </TabPane>\r\n          ))}\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\admin\\Review.js",["479","480","481","482","483","484","485","486","487","488","489"],"import React,{useContext,useState} from 'react';\r\nimport { Input, Space } from 'antd';\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport moment from 'moment';\r\nimport { Modal, Button } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst { Search,TextArea } = Input;\r\n\r\nfunction Review() {\r\n    const state = useContext(GlobalState)\r\n    const token = useSelector(state => state.token)\r\n    \r\n\r\n    const [productId, setProductId] = state.productsAPI.productId\r\n    const [reviewsProduct] = state.productsAPI.reviewsProduct\r\n    const [comment, setComment] = useState('')\r\n    const [onAddReply, setOnAddReply] = useState(false)\r\n    const [onEditReply, setOnEditReply] = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n    const [callback, setCallback] = state.productsAPI.callback\r\n\r\n    const onSearch= e => {\r\n        console.log(e)\r\n        setProductId(e)\r\n    };\r\n\r\n    const showModalAddReply = () => {\r\n        setVisible(true)\r\n        setOnAddReply(true)  \r\n    };\r\n\r\n    const showModalEditReply = () => {\r\n        setVisible(true)\r\n        setOnEditReply(true)  \r\n    };\r\n\r\n    const  handleCancel = () => {\r\n        setOnAddReply(false) \r\n        setOnEditReply(false)\r\n        setVisible(false)\r\n    };\r\n\r\n    const ModalAdd = (id) =>{\r\n        return <>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Enter reply\"\r\n                //onOk={createCategory}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" onClick={() => createReply(id)}>\r\n                        {\r\n                            onAddReply && \"Reply\"|| onEditReply && \"Edit reply\"\r\n                        }\r\n                    </Button>\r\n                ]}\r\n                >\r\n                <TextArea style={{marginBottom :'20px'}}  placeholder=\"Enter reply\" value={comment} onChange={handleReply}/>\r\n            </Modal> \r\n        </>\r\n      }\r\n\r\n      const handleReply = async e => {\r\n        console.log(e.target.value);\r\n        setComment(e.target.value)\r\n      };\r\n\r\n       const createReply = async id =>{\r\n           console.log(comment)\r\n        const form = new FormData();\r\n        form.append('productId', productId)\r\n        form.append('comment', comment)\r\n        form.append('reviewId', id)\r\n        try {\r\n            if(onAddReply){\r\n                \r\n                const res = await axios.put('/api/review_reply', form, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                console.log(res)\r\n                //setComment('')\r\n                setOnAddReply(false)\r\n                setCallback(!callback)\r\n                setVisible(false)\r\n            } else if(onEditReply)\r\n            {\r\n                const res = await axios.put('/api/review_reply', form, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                console.log(res)\r\n                setOnEditReply(false)\r\n                setCallback(!callback)\r\n                setVisible(false)\r\n            }\r\n            \r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"col-right\">\r\n             <h2>Reviews</h2>\r\n             <Search placeholder=\"Enter ID Product\" onSearch={onSearch} enterButton />\r\n             \r\n             <div style={{overflowX: \"auto\"}} className=\"mt-5\">\r\n                 {\r\n                     reviewsProduct && reviewsProduct.length > 0 && \r\n                     <table className=\"customers\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Comment</th>\r\n                                <th>Rating</th>\r\n                                <th>User</th>\r\n                                <th>Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                reviewsProduct.map(r =>(\r\n                                    <tr key={r._id}>\r\n                                        <td>{r._id}</td>\r\n                                        <td>{r.comment}</td>\r\n                                        <td>{r.rating}</td>\r\n                                        <td>{r.name}</td>\r\n                                        <td>{moment(r.time).fromNow()}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>||<p>Do not reviews</p>\r\n                 }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Review;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\ProductsAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\CategoriesAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\UserAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\TypesAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\PetsAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\MyPostsAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\api\\TopicsAPI.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\actions\\userAction.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\NotFound\\NotFound.js",["490"],"import React from 'react'\r\nimport { Result, Button } from 'antd';\r\nimport BreadCrumb from '../../BreadCumb'\r\n\r\nfunction NotFound(){\r\n    return (\r\n    <>\r\n    <BreadCrumb/>\r\n    <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n    />\r\n    </>\r\n    )\r\n}\r\nexport default NotFound","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\posts\\Posts.js",["491","492","493"],"import React,{useContext, useEffect} from 'react';\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Row, Col } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport \"aos/dist/aos.css\"\r\nimport Aos from 'aos'\r\nimport FilterPost from './FilterPost'\r\n\r\nfunction Posts() {\r\n    const state = useContext(GlobalState)\r\n    const [posts, setPosts] = state.myPostsAPI.posts\r\n    const [topics] = state.topicsAPI.topics\r\n    //const [filter, setFilter] = state.myPostsAPI.filter\r\n    \r\n    useEffect(()=>{\r\n        Aos.init({duration: 2000}); \r\n/*         return()=>{\r\n            if(localStorage.getItem('text')){\r\n                const text = localStorage.getItem('text')\r\n                console.log({text})\r\n                setFilter(text)\r\n                console.log({filter})\r\n            }\r\n\r\n    } */\r\n})\r\n\r\n    return (\r\n        <>\r\n            <div class=\"bg-gray-100 lg:py-28 h-full lg:flex lg:justify-center pb-96\">\r\n                <div className=\"container\">\r\n                    <Row gutter={[40, 40]} >\r\n                        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 18}} lx={{span: 18}}>\r\n                            \r\n                            <h1 className='mt-20 text-4xl'>Tin Tức</h1>\r\n                            <Row gutter={[16, 16]} >\r\n                                {\r\n                                    posts.map((post) => (\r\n                                        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 12}} lx={{span: 12}} key={post._id} data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                            <div className=\"bg-white lg:mx-8 lg:flex lg:max-w-5xl lg:shadow-lg lg:rounded-lg transition duration-700 ease-in-out ... transform hover:scale-105\">\r\n                                                <div className=\"lg:w-1/2\">\r\n                                                    <div className=\"h-96 bg-cover lg:rounded-lg lg:h-full\" style={{backgroundImage: `url(${post.images.url})`}} />\r\n                                                </div>\r\n                                                <div className=\"flex flex-col justify-between m-6\">\r\n                                                        \r\n                                                    <div className=\"mb-6\">\r\n                                                    <Row justify=\"space-between\">\r\n                                                        <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}}>\r\n                                                            <span className=\"font-light text-gray-600\">{moment(post.updatedAt).format('MM/DD/YYYY')}</span>\r\n                                                        </Col>\r\n                                                        <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}} className=\"text-right\">\r\n                                                            <Link className=\"px-2 py-1 bg-pink-600 text-gray-100 font-bold rounded hover:bg-pink-500\" value={post.topic}>{topics.find(_=>_._id === post.topic) && topics.find(_=>_._id === post.topic).name || \"\"}</Link>\r\n                                                        </Col>\r\n                                                    </Row>\r\n{/*                                                         <div className=\"flex justify-between items-center\">\r\n                                                            <span className=\"font-light text-gray-600\">{moment(post.updatedAt).format('MM/DD/YYYY')}</span><Link className=\"px-2 py-1 bg-pink-600 text-gray-100 font-bold rounded hover:bg-pink-500\" value={post.topic}>{topics.find(_=>_._id === post.topic) && topics.find(_=>_._id === post.topic).name || \"\"}</Link>\r\n                                                        </div> */}\r\n                                                        <div className=\"mt-4\">\r\n                                                            <div className=\"lg:h-28 xl:h-0\"><Link to={`news/${post.slug}`} className=\"text-3xl text-gray-700 font-bold hover:underline mt-4\">{post.title}</Link></div>\r\n                                                            <p className=\"mt-2 text-gray-600 truncate-3-lines\">\r\n                                                                {post.description}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"flex justify-between items-center mt-4 mb-4\">\r\n                                                        <Link to={`news/${post.slug}`} className=\"text-blue-500 hover:underline\">Read more</Link>\r\n                                                        <div className=\"flex items-center\">\r\n                                                            <img src={post.userAvatar} alt=\"avatar\" className=\"w-14 h-14 rounded-full mr-4\" />\r\n                                                            <h1 className=\"text-gray-700 font-bold hover:underline\">{post.userName}</h1>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                        \r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n\r\n                                    ))\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n\r\n                        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}}>\r\n                            <FilterPost/>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Posts;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\posts\\DetailPost.js",["494","495","496"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Row, Col } from 'antd';\r\nimport FilterPost from './FilterPost'\r\n//import Foot from './pawprint.svg'\r\nimport moment from 'moment';\r\nimport Aos from 'aos'\r\nimport \"aos/dist/aos.css\"\r\n\r\nfunction DetailPost() {\r\n    const params = useParams()\r\n    const state = useContext(GlobalState)\r\n    const [posts, setPosts] = state.myPostsAPI.posts\r\n    const [title, setTitle] = state.myPostsAPI.title\r\n    const [detailPost, setDetailPost] = useState([])\r\n\r\n    console.log({params})\r\n    \r\n\r\n    useEffect(() =>{\r\n        Aos.init({duration: 2000}); \r\n        if(params.id){\r\n\r\n            posts.forEach(post => {\r\n                if(post.slug === params.id){\r\n                    localStorage.setItem('id_post', post.slug)\r\n                    setDetailPost(post)\r\n                    setTitle(post.title)\r\n                } \r\n            })\r\n        }\r\n    },[params.id, posts,setTitle])\r\n\r\n    console.log({detailPost})\r\n\r\n    if(detailPost.length === 0) return null;\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div class=\"bg-gray-100 lg:py-28 h-full\">\r\n            <div className='container'>\r\n                <Row gutter={[40, 40]} >\r\n                    <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 18}} lx={{span: 18}} data-aos=\"zoom-out-right\">\r\n                        <div className=\"border-b-2 border-white px-1 py-4\">\r\n                            <h1 className='mt-20 text-5xl tracking-wide leading-relaxed text-black'>{detailPost.title}</h1>\r\n                            <div className=\"flex items-center\">\r\n                                {/* <img src={Foot} className=\"w-14 h-14 rounded-full mr-4\" alt=\"\"></img> */}\r\n                                <p className=\"text-gray-900 mb-0\">{moment(detailPost.updatedAt).format('MM/DD/YYYY')} bởi <span className=\"text-blue-600\">{detailPost.userName}</span></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-black py-4\" dangerouslySetInnerHTML={{ __html: detailPost.body }} />\r\n                    </Col>\r\n\r\n                    <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 6}} lx={{span: 6}} data-aos=\"zoom-out-left\">\r\n                        <FilterPost/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailPost;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\background_header\\BackgroundHeader.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\actions\\index.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\validation\\Validation.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\notification\\Notification.js",["497","498","499","500"],"import React from 'react'\r\nimport { Button, notification, Divider, Space } from 'antd';\r\n\r\nexport const showErrMsg = (type,msg) => {\r\n    return notification[type]({\r\n        message: 'Error',\r\n        description:`${msg}`\r\n      });\r\n}\r\n\r\nexport const showSuccessMsg = (type,msg) => {\r\n    return notification[type]({\r\n        message: 'Success',\r\n        description:`${msg}`\r\n      });\r\n}","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\authReducer.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\tokenReducer.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\userReducer.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\redux\\reducers\\productReducer.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\cart\\PaypalButton.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\loading\\Loading.js",["501"],"import React from 'react'\r\nimport { Spin, Space } from 'antd';\r\n\r\nfunction Loading() {\r\n    return (\r\n            <Spin size=\"large\" />   \r\n    )\r\n}\r\n\r\nexport default Loading","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\search\\SearchPet.js",["502","503","504"],"import {useState,useContext} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../../GlobalState'\r\nimport { Row, Col } from 'antd';\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nfunction SearchPet() {\r\n    const state = useContext(GlobalState)\r\n    const [type, setType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [searchName, setSearchName] = useState('')\r\n    const [statuses,setStatuses] = state.statusesAPI.statuses\r\n    const [types, setTypes] = state.typesAPI.types\r\n    const [pets, setPets] = state.petsAPI.pets\r\n    const [loading, setLoading] = state.petsAPI.loading\r\n    const auth = useSelector(state => state.auth)\r\n    const {isAdmin} = auth;\r\n\r\n    console.log('loading',loading)\r\n\r\n    const handleType = e => {\r\n        console.log('e.target.value')\r\n        console.log(e.target.value)\r\n        setType(e.target.value)\r\n    }\r\n\r\n    const handleStatus = e => {\r\n        console.log('e.target.value')\r\n        console.log(e.target.value)\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    const handleSearch = e => {\r\n        console.log('e.target.value')\r\n        console.log(e.target.value)\r\n        setSearchName(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n            if(type)\r\n            {\r\n                setLoading(true)\r\n                if(isAdmin === true)\r\n                {\r\n                    const res = await axios.get(`/api/pets?${type}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }else{\r\n                    const res = await axios.get(`/api/petsui?${type}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }\r\n            }\r\n            if(status)\r\n            {\r\n                setLoading(true)\r\n                if(isAdmin === true){\r\n                    const res = await axios.get(`/api/pets?${status}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }else{\r\n                    const res = await axios.get(`/api/petsui?${status}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }\r\n            }\r\n            if(searchName)\r\n            {\r\n                setLoading(true)\r\n                if(isAdmin === true){\r\n                    const res = await axios.get(`/api/pets?keyword=${searchName}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }else{\r\n                    const res = await axios.get(`/api/petsui?keyword=${searchName}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }\r\n            }\r\n            else if(type || status || searchName)\r\n            {\r\n                setLoading(true)\r\n                if(isAdmin === true){\r\n                    const res = await axios.get(`/api/pets?${type}&${status}&keyword=${searchName}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }else{\r\n                    const res = await axios.get(`/api/petsui?${type}&${status}&keyword=${searchName}`)\r\n                    console.log(res)\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }\r\n\r\n            }else if(!type && !status && !searchName)\r\n            {\r\n                setLoading(true)\r\n                if(isAdmin === true){\r\n                    const res = await axios.get('/api/pets')\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }\r\n                else {\r\n                    const res = await axios.get('/api/petsui')\r\n                    setLoading(false)\r\n                    setPets(res.data.pets)\r\n                }\r\n            }\r\n    }\r\n\r\n    const handleReset  = e => {\r\n        console.log(type, status, searchName)\r\n        setType('')\r\n        setStatus('')\r\n        setSearchName('')\r\n    }\r\n\r\n    return (\r\n        <form className='mr-b search-pet' onSubmit={handleSubmit}>\r\n            <Row justify=\"space-between\" gutter={[8, 8]} className='mr-b'>\r\n                <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n                <select className=\"group-search\" name=\"type\" value={type} onChange={handleType} >\r\n                    <option value=\"\">All Type</option>\r\n                        {\r\n                            types.map(type => (\r\n                                <option value={\"type=\" + type._id} key={type._id}>\r\n                                    {type.name}\r\n                                </option>\r\n                        ))\r\n                        }\r\n                </select>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n                <select className=\"group-search\" name=\"type\" value={status} onChange={handleStatus} >\r\n                    <option value=\"\">All Status</option>\r\n                        {\r\n                            statuses.map(status => (\r\n                                <option value={\"status=\" + status._id} key={status._id}>\r\n                                    {status.name}\r\n                                </option>\r\n                        ))\r\n                        }\r\n                </select>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n                    <input style={{fontWeight: 400}} className=\"group-search\" type=\"text\" placeholder=\"Enter Name or Pet code\" value={searchName} onChange={handleSearch}/>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n                    <button className=\"group-search focus:outline-none\" type=\"submit\">Search</button>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n                    <button className=\"group-search focus:outline-none\" type=\"submit\" onClick={handleReset}>All</button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchPet;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\posts\\FilterPost.js",["505","506","507","508","509"],"import React,{useContext} from 'react';\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction FilterPost() {\r\n    const state = useContext(GlobalState)\r\n    const [posts, setPosts] = state.myPostsAPI.posts\r\n    const [topics] = state.topicsAPI.topics\r\n    const [all, setALL] = state.myPostsAPI.all\r\n    const [numPostByTopic, setNumPostByTopic] = state.myPostsAPI.numPostByTopic\r\n    const history = useHistory()\r\n\r\n    \r\n\r\n\r\n\r\n    const handleFilter = async (text) => {\r\n/*         if(location !== '/news')\r\n        {\r\n            localStorage.setItem('text', text)\r\n            window.location.href = \"/news\";\r\n        }\r\n        else if(location === '/news'){\r\n            localStorage.removeItem('text')\r\n            setFilter(text)\r\n            console.log({filter})\r\n            console.log({text})\r\n        } */\r\n\r\n        const res = await axios.get(`/api/posts${text}`)\r\n        setPosts(res.data.posts)\r\n        history.push(\"/news\")\r\n\r\n    }\r\n\r\n/*     const handleFilterAll = async (text) => {\r\n        if(location === '/news')\r\n        {\r\n            localStorage.removeItem('text')\r\n            setFilter(text)\r\n            console.log({filter})\r\n            console.log({text})\r\n        }\r\n    } */\r\n    return (\r\n        <>\r\n        <h1 className='mt-20 text-4xl'>Chuyên mục</h1>\r\n        <ul className=\"px-4 py-6 bg-white rounded-lg shadow-md\">\r\n        <Link onClick={() => handleFilter(\"\")}>\r\n            <li className=\"px-1 py-4 border-b border-t border-white hover:border-gray-200 transition duration-300\">\r\n                <Link className=\"flex items-center text-gray-600 cursor-pointer\">\r\n                    <span className=\"inline-block h-4 w-4 bg-pink-400 mr-3\" />\r\n                    Tất cả bài viết\r\n                    <span className=\"text-gray-500 ml-auto\">{all} bài viết</span>\r\n                    <i className=\"text-gray-500 bx bx-right-arrow-alt ml-1\" />\r\n                </Link>\r\n           </li>\r\n        </Link>\r\n                            \r\n        {\r\n            topics.map(topic => (\r\n                <Link onClick={() => handleFilter(\"?topic=\"+topic._id)}  value={\"topic=\" + topic._id} key={topic._id}>\r\n                    <li className=\"px-1 py-4 border-b border-t border-white hover:border-gray-200 transition duration-300\">\r\n                        <Link className=\"flex items-center text-gray-600 cursor-pointer\">\r\n                             <span className=\"inline-block h-4 w-4 bg-pink-400 mr-3\" />\r\n                                {topic.name}\r\n                             <span className=\"text-gray-500 ml-auto\" value={topic._id}>{numPostByTopic.find(_=>_._id === topic._id) && numPostByTopic.find(_=>_._id === topic._id).count || 0} bài viết</span>\r\n                             <i className=\"text-gray-500 bx bx-right-arrow-alt ml-1\" />\r\n                        </Link>\r\n                    </li>\r\n                </Link>\r\n            ))\r\n         }\r\n        </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterPost;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\productItem\\ProductItem.js",["510","511","512","513","514","515","516","517","518","519","520"],"import React,{useEffect,useContext,useState} from 'react';\r\nimport './productItem.css'\r\nimport {Link} from 'react-router-dom'\r\nimport Aos from 'aos'\r\nimport \"aos/dist/aos.css\"\r\nimport { Pagination } from 'antd';\r\nimport {GlobalState} from '../../../../GlobalState'\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nfunction ProductItem({product}) {\r\n    const state = useContext(GlobalState)\r\n    const [currentPage, setCurrentPage]= useState(1)\r\n    const [resPerPage, setResPerPage] = useState(8)\r\n    const [minIndex, setMinIndex] = useState(0)\r\n    const [maxIndex, setMaxIndex] = useState(resPerPage)\r\n\r\n    const onChange = page => {\r\n        console.log('page');\r\n        console.log(page);\r\n        setCurrentPage(page)\r\n        setMinIndex((page - 1)* resPerPage) \r\n        setMaxIndex(page* resPerPage)\r\n      };\r\n\r\n    useEffect(()=>{\r\n        Aos.init({duration: 2000}); \r\n    })\r\n    return (\r\n        <>\r\n            <h1 data-aos=\"fade-up\" data-aos-easing=\"ease-out-cubic\" className='pt-20 text-5xl'>{product.name}</h1>\r\n            {\r\n                product.children.map(_ =>(\r\n                    <>\r\n                    <div data-aos=\"fade-up\" data-aos-easing=\"ease-out-cubic\" key={_._id} className=\"group-products-type\">\r\n                        <h3 className=\"text-3xl\">\r\n                            {\r\n                                _.nameType === \"product\" && _.name || \"\"\r\n                            }\r\n                        </h3>\r\n                        <div className=\"products-type\">\r\n                        {\r\n                           \r\n                           _.group_list_product.length > 0 && resPerPage <= _.group_list_product.length &&\r\n                            _.group_list_product.map((group,index )=>index >= minIndex &&\r\n                            index < maxIndex && (\r\n                                <>\r\n                                <div className=\"item-products-type\" data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                    <Link to={`product/${group._id}`}>\r\n                                        <div className=\"ig-products-type\">\r\n                                            <img src={group.images.url} alt=\"\"></img>\r\n                                        </div>\r\n                                        <div className=\"name-products-type\">\r\n                                            <p>{group.content}</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div className=\"price-products-type\">\r\n                                        <div className=\"group-price\">\r\n                                            <span>{numberWithCommas(group.price)} <u>đ</u></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                            )) ||\r\n                            _.group_list_product.length > 0 && resPerPage > _.group_list_product.length &&\r\n                            _.group_list_product.map((group)=>(\r\n                                <>\r\n                                <div className=\"item-products-type\" data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                    <Link to={`product/${group._id}`}>\r\n                                        <div className=\"ig-products-type\">\r\n                                            <img src={group.images.url} alt=\"\"></img>\r\n                                        </div>\r\n                                        <div className=\"name-products-type\">\r\n                                            <p>{group.content}</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div className=\"price-products-type\">\r\n                                        <div className=\"group-price\">\r\n                                            <span>{numberWithCommas(group.price)} <u>đ</u></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                            )) || <p className=\"text-2xl\">Không có sản phẩm để hiển thị</p>\r\n\r\n                            /* _.nameType === \"product\" &&  _.productsList.find(product=>product.category) &&  _.productsList.find(product=>product.category === _.id) && \"1\" || \"0\" */\r\n                        }                    \r\n                        </div>\r\n\r\n                        <div className=\"product-pagination\">\r\n                        {\r\n                            resPerPage <= _.group_list_product.length && (<Pagination key={_._id} defaultCurrent={1}\r\n                            defaultPageSize={resPerPage}  total={_.group_list_product.length} onChange={onChange}/>)|| \"\"\r\n                        }\r\n                        </div> \r\n                    </div>  \r\n                    </>\r\n                \r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductItem;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\utils\\petItem\\PetItem.js",["521"],"import React, {useContext,useEffect} from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport {GlobalState} from '../../../../GlobalState'\r\nimport Aos from 'aos'\r\nimport \"aos/dist/aos.css\"\r\n\r\nfunction PetItem({pet}) {\r\n    const state = useContext(GlobalState)\r\n    const [statuses] = state.statusesAPI.statuses\r\n    useEffect(()=>{\r\n        Aos.init({duration: 2000}); \r\n    })\r\n    return (\r\n            <Col xs={24} sm={24} md={12} lg={12} xl={6} data-aos=\"fade-up\" data-aos-easing=\"ease-out-cubic\">\r\n                <Link to={`adoption/${pet._id}`}>\r\n                <div className=\"bg-white rounded overflow-hidden shadow-lg transition duration-700 ease-in-out ... transform hover:scale-110 motion-reduce:transform-none ...\">\r\n                    <Link to={`adoption/${pet._id}`}><img  className=\"w-full\" src={pet.images.url} alt=\"\" /></Link>\r\n                    <div className=\"px-6 py-4\">\r\n                        <span value={pet.status} className=\"inline-block bg-pink-200 rounded-full px-3 py-1 text-xl font-semibold text-pink-700 mr-2\">#{statuses.find(_=>_._id === pet.status).name || \"\"}</span>\r\n                        <span className=\"inline-block bg-green-200 rounded-full px-3 py-1 text-xl font-semibold text-green-700\">#{pet.sex}</span>\r\n                    </div>\r\n                    <div className=\"px-6 py-4\">\r\n                        <Link to={`adoption/${pet._id}`}><div className=\"font-bold text-4xl mb-2 text-yellow-700 hover:text-yellow-500\">{pet.name}</div></Link>\r\n                        <p className=\"text-gray-700 text-xl truncate ...\">\r\n                        {pet.moreinfor}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                </Link>\r\n            </Col>\r\n    );\r\n}\r\n\r\nexport default PetItem;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\News.js",["522","523","524"],"import React ,{useContext,useEffect} from 'react';\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Row, Col } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport \"aos/dist/aos.css\"\r\nimport Aos from 'aos'\r\nfunction News() {\r\n    const state = useContext(GlobalState)\r\n    const [posts_slider, setPostsSlider] = state.myPostsAPI.posts_slider\r\n    const [topics] = state.topicsAPI.topics\r\n\r\n    const submit = async () => {\r\n        try {\r\n            window.location.href = \"/news\";\r\n        } catch (err) {\r\n            window.location.href = \"/news\";\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 2000}); \r\n    })\r\n    return (\r\n        <section className=\"news bg-gray-100\">\r\n            <div className=\"container\">\r\n                <h1 className=\"section-heading\">Tin tức</h1>\r\n                <Row gutter={[32, 32]} >\r\n                   {\r\n                        posts_slider.map((post) => (\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 12}} lx={{span: 12}} key={post._id} data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                <div className=\"bg-white lg:mx-8 lg:flex lg:max-w-5xl lg:shadow-lg lg:rounded-lg transition duration-700 ease-in-out ... transform hover:scale-105\">\r\n                                    <div className=\"lg:w-1/2\">\r\n                                        <div className=\"h-96 bg-cover lg:rounded-lg lg:h-full\" style={{backgroundImage: `url(${post.images.url})`}} />\r\n                                    </div>\r\n                                    <div className=\"flex flex-col justify-between m-6\">\r\n                                                        \r\n                                        <div className=\"mb-6\">\r\n                                            <Row justify=\"space-between\">\r\n                                                <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}}>\r\n                                                    <span className=\"font-light text-gray-600\">{moment(post.updatedAt).format('MM/DD/YYYY')}</span>\r\n                                                </Col>\r\n                                                <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}} className=\"text-right\">\r\n                                                    <Link className=\"px-2 py-1 bg-pink-600 text-gray-100 font-bold rounded hover:bg-pink-500\" value={post.topic}>{topics.find(_=>_._id === post.topic) && topics.find(_=>_._id === post.topic).name || \"\"}</Link>\r\n                                                </Col>\r\n                                            </Row>\r\n{/*                                             <div className=\"flex justify-between items-center\">\r\n                                                <span className=\"font-light text-gray-600\">{moment(post.updatedAt).format('MM/DD/YYYY')}</span><Link className=\"px-2 py-1 bg-pink-600 text-gray-100 font-bold rounded hover:bg-pink-500\" value={post.topic}>{topics.find(_=>_._id === post.topic) && topics.find(_=>_._id === post.topic).name || \"\"}</Link>\r\n                                            </div> */}\r\n                                            <div className=\"mt-4\">\r\n                                                <div className=\"md:h-28 xl:h-0\"><Link to={`news/${post.slug}`} className=\"text-3xl text-gray-700 font-bold hover:underline mt-4\">{post.title}</Link></div>\r\n                                                    <p className=\"mt-2 text-gray-600 truncate-3-lines\">\r\n                                                        {post.description}\r\n                                                    </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex justify-between items-center mt-4 mb-4\">\r\n                                            <Link to={`news/${post.slug}`} className=\"text-blue-500 hover:underline\">Read more</Link>\r\n                                            <div className=\"flex items-center\">\r\n                                                <img src={post.userAvatar} alt=\"avatar\" className=\"w-14 h-14 rounded-full mr-4\" />\r\n                                                <h1 className=\"text-gray-700 font-bold hover:underline\">{post.userName}</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                                            \r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n\r\n                                    ))\r\n                                }\r\n                </Row>\r\n\r\n                <div className=\"text-center\">\r\n                    <button className=\"mt-9 btn-secondary transition duration-700 ease-in-out ... transform hover:scale-110 text-white font-bold py-3 px-20 rounded-full focus:outline-none\" onClick={submit}>\r\n                    Xem thêm\r\n                   </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default News;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\Statistical.js",["525","526","527","528"],"import React,{useContext,useEffect} from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Health from './images/health.png'\r\nimport House from './images/house.png'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport \"aos/dist/aos.css\"\r\nimport Aos from 'aos'\r\n\r\nfunction Statistical() {\r\n    const state = useContext(GlobalState)\r\n    const [petsCount, setPetsCount] = state.petsAPI.petsCount\r\n    const [numPetByStatus, setNumPetByStatus]  = state.petsAPI.numPetByStatus\r\n    \r\n\r\n    useEffect(() => {\r\n        Aos.init({duration: 2000}); \r\n    })\r\n    \r\n\r\n    var arrStatus = [];\r\n    //first elem\r\n    arrStatus.push({count: petsCount, strStatus: \"Ca cứu hộ\",  objImg: {img: Health}});\r\n    //\r\n    var arrImg = [{img: Health}];\r\n    for (let i = 0; i < numPetByStatus.length; i++) {\r\n        const e = numPetByStatus[i];\r\n         var objImg = arrImg[(i < arrImg.length)? i: arrImg.length-1];\r\n        arrStatus.push({count: e.pet_list.length, strStatus: e.name,  objImg: objImg});\r\n    }\r\n\r\n    // Split in group of 3 items\r\n    var _arrStatus = chunkArray(arrStatus, 3);\r\n    var arrStatus3 = _arrStatus.slice(0,_arrStatus.length-1);\r\n    var StatusLast = _arrStatus[_arrStatus.length-1];\r\n    if(StatusLast.length === 3){\r\n        arrStatus3 = _arrStatus;\r\n        StatusLast = [];\r\n    }\r\n\r\n    return (\r\n        <section className=\"static\">\r\n            <div className=\"container\">\r\n                <div className=\"number\">\r\n                    {\r\n                        //n-1 hàng đầu\r\n                        arrStatus3.map((rowStatus) => (\r\n                            <Row gutter={[16, 16]}>\r\n                                {\r\n                                    rowStatus.map((status) => (\r\n                                        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 8}} lx={{span: 8}} data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                            <div className=\"text-center items-center relative number-item\">\r\n                                                <div className=\"bg-white p-12 rounded-full inline-block mb-2\"><img src={status.objImg.img} alt =\"\"/></div>\r\n                                                <h1 className=\"mb-0 text-white text-8xl\">{status.count}</h1>\r\n                                                <p className=\"text-white text-3xl mt-2\">{status.strStatus}</p>\r\n                                            </div>\r\n                                        </Col>\r\n                                    ))//rowStatus.map(\r\n                                }\r\n                            </Row>\r\n                        ))//arrStatus3.map(\r\n                    }\r\n                    {\r\n                        //hàng cuối\r\n                        <Row className=\"px-80 mt-3\">\r\n                        {\r\n                            StatusLast.map(function(status){\r\n                                //\r\n                                if(StatusLast.length === 1)\r\n                                return <>\r\n                                    <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 24}} lx={{span: 24}} data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                        <div className=\"text-center items-center relative number-item\">\r\n                                            <div className=\"bg-white p-12 rounded-full inline-block mb-2\"><img src={status.objImg.img} alt =\"\"/></div>\r\n                                            <h1 className=\"mb-0 text-white text-8xl\">{status.count}</h1>\r\n                                            <p className=\"text-white text-3xl mt-2\">{status.strStatus}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                                </>\r\n                                ;\r\n                                //\r\n                                if(StatusLast.length === 2)\r\n                                return <>\r\n                                    <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} lg={{span: 12}} lx={{span: 12}} data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                        <div className=\"text-center items-center relative number-item\">\r\n                                            <div className=\"bg-white p-12 rounded-full inline-block mb-2\"><img src={status.objImg.img} alt =\"\"/></div>\r\n                                            <h1 className=\"mb-0 text-white text-8xl\">{status.count}</h1>\r\n                                            <p className=\"text-white text-3xl mt-2\">{status.strStatus}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                                </>\r\n                                ;\r\n                            }\r\n                            )//rowStatus.map(\r\n                        }\r\n                        </Row>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n\r\n    function chunkArray(myArray, chunk_size){\r\n        var index = 0;\r\n        var arrayLength = myArray.length;\r\n        var tempArray = [];\r\n        \r\n        for (index = 0; index < arrayLength; index += chunk_size) {\r\n            var myChunk = myArray.slice(index, index+chunk_size);\r\n            // Do something if you want with the group\r\n            tempArray.push(myChunk);\r\n        }\r\n        return tempArray;\r\n    }\r\n}\r\n\r\nexport default Statistical;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\Case.js",["529"],"import React, {useContext,useEffect} from 'react';\r\nimport Slider from \"react-slick\";\r\nimport {Link} from 'react-router-dom'\r\nimport 'antd/dist/antd.css';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport \"aos/dist/aos.css\"\r\nimport Aos from 'aos'\r\n\r\nfunction Case(){\r\n  const state = useContext(GlobalState)\r\n  const [pets_slider, setPetsSlider] = state.petsAPI.pets_slider\r\n  useEffect(() => {\r\n    Aos.init({duration: 2000}); \r\n})\r\n\r\n        const slider_adopt = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 4,\r\n            responsive: [\r\n                {\r\n                  breakpoint: 1024,\r\n                  settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                    infinite: true,\r\n                    dots: false\r\n                  }\r\n                },\r\n                {\r\n                    breakpoint: 768,\r\n                    settings: {\r\n                      slidesToShow: 2,\r\n                      slidesToScroll: 2,\r\n                      infinite: true,\r\n                      dots: false\r\n                    }\r\n                  },\r\n                {\r\n                  breakpoint: 600,\r\n                  settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    initialSlide: 2\r\n                  }\r\n                },\r\n                {\r\n                  breakpoint: 480,\r\n                  settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                  }\r\n                }\r\n              ]\r\n        };\r\n        return (\r\n            <section className=\"adoptions\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"section-heading\">Nhận nuôi</h1>\r\n                        <Slider className=\"slider-adoption\" {...slider_adopt}>\r\n                          {\r\n                            pets_slider.map((pet)=>(\r\n                              <Link to={`adoption/${pet._id}`} data-aos=\"flip-left\" data-aos-easing=\"ease-out-cubic\">\r\n                                <div className=\"img-card bg-white transition duration-700 ease-in-out ... transform hover:scale-110 motion-reduce:transform-none ...\">\r\n                                  <img className=\"img\" src={pet.images.url} alt=\"\" />\r\n                                  <div class=\"card-body\">\r\n                                      <div className=\"py-4\">\r\n                                        <span value={pet.pet_code} className=\"inline-block bg-pink-200 rounded-full px-3 py-1 text-xl font-semibold text-pink-700 mr-2\">#{pet.pet_code}</span>\r\n                                        <span className=\"inline-block bg-green-200 rounded-full px-3 py-1 text-xl font-semibold text-green-700\">#{pet.sex}</span>\r\n                                      </div>\r\n                                      <Link to={`adoption/${pet._id}`}><div className=\"card-title text-yellow-700\">{pet.name}</div></Link>\r\n                                  </div>\r\n                                </div>\r\n                              </Link>\r\n                            ))\r\n                          }\r\n                       \r\n                        </Slider>\r\n                    </div>\r\n\r\n            </section>\r\n        );\r\n}\r\n\r\n\r\nexport default Case;","C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\AboutUs.js",[],"C:\\Users\\MyPC\\Desktop\\tlcn\\client\\src\\components\\mainpages\\homepage\\SliderImage.js",[],{"ruleId":"530","severity":1,"message":"531","line":1,"column":16,"nodeType":"532","messageId":"533","endLine":1,"endColumn":25},{"ruleId":"534","replacedBy":"535"},{"ruleId":"536","replacedBy":"537"},{"ruleId":"530","severity":1,"message":"538","line":18,"column":10,"nodeType":"532","messageId":"533","endLine":18,"endColumn":14},{"ruleId":"539","severity":1,"message":"540","line":128,"column":15,"nodeType":"532","messageId":"541","endLine":128,"endColumn":16},{"ruleId":"530","severity":1,"message":"542","line":29,"column":8,"nodeType":"532","messageId":"533","endLine":29,"endColumn":24},{"ruleId":"530","severity":1,"message":"543","line":53,"column":12,"nodeType":"532","messageId":"533","endLine":53,"endColumn":18},{"ruleId":"544","severity":1,"message":"545","line":70,"column":20,"nodeType":"546","messageId":"547","endLine":70,"endColumn":22},{"ruleId":"544","severity":1,"message":"545","line":70,"column":43,"nodeType":"546","messageId":"547","endLine":70,"endColumn":45},{"ruleId":"544","severity":1,"message":"545","line":73,"column":20,"nodeType":"546","messageId":"547","endLine":73,"endColumn":22},{"ruleId":"544","severity":1,"message":"545","line":73,"column":43,"nodeType":"546","messageId":"547","endLine":73,"endColumn":45},{"ruleId":"530","severity":1,"message":"548","line":5,"column":28,"nodeType":"532","messageId":"533","endLine":5,"endColumn":32},{"ruleId":"530","severity":1,"message":"549","line":5,"column":34,"nodeType":"532","messageId":"533","endLine":5,"endColumn":39},{"ruleId":"530","severity":1,"message":"550","line":5,"column":41,"nodeType":"532","messageId":"533","endLine":5,"endColumn":45},{"ruleId":"530","severity":1,"message":"551","line":5,"column":47,"nodeType":"532","messageId":"533","endLine":5,"endColumn":55},{"ruleId":"530","severity":1,"message":"552","line":5,"column":65,"nodeType":"532","messageId":"533","endLine":5,"endColumn":72},{"ruleId":"530","severity":1,"message":"553","line":8,"column":18,"nodeType":"532","messageId":"533","endLine":8,"endColumn":24},{"ruleId":"530","severity":1,"message":"554","line":36,"column":12,"nodeType":"532","messageId":"533","endLine":36,"endColumn":19},{"ruleId":"530","severity":1,"message":"555","line":37,"column":22,"nodeType":"532","messageId":"533","endLine":37,"endColumn":33},{"ruleId":"530","severity":1,"message":"556","line":148,"column":11,"nodeType":"532","messageId":"533","endLine":148,"endColumn":19},{"ruleId":"530","severity":1,"message":"557","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":24},{"ruleId":"530","severity":1,"message":"558","line":3,"column":40,"nodeType":"532","messageId":"533","endLine":3,"endColumn":59},{"ruleId":"530","severity":1,"message":"559","line":1,"column":17,"nodeType":"532","messageId":"533","endLine":1,"endColumn":26},{"ruleId":"530","severity":1,"message":"560","line":2,"column":8,"nodeType":"532","messageId":"533","endLine":2,"endColumn":18},{"ruleId":"530","severity":1,"message":"561","line":22,"column":11,"nodeType":"532","messageId":"533","endLine":22,"endColumn":16},{"ruleId":"530","severity":1,"message":"562","line":26,"column":34,"nodeType":"532","messageId":"533","endLine":26,"endColumn":41},{"ruleId":"530","severity":1,"message":"563","line":27,"column":11,"nodeType":"532","messageId":"533","endLine":27,"endColumn":16},{"ruleId":"530","severity":1,"message":"564","line":6,"column":9,"nodeType":"532","messageId":"533","endLine":6,"endColumn":13},{"ruleId":"530","severity":1,"message":"565","line":9,"column":12,"nodeType":"532","messageId":"533","endLine":9,"endColumn":15},{"ruleId":"530","severity":1,"message":"566","line":9,"column":17,"nodeType":"532","messageId":"533","endLine":9,"endColumn":23},{"ruleId":"530","severity":1,"message":"562","line":10,"column":12,"nodeType":"532","messageId":"533","endLine":10,"endColumn":19},{"ruleId":"530","severity":1,"message":"567","line":10,"column":21,"nodeType":"532","messageId":"533","endLine":10,"endColumn":31},{"ruleId":"530","severity":1,"message":"560","line":5,"column":8,"nodeType":"532","messageId":"533","endLine":5,"endColumn":18},{"ruleId":"530","severity":1,"message":"564","line":4,"column":9,"nodeType":"532","messageId":"533","endLine":4,"endColumn":13},{"ruleId":"530","severity":1,"message":"560","line":8,"column":8,"nodeType":"532","messageId":"533","endLine":8,"endColumn":18},{"ruleId":"530","severity":1,"message":"554","line":29,"column":12,"nodeType":"532","messageId":"533","endLine":29,"endColumn":19},{"ruleId":"530","severity":1,"message":"555","line":30,"column":22,"nodeType":"532","messageId":"533","endLine":30,"endColumn":33},{"ruleId":"530","severity":1,"message":"568","line":5,"column":9,"nodeType":"532","messageId":"533","endLine":5,"endColumn":23},{"ruleId":"530","severity":1,"message":"569","line":5,"column":25,"nodeType":"532","messageId":"533","endLine":5,"endColumn":35},{"ruleId":"530","severity":1,"message":"554","line":26,"column":12,"nodeType":"532","messageId":"533","endLine":26,"endColumn":19},{"ruleId":"530","severity":1,"message":"570","line":7,"column":8,"nodeType":"532","messageId":"533","endLine":7,"endColumn":15},{"ruleId":"530","severity":1,"message":"554","line":17,"column":12,"nodeType":"532","messageId":"533","endLine":17,"endColumn":19},{"ruleId":"530","severity":1,"message":"571","line":21,"column":12,"nodeType":"532","messageId":"533","endLine":21,"endColumn":23},{"ruleId":"530","severity":1,"message":"572","line":29,"column":12,"nodeType":"532","messageId":"533","endLine":29,"endColumn":22},{"ruleId":"530","severity":1,"message":"573","line":31,"column":12,"nodeType":"532","messageId":"533","endLine":31,"endColumn":26},{"ruleId":"530","severity":1,"message":"531","line":1,"column":37,"nodeType":"532","messageId":"533","endLine":1,"endColumn":46},{"ruleId":"530","severity":1,"message":"564","line":7,"column":9,"nodeType":"532","messageId":"533","endLine":7,"endColumn":13},{"ruleId":"530","severity":1,"message":"568","line":9,"column":9,"nodeType":"532","messageId":"533","endLine":9,"endColumn":23},{"ruleId":"530","severity":1,"message":"569","line":9,"column":25,"nodeType":"532","messageId":"533","endLine":9,"endColumn":35},{"ruleId":"530","severity":1,"message":"574","line":15,"column":9,"nodeType":"532","messageId":"533","endLine":15,"endColumn":15},{"ruleId":"530","severity":1,"message":"575","line":26,"column":12,"nodeType":"532","messageId":"533","endLine":26,"endColumn":20},{"ruleId":"530","severity":1,"message":"576","line":26,"column":22,"nodeType":"532","messageId":"533","endLine":26,"endColumn":33},{"ruleId":"530","severity":1,"message":"577","line":33,"column":12,"nodeType":"532","messageId":"533","endLine":33,"endColumn":14},{"ruleId":"530","severity":1,"message":"578","line":33,"column":16,"nodeType":"532","messageId":"533","endLine":33,"endColumn":21},{"ruleId":"530","severity":1,"message":"565","line":35,"column":12,"nodeType":"532","messageId":"533","endLine":35,"endColumn":15},{"ruleId":"530","severity":1,"message":"566","line":35,"column":17,"nodeType":"532","messageId":"533","endLine":35,"endColumn":23},{"ruleId":"530","severity":1,"message":"562","line":36,"column":12,"nodeType":"532","messageId":"533","endLine":36,"endColumn":19},{"ruleId":"530","severity":1,"message":"567","line":36,"column":21,"nodeType":"532","messageId":"533","endLine":36,"endColumn":31},{"ruleId":"530","severity":1,"message":"579","line":39,"column":21,"nodeType":"532","messageId":"533","endLine":39,"endColumn":31},{"ruleId":"580","severity":1,"message":"581","line":83,"column":18,"nodeType":"582","messageId":"583","endLine":83,"endColumn":20},{"ruleId":"580","severity":1,"message":"581","line":85,"column":21,"nodeType":"582","messageId":"583","endLine":85,"endColumn":23},{"ruleId":"580","severity":1,"message":"581","line":88,"column":27,"nodeType":"582","messageId":"583","endLine":88,"endColumn":29},{"ruleId":"580","severity":1,"message":"581","line":90,"column":21,"nodeType":"582","messageId":"583","endLine":90,"endColumn":23},{"ruleId":"580","severity":1,"message":"581","line":93,"column":26,"nodeType":"582","messageId":"583","endLine":93,"endColumn":28},{"ruleId":"580","severity":1,"message":"581","line":95,"column":21,"nodeType":"582","messageId":"583","endLine":95,"endColumn":23},{"ruleId":"584","severity":1,"message":"585","line":156,"column":62,"nodeType":"586","messageId":"587","endLine":156,"endColumn":64},{"ruleId":"584","severity":1,"message":"585","line":161,"column":64,"nodeType":"586","messageId":"587","endLine":161,"endColumn":66},{"ruleId":"584","severity":1,"message":"585","line":166,"column":64,"nodeType":"586","messageId":"587","endLine":166,"endColumn":66},{"ruleId":"584","severity":1,"message":"585","line":367,"column":24,"nodeType":"586","messageId":"587","endLine":367,"endColumn":26},{"ruleId":"584","severity":1,"message":"585","line":380,"column":24,"nodeType":"586","messageId":"587","endLine":380,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":30,"column":23,"nodeType":"532","messageId":"533","endLine":30,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":35,"column":23,"nodeType":"532","messageId":"533","endLine":35,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":69,"column":19,"nodeType":"532","messageId":"533","endLine":69,"endColumn":22},{"ruleId":"530","severity":1,"message":"588","line":29,"column":23,"nodeType":"532","messageId":"533","endLine":29,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":34,"column":23,"nodeType":"532","messageId":"533","endLine":34,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":68,"column":19,"nodeType":"532","messageId":"533","endLine":68,"endColumn":22},{"ruleId":"530","severity":1,"message":"589","line":2,"column":8,"nodeType":"532","messageId":"533","endLine":2,"endColumn":14},{"ruleId":"530","severity":1,"message":"590","line":8,"column":9,"nodeType":"532","messageId":"533","endLine":8,"endColumn":20},{"ruleId":"530","severity":1,"message":"591","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":16},{"ruleId":"530","severity":1,"message":"570","line":7,"column":8,"nodeType":"532","messageId":"533","endLine":7,"endColumn":15},{"ruleId":"530","severity":1,"message":"592","line":12,"column":21,"nodeType":"532","messageId":"533","endLine":12,"endColumn":31},{"ruleId":"530","severity":1,"message":"554","line":13,"column":12,"nodeType":"532","messageId":"533","endLine":13,"endColumn":19},{"ruleId":"530","severity":1,"message":"570","line":7,"column":8,"nodeType":"532","messageId":"533","endLine":7,"endColumn":15},{"ruleId":"530","severity":1,"message":"593","line":11,"column":10,"nodeType":"532","messageId":"533","endLine":11,"endColumn":13},{"ruleId":"530","severity":1,"message":"594","line":11,"column":15,"nodeType":"532","messageId":"533","endLine":11,"endColumn":18},{"ruleId":"530","severity":1,"message":"554","line":16,"column":12,"nodeType":"532","messageId":"533","endLine":16,"endColumn":19},{"ruleId":"530","severity":1,"message":"571","line":19,"column":12,"nodeType":"532","messageId":"533","endLine":19,"endColumn":23},{"ruleId":"530","severity":1,"message":"560","line":2,"column":8,"nodeType":"532","messageId":"533","endLine":2,"endColumn":18},{"ruleId":"530","severity":1,"message":"594","line":6,"column":15,"nodeType":"532","messageId":"533","endLine":6,"endColumn":18},{"ruleId":"530","severity":1,"message":"570","line":7,"column":8,"nodeType":"532","messageId":"533","endLine":7,"endColumn":15},{"ruleId":"530","severity":1,"message":"595","line":13,"column":18,"nodeType":"532","messageId":"533","endLine":13,"endColumn":25},{"ruleId":"530","severity":1,"message":"596","line":15,"column":20,"nodeType":"532","messageId":"533","endLine":15,"endColumn":29},{"ruleId":"530","severity":1,"message":"597","line":58,"column":8,"nodeType":"532","messageId":"533","endLine":58,"endColumn":13},{"ruleId":"539","severity":1,"message":"540","line":134,"column":14,"nodeType":"532","messageId":"541","endLine":134,"endColumn":15},{"ruleId":"530","severity":1,"message":"564","line":2,"column":20,"nodeType":"532","messageId":"533","endLine":2,"endColumn":24},{"ruleId":"530","severity":1,"message":"591","line":5,"column":10,"nodeType":"532","messageId":"533","endLine":5,"endColumn":16},{"ruleId":"530","severity":1,"message":"595","line":13,"column":18,"nodeType":"532","messageId":"533","endLine":13,"endColumn":25},{"ruleId":"530","severity":1,"message":"598","line":15,"column":12,"nodeType":"532","messageId":"533","endLine":15,"endColumn":20},{"ruleId":"530","severity":1,"message":"599","line":25,"column":12,"nodeType":"532","messageId":"533","endLine":25,"endColumn":24},{"ruleId":"530","severity":1,"message":"600","line":27,"column":12,"nodeType":"532","messageId":"533","endLine":27,"endColumn":24},{"ruleId":"530","severity":1,"message":"601","line":37,"column":28,"nodeType":"532","messageId":"533","endLine":37,"endColumn":48},{"ruleId":"544","severity":1,"message":"602","line":183,"column":130,"nodeType":"546","messageId":"547","endLine":183,"endColumn":132},{"ruleId":"544","severity":1,"message":"602","line":183,"column":202,"nodeType":"546","messageId":"547","endLine":183,"endColumn":204},{"ruleId":"544","severity":1,"message":"602","line":234,"column":47,"nodeType":"546","messageId":"547","endLine":234,"endColumn":49},{"ruleId":"544","severity":1,"message":"602","line":234,"column":61,"nodeType":"546","messageId":"547","endLine":234,"endColumn":63},{"ruleId":"544","severity":1,"message":"602","line":271,"column":131,"nodeType":"546","messageId":"547","endLine":271,"endColumn":133},{"ruleId":"544","severity":1,"message":"602","line":271,"column":181,"nodeType":"546","messageId":"547","endLine":271,"endColumn":183},{"ruleId":"530","severity":1,"message":"603","line":23,"column":20,"nodeType":"532","messageId":"533","endLine":23,"endColumn":29},{"ruleId":"530","severity":1,"message":"604","line":41,"column":12,"nodeType":"532","messageId":"533","endLine":41,"endColumn":16},{"ruleId":"544","severity":1,"message":"602","line":260,"column":31,"nodeType":"546","messageId":"547","endLine":260,"endColumn":33},{"ruleId":"544","severity":1,"message":"602","line":271,"column":9,"nodeType":"546","messageId":"547","endLine":271,"endColumn":11},{"ruleId":"530","severity":1,"message":"588","line":27,"column":23,"nodeType":"532","messageId":"533","endLine":27,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":32,"column":23,"nodeType":"532","messageId":"533","endLine":32,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":65,"column":19,"nodeType":"532","messageId":"533","endLine":65,"endColumn":22},{"ruleId":"530","severity":1,"message":"588","line":29,"column":23,"nodeType":"532","messageId":"533","endLine":29,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":34,"column":23,"nodeType":"532","messageId":"533","endLine":34,"endColumn":26},{"ruleId":"530","severity":1,"message":"588","line":68,"column":19,"nodeType":"532","messageId":"533","endLine":68,"endColumn":22},{"ruleId":"530","severity":1,"message":"564","line":3,"column":9,"nodeType":"532","messageId":"533","endLine":3,"endColumn":13},{"ruleId":"530","severity":1,"message":"553","line":6,"column":16,"nodeType":"532","messageId":"533","endLine":6,"endColumn":22},{"ruleId":"530","severity":1,"message":"569","line":9,"column":25,"nodeType":"532","messageId":"533","endLine":9,"endColumn":35},{"ruleId":"530","severity":1,"message":"605","line":24,"column":19,"nodeType":"532","messageId":"533","endLine":24,"endColumn":29},{"ruleId":"584","severity":1,"message":"585","line":55,"column":17,"nodeType":"586","messageId":"587","endLine":55,"endColumn":19},{"ruleId":"544","severity":1,"message":"602","line":89,"column":36,"nodeType":"546","messageId":"547","endLine":89,"endColumn":38},{"ruleId":"544","severity":1,"message":"602","line":98,"column":19,"nodeType":"546","messageId":"547","endLine":98,"endColumn":21},{"ruleId":"544","severity":1,"message":"602","line":109,"column":21,"nodeType":"546","messageId":"547","endLine":109,"endColumn":23},{"ruleId":"544","severity":1,"message":"602","line":118,"column":21,"nodeType":"546","messageId":"547","endLine":118,"endColumn":23},{"ruleId":"584","severity":1,"message":"585","line":155,"column":17,"nodeType":"586","messageId":"587","endLine":155,"endColumn":19},{"ruleId":"584","severity":1,"message":"585","line":226,"column":15,"nodeType":"586","messageId":"587","endLine":226,"endColumn":17},{"ruleId":"584","severity":1,"message":"585","line":294,"column":15,"nodeType":"586","messageId":"587","endLine":294,"endColumn":17},{"ruleId":"530","severity":1,"message":"564","line":3,"column":9,"nodeType":"532","messageId":"533","endLine":3,"endColumn":13},{"ruleId":"530","severity":1,"message":"553","line":6,"column":16,"nodeType":"532","messageId":"533","endLine":6,"endColumn":22},{"ruleId":"530","severity":1,"message":"569","line":9,"column":25,"nodeType":"532","messageId":"533","endLine":9,"endColumn":35},{"ruleId":"530","severity":1,"message":"605","line":24,"column":19,"nodeType":"532","messageId":"533","endLine":24,"endColumn":29},{"ruleId":"584","severity":1,"message":"585","line":55,"column":17,"nodeType":"586","messageId":"587","endLine":55,"endColumn":19},{"ruleId":"544","severity":1,"message":"602","line":89,"column":36,"nodeType":"546","messageId":"547","endLine":89,"endColumn":38},{"ruleId":"544","severity":1,"message":"602","line":98,"column":19,"nodeType":"546","messageId":"547","endLine":98,"endColumn":21},{"ruleId":"544","severity":1,"message":"602","line":115,"column":21,"nodeType":"546","messageId":"547","endLine":115,"endColumn":23},{"ruleId":"544","severity":1,"message":"602","line":124,"column":21,"nodeType":"546","messageId":"547","endLine":124,"endColumn":23},{"ruleId":"584","severity":1,"message":"585","line":161,"column":17,"nodeType":"586","messageId":"587","endLine":161,"endColumn":19},{"ruleId":"584","severity":1,"message":"585","line":238,"column":15,"nodeType":"586","messageId":"587","endLine":238,"endColumn":17},{"ruleId":"584","severity":1,"message":"585","line":312,"column":15,"nodeType":"586","messageId":"587","endLine":312,"endColumn":17},{"ruleId":"530","severity":1,"message":"606","line":2,"column":17,"nodeType":"532","messageId":"533","endLine":2,"endColumn":22},{"ruleId":"530","severity":1,"message":"564","line":6,"column":9,"nodeType":"532","messageId":"533","endLine":6,"endColumn":13},{"ruleId":"530","severity":1,"message":"607","line":30,"column":11,"nodeType":"532","messageId":"533","endLine":30,"endColumn":28},{"ruleId":"530","severity":1,"message":"608","line":35,"column":11,"nodeType":"532","messageId":"533","endLine":35,"endColumn":29},{"ruleId":"530","severity":1,"message":"609","line":46,"column":11,"nodeType":"532","messageId":"533","endLine":46,"endColumn":19},{"ruleId":"544","severity":1,"message":"602","line":59,"column":40,"nodeType":"546","messageId":"547","endLine":59,"endColumn":42},{"ruleId":"544","severity":1,"message":"602","line":59,"column":50,"nodeType":"546","messageId":"547","endLine":59,"endColumn":52},{"ruleId":"544","severity":1,"message":"545","line":59,"column":50,"nodeType":"546","messageId":"547","endLine":59,"endColumn":52},{"ruleId":"544","severity":1,"message":"545","line":59,"column":65,"nodeType":"546","messageId":"547","endLine":59,"endColumn":67},{"ruleId":"544","severity":1,"message":"602","line":113,"column":66,"nodeType":"546","messageId":"547","endLine":113,"endColumn":68},{"ruleId":"544","severity":1,"message":"602","line":137,"column":29,"nodeType":"546","messageId":"547","endLine":137,"endColumn":31},{"ruleId":"530","severity":1,"message":"553","line":2,"column":18,"nodeType":"532","messageId":"533","endLine":2,"endColumn":24},{"ruleId":"530","severity":1,"message":"610","line":12,"column":19,"nodeType":"532","messageId":"533","endLine":12,"endColumn":27},{"ruleId":"544","severity":1,"message":"602","line":53,"column":208,"nodeType":"546","messageId":"547","endLine":53,"endColumn":210},{"ruleId":"544","severity":1,"message":"602","line":53,"column":253,"nodeType":"546","messageId":"547","endLine":53,"endColumn":255},{"ruleId":"530","severity":1,"message":"564","line":2,"column":20,"nodeType":"532","messageId":"533","endLine":2,"endColumn":24},{"ruleId":"530","severity":1,"message":"610","line":14,"column":19,"nodeType":"532","messageId":"533","endLine":14,"endColumn":27},{"ruleId":"530","severity":1,"message":"611","line":15,"column":12,"nodeType":"532","messageId":"533","endLine":15,"endColumn":17},{"ruleId":"530","severity":1,"message":"612","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":13},{"ruleId":"530","severity":1,"message":"553","line":2,"column":10,"nodeType":"532","messageId":"533","endLine":2,"endColumn":16},{"ruleId":"530","severity":1,"message":"613","line":2,"column":32,"nodeType":"532","messageId":"533","endLine":2,"endColumn":39},{"ruleId":"530","severity":1,"message":"606","line":2,"column":41,"nodeType":"532","messageId":"533","endLine":2,"endColumn":46},{"ruleId":"530","severity":1,"message":"606","line":2,"column":16,"nodeType":"532","messageId":"533","endLine":2,"endColumn":21},{"ruleId":"530","severity":1,"message":"614","line":13,"column":21,"nodeType":"532","messageId":"533","endLine":13,"endColumn":32},{"ruleId":"530","severity":1,"message":"615","line":14,"column":19,"nodeType":"532","messageId":"533","endLine":14,"endColumn":27},{"ruleId":"530","severity":1,"message":"616","line":15,"column":12,"nodeType":"532","messageId":"533","endLine":15,"endColumn":16},{"ruleId":"530","severity":1,"message":"617","line":8,"column":12,"nodeType":"532","messageId":"533","endLine":8,"endColumn":17},{"ruleId":"530","severity":1,"message":"618","line":10,"column":17,"nodeType":"532","messageId":"533","endLine":10,"endColumn":23},{"ruleId":"530","severity":1,"message":"619","line":11,"column":28,"nodeType":"532","messageId":"533","endLine":11,"endColumn":45},{"ruleId":"544","severity":1,"message":"602","line":68,"column":133,"nodeType":"546","messageId":"547","endLine":68,"endColumn":135},{"ruleId":"544","severity":1,"message":"602","line":68,"column":186,"nodeType":"546","messageId":"547","endLine":68,"endColumn":188},{"ruleId":"530","severity":1,"message":"561","line":14,"column":11,"nodeType":"532","messageId":"533","endLine":14,"endColumn":16},{"ruleId":"530","severity":1,"message":"571","line":15,"column":12,"nodeType":"532","messageId":"533","endLine":15,"endColumn":23},{"ruleId":"530","severity":1,"message":"620","line":16,"column":24,"nodeType":"532","messageId":"533","endLine":16,"endColumn":37},{"ruleId":"544","severity":1,"message":"602","line":40,"column":58,"nodeType":"546","messageId":"547","endLine":40,"endColumn":60},{"ruleId":"544","severity":1,"message":"602","line":40,"column":68,"nodeType":"546","messageId":"547","endLine":40,"endColumn":70},{"ruleId":"544","severity":1,"message":"602","line":46,"column":105,"nodeType":"546","messageId":"547","endLine":46,"endColumn":107},{"ruleId":"544","severity":1,"message":"602","line":66,"column":32,"nodeType":"546","messageId":"547","endLine":66,"endColumn":34},{"ruleId":"544","severity":1,"message":"545","line":66,"column":32,"nodeType":"546","messageId":"547","endLine":66,"endColumn":34},{"ruleId":"544","severity":1,"message":"545","line":67,"column":105,"nodeType":"546","messageId":"547","endLine":67,"endColumn":107},{"ruleId":"544","severity":1,"message":"602","line":94,"column":71,"nodeType":"546","messageId":"547","endLine":94,"endColumn":73},{"ruleId":"544","severity":1,"message":"602","line":95,"column":117,"nodeType":"546","messageId":"547","endLine":95,"endColumn":119},{"ruleId":"530","severity":1,"message":"593","line":2,"column":10,"nodeType":"532","messageId":"533","endLine":2,"endColumn":13},{"ruleId":"530","severity":1,"message":"621","line":10,"column":26,"nodeType":"532","messageId":"533","endLine":10,"endColumn":40},{"ruleId":"544","severity":1,"message":"602","line":44,"column":200,"nodeType":"546","messageId":"547","endLine":44,"endColumn":202},{"ruleId":"544","severity":1,"message":"602","line":44,"column":245,"nodeType":"546","messageId":"547","endLine":44,"endColumn":247},{"ruleId":"530","severity":1,"message":"622","line":4,"column":8,"nodeType":"532","messageId":"533","endLine":4,"endColumn":13},{"ruleId":"530","severity":1,"message":"623","line":11,"column":23,"nodeType":"532","messageId":"533","endLine":11,"endColumn":35},{"ruleId":"530","severity":1,"message":"624","line":12,"column":28,"nodeType":"532","messageId":"533","endLine":12,"endColumn":45},{"ruleId":"584","severity":1,"message":"625","line":66,"column":44,"nodeType":"626","messageId":"627","endLine":66,"endColumn":52},{"ruleId":"530","severity":1,"message":"628","line":13,"column":23,"nodeType":"532","messageId":"533","endLine":13,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["629"],"no-negated-in-lhs",["630"],"'user' is assigned a value but never used.","no-redeclare","'x' is already defined.","redeclared","'BackgroundHeader' is defined but never used.","'filter' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Icon' is defined but never used.","'Badge' is defined but never used.","'Menu' is defined but never used.","'Dropdown' is defined but never used.","'Popover' is defined but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'setCallback' is assigned a value but never used.","'IconFont' is assigned a value but never used.","'UploadOutlined' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'Component' is defined but never used.","'BreadCrumb' is defined but never used.","'state' is assigned a value but never used.","'success' is assigned a value but never used.","'token' is assigned a value but never used.","'Link' is defined but never used.","'err' is assigned a value but never used.","'setErr' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'showSuccessMsg' is defined but never used.","'showErrMsg' is defined but never used.","'Loading' is defined but never used.","'currentPage' is assigned a value but never used.","'categories' is assigned a value but never used.","'categoriesList' is assigned a value but never used.","'Option' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'id' is assigned a value but never used.","'setID' is assigned a value but never used.","'setLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'res' is assigned a value but never used.","'Helmet' is defined but never used.","'useDispatch' is defined but never used.","'Avatar' is defined but never used.","'setMyPosts' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'setPets' is assigned a value but never used.","'setResult' is assigned a value but never used.","'click' is assigned a value but never used.","'name_pet' is assigned a value but never used.","'name_product' is assigned a value but never used.","'productsList' is assigned a value but never used.","'setReviewProductList' is assigned a value but never used.","Unexpected mix of '&&' and '||'.","'setCities' is assigned a value but never used.","'form' is assigned a value but never used.","'setHistory' is assigned a value but never used.","'Space' is defined but never used.","'showModalAddReply' is assigned a value but never used.","'showModalEditReply' is assigned a value but never used.","'ModalAdd' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'title' is assigned a value but never used.","'React' is defined but never used.","'Divider' is defined but never used.","'setStatuses' is assigned a value but never used.","'setTypes' is assigned a value but never used.","'pets' is assigned a value but never used.","'posts' is assigned a value but never used.","'setALL' is assigned a value but never used.","'setNumPostByTopic' is assigned a value but never used.","'setResPerPage' is assigned a value but never used.","'setPostsSlider' is assigned a value but never used.","'House' is defined but never used.","'setPetsCount' is assigned a value but never used.","'setNumPetByStatus' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'setPetsSlider' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]