{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thu26\\\\Desktop\\\\test\\\\test1234\\\\tlcn\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\CreateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport './css/createProduct.css';\nimport './css/form.css';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport quillEmoji from \"react-quill-emoji\";\nimport \"react-quill-emoji/dist/quill-emoji.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  price: 0,\n\n  /*     description: 'description', */\n  content: 'content',\n  stock: 0,\n  category: '',\n  _id: ''\n};\n\nfunction CreateProduct() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [product, setProduct] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories;\n  const [categoriesListProduct] = state.categoriesAPI.categoriesListProduct;\n  const [categoriesList] = state.categoriesAPI.categoriesList;\n  const [images, setImages] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const {\n    isAdmin\n  } = auth;\n  const token = useSelector(state => state.token); //const [isAdmin] = state.userAPI.isAdmin\n  //const [token] = state.token\n\n  const history = useHistory();\n  const param = useParams();\n  const [products] = state.productsAPI.products;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.productsAPI.callback;\n  const [description, setDescription] = useState('');\n  Quill.register({\n    \"formats/emoji\": quillEmoji.EmojiBlot,\n    \"modules/emoji-toolbar\": quillEmoji.ToolbarEmoji,\n    \"modules/emoji-textarea\": quillEmoji.TextAreaEmoji,\n    \"modules/emoji-shortname\": quillEmoji.ShortNameEmoji\n  }, true);\n  useEffect(() => {\n    if (param.id) {\n      console.log('param.id');\n      console.log(param.id);\n      setOnEdit(true);\n      products.forEach(product => {\n        if (product._id === param.id) {\n          console.log('product');\n          console.log(product);\n          setProduct(product);\n          setDescription(product.description);\n          setImages(product.images);\n        }\n      });\n    } else {\n      console.log('param.id1');\n      console.log(param.id);\n      setOnEdit(false);\n      setProduct(initialState);\n      setImages(false);\n    }\n  }, [param.id, products]);\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 2 * 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload_product', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      setLoading(true);\n      await axios.post('/api/destroy_admin', {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleDescription = async e => {\n    console.log('e');\n    console.log(e);\n    setDescription(e);\n  };\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct({ ...product,\n      [name]: value\n    });\n  };\n  /*     const createCategoryList = (cate, options =[]) => {\r\n  \r\n          cate.map((cat) =>{\r\n              options.push({value:cat._id, name: cat.name, parentId: cat.parentId});\r\n              if(cat.children.length > 0)\r\n              {\r\n                  createCategoryList(cat.children, options)\r\n              }\r\n          })\r\n  \r\n          return options;\r\n      }; */\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      if (!images) return alert(\"No Image Upload\");\n\n      if (onEdit) {\n        await axios.put(`/api/admin/products/${product._id}`, { ...product,\n          description,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } else {\n        await axios.post('/api/admin/products/new', { ...product,\n          description,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        /* \r\n                        console.log(typeof res.data.productnew._id)\r\n                        let _id_update_cat;\r\n                        categoriesList.map(_ =>{\r\n                            if(_._id === res.data.productnew.category)\r\n                            {\r\n                                _id_update_cat = _._id\r\n                            }\r\n                        })\r\n        \r\n                        console.log({_id_update_cat})\r\n        \r\n                        await axios.patch(`/api/update_category_product/${_id_update_cat}`, {products:res.data.productnew._id}, {\r\n                            headers: {Authorization: token}\r\n                        }) */\n      }\n\n      setCallback(!callback);\n      history.push(\"/admin/all_product\");\n    } catch (err) {//alert(err.response.data.msg)\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: onEdit ? \"Update Product\" : \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_product\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [48, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 24,\n          md: 24,\n          lg: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"file\",\n              id: \"file_up\",\n              onChange: handleUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"file_load\",\n              children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"file_img\",\n              style: styleUpload,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: images ? images.url : '',\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cancel\",\n                onClick: handleDestroy,\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 24,\n          md: 24,\n          lg: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"card\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                required: true,\n                value: product.name,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"price\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"number\",\n                name: \"price\",\n                id: \"price\",\n                required: true,\n                value: product.price,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"price\",\n                children: \"Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"number\",\n                name: \"stock\",\n                id: \"stock\",\n                required: true,\n                value: product.stock,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                class: \"group-control\",\n                theme: \"snow\",\n                name: \"description\",\n                id: \"description\",\n                placeholder: \"Description...\",\n                value: description,\n                onChange: handleDescription,\n                formats: [\"header\", \"font\", \"size\", \"align\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"color\", \"background\", \"emoji\"],\n                modules: {\n                  toolbar: {\n                    container: [[{\n                      header: [1, 2, 3, 4, 5, 6]\n                    }, {\n                      font: []\n                    }], [{\n                      size: []\n                    }], [{\n                      color: []\n                    }, {\n                      background: []\n                    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n                      align: []\n                    }], [{\n                      list: 'ordered'\n                    }, {\n                      list: 'bullet'\n                    }], [\"emoji\"], ['clean'], ['code-block']]\n                  },\n                  \"emoji-toolbar\": true,\n                  \"emoji-textarea\": true,\n                  \"emoji-shortname\": true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"content\",\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"content\",\n                id: \"content\",\n                required: true,\n                value: product.content,\n                rows: \"7\",\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"categories\",\n                children: \"Categories: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"group-control\",\n                name: \"category\",\n                value: product.category,\n                onChange: handleChangeInput,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Please select a category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 29\n                }, this), categoriesListProduct.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option._id,\n                  children: option.name\n                }, option._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 68\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-form\",\n              type: \"submit\",\n              children: onEdit ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateProduct, \"j5fnPRcZQ3d9yK70ADO1EsDL3jg=\", false, function () {\n  return [useSelector, useSelector, useHistory, useParams];\n});\n\n_c = CreateProduct;\nexport default CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"sources":["C:/Users/thu26/Desktop/test/test1234/tlcn/tlcn/client/src/components/mainpages/admin/CreateProduct.js"],"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useHistory","useParams","useSelector","Row","Col","ReactQuill","Quill","quillEmoji","initialState","name","price","content","stock","category","_id","CreateProduct","state","product","setProduct","categories","categoriesAPI","categoriesListProduct","categoriesList","images","setImages","loading","setLoading","auth","isAdmin","token","history","param","products","productsAPI","onEdit","setOnEdit","callback","setCallback","description","setDescription","register","EmojiBlot","ToolbarEmoji","TextAreaEmoji","ShortNameEmoji","id","console","log","forEach","handleUpload","e","preventDefault","alert","file","target","files","size","type","formData","FormData","append","res","post","headers","Authorization","data","err","response","msg","handleDestroy","public_id","handleDescription","handleChangeInput","value","handleSubmit","put","push","styleUpload","display","url","toolbar","container","header","font","color","background","align","list","map","option"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport { Row, Col } from 'antd';\r\nimport './css/createProduct.css'\r\nimport './css/form.css'\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport quillEmoji from \"react-quill-emoji\";\r\nimport \"react-quill-emoji/dist/quill-emoji.css\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    price: 0,\r\n/*     description: 'description', */\r\n    content: 'content',\r\n    stock: 0,\r\n    category: '',\r\n    _id: ''\r\n}\r\n\r\nfunction CreateProduct() {\r\n    const state = useContext(GlobalState)\r\n    const [product, setProduct] = useState(initialState)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [categoriesListProduct] = state.categoriesAPI.categoriesListProduct\r\n    const [categoriesList] = state.categoriesAPI.categoriesList\r\n    const [images, setImages] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const {isAdmin} = auth\r\n    const token = useSelector(state => state.token)\r\n\r\n    //const [isAdmin] = state.userAPI.isAdmin\r\n    //const [token] = state.token\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n\r\n    const [products] = state.productsAPI.products\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [callback, setCallback] = state.productsAPI.callback\r\n    const [description, setDescription] = useState('');\r\n\r\n    Quill.register(\r\n        {\r\n          \"formats/emoji\": quillEmoji.EmojiBlot,\r\n          \"modules/emoji-toolbar\": quillEmoji.ToolbarEmoji,\r\n          \"modules/emoji-textarea\": quillEmoji.TextAreaEmoji,\r\n          \"modules/emoji-shortname\": quillEmoji.ShortNameEmoji\r\n        },\r\n        true\r\n      );\r\n\r\n    useEffect(() => {\r\n        if(param.id){\r\n            console.log('param.id')\r\n            console.log(param.id)\r\n            setOnEdit(true)\r\n            products.forEach(product => {\r\n                if(product._id === param.id) {\r\n                    console.log('product')\r\n                    console.log(product)\r\n                    setProduct(product)\r\n                    setDescription(product.description)\r\n                    setImages(product.images)\r\n                }\r\n            })\r\n        }else{\r\n            console.log('param.id1')\r\n            console.log(param.id)\r\n            setOnEdit(false)\r\n            setProduct(initialState)\r\n            setImages(false)\r\n        }\r\n    }, [param.id, products])\r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            const file = e.target.files[0]\r\n            \r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 2* 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_product', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(res.data)\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleDestroy = async () => {\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            setLoading(true)\r\n            await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleDescription = async e =>{\r\n        console.log('e')\r\n        console.log(e)\r\n        setDescription(e)\r\n\r\n    }\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setProduct({...product, [name]:value})\r\n    }\r\n\r\n/*     const createCategoryList = (cate, options =[]) => {\r\n\r\n        cate.map((cat) =>{\r\n            options.push({value:cat._id, name: cat.name, parentId: cat.parentId});\r\n            if(cat.children.length > 0)\r\n            {\r\n                createCategoryList(cat.children, options)\r\n            }\r\n        })\r\n\r\n        return options;\r\n    }; */\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            if(!images) return alert(\"No Image Upload\")\r\n\r\n            if(onEdit){\r\n                await axios.put(`/api/admin/products/${product._id}`, {...product,description, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }else{\r\n                await axios.post('/api/admin/products/new', {...product, description, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n/* \r\n                console.log(typeof res.data.productnew._id)\r\n                let _id_update_cat;\r\n                categoriesList.map(_ =>{\r\n                    if(_._id === res.data.productnew.category)\r\n                    {\r\n                        _id_update_cat = _._id\r\n                    }\r\n                })\r\n\r\n                console.log({_id_update_cat})\r\n\r\n                await axios.patch(`/api/update_category_product/${_id_update_cat}`, {products:res.data.productnew._id}, {\r\n                    headers: {Authorization: token}\r\n                }) */\r\n            }\r\n            setCallback(!callback)\r\n            history.push(\"/admin/all_product\")\r\n        } catch (err) {\r\n            //alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n    return (\r\n        <>\r\n        <h2>{onEdit? \"Update Product\" : \"Create Product\"}</h2>\r\n        <div className=\"create_product\">\r\n            <Row gutter={[48, 16]}>\r\n                <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                <div className=\"upload\">\r\n                    <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\r\n                    {\r\n                        loading ? <div id=\"file_load\"><Loading /></div>\r\n\r\n                        :<div id=\"file_img\" style={styleUpload}>\r\n                            <img src={images ? images.url : ''} alt=\"\"/>\r\n                            <span className=\"cancel\" onClick={handleDestroy}>X</span>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                <form className='card' onSubmit={handleSubmit}>\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input class=\"group-control\" type=\"text\" name=\"name\" id=\"name\" required\r\n                        value={product.name} onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <input class=\"group-control\" type=\"number\" name=\"price\" id=\"price\" required\r\n                        value={product.price} onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"price\">Stock</label>\r\n                        <input class=\"group-control\" type=\"number\" name=\"stock\" id=\"stock\" required\r\n                        value={product.stock} onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n {/*                        <textarea class=\"group-control\" type=\"text\" name=\"description\" id=\"description\" required\r\n                        value={product.description} rows=\"5\" onChange={handleChangeInput} /> */}\r\n                         <ReactQuill\r\n                            class=\"group-control\"\r\n\t\t\t\t\t\t\ttheme='snow'\r\n\t\t\t\t\t\t\tname=\"description\" \r\n                            id=\"description\"\r\n\t\t\t\t\t\t\tplaceholder='Description...'\r\n\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\tonChange={handleDescription}\r\n                            formats={[\r\n                                \"header\",\r\n                                \"font\",\r\n                                \"size\",\r\n                                \"align\",\r\n                                \"bold\",\r\n                                \"italic\",\r\n                                \"underline\",\r\n                                \"strike\",\r\n                                \"blockquote\",\r\n                                \"list\",\r\n                                \"bullet\",\r\n                                \"indent\",\r\n                                \"color\",\r\n                                \"background\",\r\n                                \"emoji\",\r\n                            ]}\r\n                            modules={{\r\n                            toolbar: {\r\n                                container: [\r\n                                    [{ header: [1, 2, 3, 4, 5, 6] }, { font: [] }],\r\n                                    [{ size: [] }],\r\n                                    [{ color: [] }, { background: [] }],\r\n                                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                                    [{ align: [] }],\r\n                                    [{ list: 'ordered' }, { list: 'bullet' }],\r\n                                    [\"emoji\"],\r\n                                    ['clean'],\r\n                                    ['code-block']\r\n                                ]\r\n                            },\r\n                            \"emoji-toolbar\": true,\r\n                            \"emoji-textarea\": true,\r\n                            \"emoji-shortname\": true,\r\n                        }}\r\n\t\t\t\t\t\t/> \r\n                    \r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea class=\"group-control\" type=\"text\" name=\"content\" id=\"content\" required\r\n                        value={product.content} rows=\"7\" onChange={handleChangeInput} />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"categories\">Categories: </label>\r\n                        <select class=\"group-control\" name=\"category\" value={product.category} onChange={handleChangeInput} >\r\n                            <option value=\"\">Please select a category</option>\r\n                            {\r\n                                categoriesListProduct.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                            }\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button className=\"btn-form\" type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n                </form>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateProduct"]},"metadata":{},"sourceType":"module"}