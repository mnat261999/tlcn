{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\HKII_2020_2021\\\\Tieu_Luan_CN\\\\code\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { Row, Col } from 'antd';\nimport './css/form.css';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loading from '../utils/loading/Loading';\nimport { GlobalState } from '../../../GlobalState';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: '',\n  description: '',\n  _id: ''\n};\n\nfunction CreatePost() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const token = useSelector(state => state.token);\n  const auth = useSelector(state => state.auth);\n  const {\n    user,\n    isAdmin\n  } = auth;\n  const [myPost, setMyPost] = useState(initialState);\n  const [slug, setSlug] = useState('');\n  const [slugButton, setSlugButton] = useState(false);\n  const [images, setImages] = useState(false);\n  const [currentImage, setCurrentImage] = useState('Choose image');\n  const [loading, setLoading] = useState(false);\n  const [body, setBody] = useState('');\n  const [myPosts] = state.myPostsAPI.myPosts;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.myPostsAPI.callback;\n  const history = useHistory();\n  const param = useParams();\n  useEffect(() => {\n    if (param.id) {\n      console.log('param.id');\n      console.log(param.id);\n      setOnEdit(true);\n      myPosts.forEach(myPost => {\n        if (myPost._id === param.id) {\n          setMyPost(myPost);\n          setImages(myPost.images);\n        }\n      });\n    } else {\n      console.log('param.id1');\n      console.log(param.id);\n      setOnEdit(false);\n      setMyPost(initialState);\n      setImages(false);\n    }\n  }, [param.id, myPosts]);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMyPost({ ...myPost,\n      [name]: value\n    });\n    const createSlug = e.target.value.trim().split(' ').join('-').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    setSlug(createSlug);\n  };\n\n  const slugHandle = e => {\n    setSlugButton(true);\n    setSlug(e.target.value);\n  };\n\n  const handleURL = e => {\n    e.preventDefault();\n    setSlug(slug.trim().split(' ').join('-'));\n  };\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      console.log(e.target.files[0].name);\n      setCurrentImage(e.target.files[0].name);\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload_post', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {}\n  };\n\n  const imageHandler = async e => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n\n    input.onchange = async e => {\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file); // Save current cursor state\n\n      const range = this.quill.getSelection(true); // Insert temporary loading placeholder image\n\n      this.quill.insertEmbed(range.index, 'image', `${window.location.origin}/images/loaders/placeholder.gif`); // Move cursor to right side of image (easier to continue typing)\n\n      this.quill.setSelection(range.index + 1);\n      const res = await axios.post('/api/upload_post', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setImages(res.data); // Remove placeholder image\n\n      this.quill.deleteText(range.index, 1); // Insert uploaded image\n      // this.quill.insertEmbed(range.index, 'image', res.body.image);\n\n      this.quill.insertEmbed(range.index, 'image', res);\n    };\n  };\n\n  const handleDestroy = async () => {\n    try {\n      setLoading(true);\n      await axios.post('/api/destroy_admin', {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setCurrentImage('Choose image');\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n\n  const handleDescription = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMyPost({ ...myPost,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      console.log(images);\n      if (!images) return alert(\"No Image Upload\");\n      if (!slug || !body) return alert(\"Please fill in all fields.\");\n\n      if (onEdit) {\n        /*                 await axios.put(`/api/admin/products/${product._id}`, {...product, images}, {\r\n                            headers: {Authorization: token}\r\n                        }) */\n      } else {\n        await axios.post('/api/admin/posts/new', { ...myPost,\n          images,\n          slug,\n          body\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      }\n\n      setCallback(!callback);\n      history.push(\"/\");\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Create a new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [48, 16],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 24,\n            md: 24,\n            lg: 24,\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"title\",\n                  children: \"Post Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"group-control\",\n                  type: \"text\",\n                  name: \"title\",\n                  id: \"title\",\n                  placeholder: \"Post title...\",\n                  onChange: handleChangeInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"file__label\",\n                  htmlFor: \"file\",\n                  children: loading ? currentImage : currentImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"file\",\n                  id: \"file\",\n                  onChange: handleUpload\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"body\",\n                  children: \"Post body\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                  theme: \"snow\",\n                  id: \"body\",\n                  placeholder: \"Post body...\",\n                  value: body,\n                  onChange: setBody,\n                  modules: {\n                    toolbar: {\n                      container: [[{\n                        header: '1'\n                      }, {\n                        header: '2'\n                      }, {\n                        header: [3, 4, 5, 6]\n                      }, {\n                        font: []\n                      }], [{\n                        size: []\n                      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n                        list: 'ordered'\n                      }, {\n                        list: 'bullet'\n                      }], ['link', 'image', 'video']],\n                      handlers: {\n                        image: imageHandler\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  children: \"Meta Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"description\",\n                  id: \"description\",\n                  cols: \"30\",\n                  rows: \"10\",\n                  className: \"group-control\",\n                  placeholder: \"meta description...\",\n                  maxLength: \"150\",\n                  onChange: handleDescription,\n                  defaultValue: myPost.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"length\",\n                  children: myPost.description ? myPost.description.length : '0'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 24,\n            md: 24,\n            lg: 24,\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"slug\",\n                  children: \"Post URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"slug\",\n                  id: \"slug\",\n                  className: \"group-control\",\n                  placeholder: \"Post URL...\",\n                  onChange: slugHandle,\n                  value: slug\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: slugButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-default\",\n                  onClick: handleURL,\n                  children: \"Update Slug\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 45\n                }, this) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"imagePreview\",\n                  children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"file_load\",\n                    children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 75\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 55\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"img_post\",\n                    style: styleUpload,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: images ? images.url : '',\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"cancel\",\n                      onClick: handleDestroy,\n                      children: \"X\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"CREATE POST\",\n                  className: \"btn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 1\n  }, this);\n}\n\n_s(CreatePost, \"0BOA4ggCMD1EZv89NydB7M7EOHg=\", false, function () {\n  return [useSelector, useSelector, useHistory, useParams];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/Documents/HKII_2020_2021/Tieu_Luan_CN/code/tlcn/client/src/components/mainpages/admin/CreatePost.js"],"names":["React","useState","useContext","useEffect","Helmet","Row","Col","ReactQuill","axios","useDispatch","useSelector","Loading","GlobalState","useHistory","useParams","initialState","title","description","_id","CreatePost","state","token","auth","user","isAdmin","myPost","setMyPost","slug","setSlug","slugButton","setSlugButton","images","setImages","currentImage","setCurrentImage","loading","setLoading","body","setBody","myPosts","myPostsAPI","onEdit","setOnEdit","callback","setCallback","history","param","id","console","log","forEach","handleChangeInput","e","name","value","target","createSlug","trim","split","join","normalize","replace","slugHandle","handleURL","preventDefault","handleUpload","files","file","alert","size","type","formData","FormData","append","res","post","headers","Authorization","data","err","imageHandler","input","document","createElement","setAttribute","click","onchange","range","quill","getSelection","insertEmbed","index","window","location","origin","setSelection","deleteText","handleDestroy","public_id","response","msg","styleUpload","display","handleDescription","handleSubmit","push","toolbar","container","header","font","list","handlers","image","length","url"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport Helmet from 'react-helmet';\r\nimport { Row, Col } from 'antd';\r\nimport './css/form.css'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from 'axios'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    _id: ''\r\n}\r\n\r\nfunction CreatePost() {\r\n    const state = useContext(GlobalState)\r\n    const token = useSelector(state => state.token)\r\n    const auth = useSelector(state => state.auth)\r\n    const {user, isAdmin} = auth\r\n    const [myPost, setMyPost] = useState(initialState)\r\n\r\n    const [slug, setSlug] = useState('');\r\n    const [slugButton, setSlugButton] = useState(false);\r\n\r\n    const [images, setImages] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState('Choose image');\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [body, setBody] = useState('');\r\n\r\n    const [myPosts] = state.myPostsAPI.myPosts\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [callback, setCallback] = state.myPostsAPI.callback\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n\r\n    useEffect(() => {\r\n        if(param.id){\r\n            console.log('param.id')\r\n            console.log(param.id)\r\n            setOnEdit(true)\r\n            myPosts.forEach(myPost => {\r\n                if(myPost._id === param.id) {\r\n                    setMyPost(myPost)\r\n                    setImages(myPost.images)\r\n                }\r\n            })\r\n        }else{\r\n            console.log('param.id1')\r\n            console.log(param.id)\r\n            setOnEdit(false)\r\n            setMyPost(initialState)\r\n            setImages(false)\r\n        }\r\n    }, [param.id, myPosts])\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setMyPost({...myPost, [name]:value})\r\n\r\n        const createSlug = e.target.value.trim().split(' ').join('-').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n\t\tsetSlug(createSlug);\r\n    }\r\n\r\n    const slugHandle = (e) => {\r\n        setSlugButton(true);\r\n\t\tsetSlug(e.target.value);\r\n\t};\r\n\r\n    const handleURL = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetSlug(slug.trim().split(' ').join('-'));\r\n\t};\r\n\r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            console.log(e.target.files[0].name)\r\n            setCurrentImage(e.target.files[0].name)\r\n\r\n            const file = e.target.files[0]\r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_post', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n\r\n            setLoading(false)\r\n            setImages(res.data)\r\n        } catch (err) {\r\n            \r\n        }\r\n    };\r\n\r\n    \r\nconst imageHandler= async e => {\r\n        const input = document.createElement('input');\r\n\r\n        input.setAttribute('type', 'file');\r\n        input.setAttribute('accept', 'image/*');\r\n        input.click();\r\n\r\n        input.onchange = async e =>{\r\n            const file = e.target.files[0]\r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            // Save current cursor state\r\n            const range = this.quill.getSelection(true);\r\n\r\n            // Insert temporary loading placeholder image\r\n            this.quill.insertEmbed(range.index, 'image', `${window.location.origin}/images/loaders/placeholder.gif`);\r\n\r\n            // Move cursor to right side of image (easier to continue typing)\r\n            this.quill.setSelection(range.index + 1);\r\n\r\n            const res = await axios.post('/api/upload_post', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n\r\n            setImages(res.data)\r\n\r\n            // Remove placeholder image\r\n            this.quill.deleteText(range.index, 1);\r\n\r\n            // Insert uploaded image\r\n            // this.quill.insertEmbed(range.index, 'image', res.body.image);\r\n            this.quill.insertEmbed(range.index, 'image', res);\r\n        };\r\n    }\r\n    const handleDestroy = async () => {\r\n        try {\r\n            setLoading(true)\r\n            await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setCurrentImage('Choose image')\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n\r\n    const handleDescription = (e) => {\r\n        const {name, value} = e.target\r\n        setMyPost({...myPost, [name]:value})\r\n\t};\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            console.log(images)\r\n            if(!images) return alert(\"No Image Upload\")\r\n            if(!slug || !body) return alert(\"Please fill in all fields.\")\r\n\r\n            if(onEdit){\r\n/*                 await axios.put(`/api/admin/products/${product._id}`, {...product, images}, {\r\n                    headers: {Authorization: token}\r\n                }) */\r\n            }else{\r\n                await axios.post('/api/admin/posts/new', {...myPost, images ,slug , body}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }\r\n            setCallback(!callback)\r\n            history.push(\"/\")\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n    return (\r\n<div className=\"create\">\r\n        <Helmet>\r\n\t\t\t<title>Create new post</title>\r\n\t\t\t<meta name='description' content='Create a new post' />\r\n\t\t</Helmet>\r\n\r\n        <div className=\"create-product\">\r\n        <h2>Create a new post</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Row gutter={[48, 16]}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                               <div className ='card'>\r\n                                    <div className=\"group\">\r\n                                        <label htmlFor=\"title\">Post Title</label>\r\n                                        <input className=\"group-control\" type=\"text\" name=\"title\" id=\"title\" placeholder='Post title...' onChange={handleChangeInput}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"group\">\r\n                                        <label className='file__label' htmlFor=\"file\">{loading?currentImage:currentImage}</label>\r\n                                        <input type=\"file\" name=\"file\" id=\"file\" onChange={handleUpload}/>\r\n                                    </div>\r\n                                    \r\n                                    <div className='group'>\r\n                                                <label htmlFor='body'>Post body</label>\r\n                                                <ReactQuill\r\n                                                    theme='snow'\r\n                                                    id='body'\r\n                                                    placeholder='Post body...'\r\n                                                    value={body}\r\n                                                    onChange={setBody}\r\n                                                                        modules={{\r\n                        toolbar: {\r\n                            container: [\r\n                                [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\r\n                                [{ size: [] }],\r\n                                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                                [{ list: 'ordered' }, { list: 'bullet' }],\r\n                                ['link', 'image', 'video']\r\n                            ],\r\n                            handlers: {\r\n                                image: imageHandler\r\n                            }\r\n                        }\r\n                    }}\r\n                                                    \r\n                                                />\r\n                                    </div>\r\n                                    \r\n                                    <div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\t\t\trows='10'\r\n\t\t\t\t\t\t\t\t\t\tclassName='group-control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\r\n\t\t\t\t\t\t\t\t\t\tmaxLength='150'\r\n                                        onChange={handleDescription}\r\n                                        defaultValue={myPost.description}>\r\n                                        </textarea>\r\n\t\t\t\t\t\t\t\t\t<p className='length'>\r\n                                        {myPost.description?myPost.description.length:'0'}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n                               </div>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                                <div className=\"card\">\r\n                                    <div className='group'>\r\n                                        <label htmlFor='slug'>Post URL</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            name='slug'\r\n                                            id='slug'\r\n                                            className='group-control'\r\n                                            placeholder='Post URL...'\r\n                                            onChange={slugHandle}\r\n                                            value={slug}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                        {slugButton ? (\r\n                                            <button class='btn btn-default' onClick={handleURL}>\r\n                                                Update Slug\r\n                                            </button>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                        <div className='imagePreview'>\r\n                                        {\r\n                                            loading ? <div id=\"file_load\"><Loading /></div>\r\n\r\n                                            :<div id=\"img_post\" style={styleUpload}>\r\n                                                <img src={images ? images.url : ''} alt=\"\"/>\r\n                                                <span className=\"cancel\" onClick={handleDestroy}>X</span>\r\n                                            </div>\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                                <input\r\n                                                    type='submit'\r\n                                                    value='CREATE POST'\r\n                                                    className='btn'\r\n                                                />\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}