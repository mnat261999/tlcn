{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thu26\\\\Desktop\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\CreateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  price: 0,\n  description: 'description',\n  content: 'content',\n  stock: 0,\n  category: '',\n  _id: ''\n};\n\nfunction CreateProduct() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [product, setProduct] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories;\n  /*     const [images, setImages] = useState(false)\r\n      const [loading, setLoading] = useState(false)\r\n  \r\n      const auth = useSelector(state => state.auth)\r\n      const {isAdmin} = auth\r\n      const token = useSelector(state => state.token) */\n  //const [isAdmin] = state.userAPI.isAdmin\n  //const [token] = state.token\n\n  /*     const history = useHistory()\r\n      const param = useParams()\r\n  \r\n      const [products] = state.productsAPI.products\r\n      const [onEdit, setOnEdit] = useState(false)\r\n      const [callback, setCallback] = state.productsAPI.callback */\n\n  /*     useEffect(() => {\r\n          if(param.id){\r\n              setOnEdit(true)\r\n              products.forEach(product => {\r\n                  if(product._id === param.id) {\r\n                      setProduct(product)\r\n                      setImages(product.images)\r\n                  }\r\n              })\r\n          }else{\r\n              setOnEdit(false)\r\n              setProduct(initialState)\r\n              setImages(false)\r\n          }\r\n      }, [param.id, products]) */\n\n  /*     const handleUpload = async e =>{\r\n          e.preventDefault()\r\n          try {\r\n              if(!isAdmin) return alert(\"You're not an admin\")\r\n              const file = e.target.files[0]\r\n              \r\n              if(!file) return alert(\"File not exist.\")\r\n  \r\n              if(file.size > 1024 * 1024) // 1mb\r\n                  return alert(\"Size too large!\")\r\n  \r\n              if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                  return alert(\"File format is incorrect.\")\r\n  \r\n              let formData = new FormData()\r\n              formData.append('file', file)\r\n  \r\n              setLoading(true)\r\n              const res = await axios.post('/api/upload_admin', formData, {\r\n                  headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n              })\r\n              setLoading(false)\r\n              setImages(res.data)\r\n  \r\n          } catch (err) {\r\n              alert(err.response.data.msg)\r\n          }\r\n      }\r\n  \r\n      const handleDestroy = async () => {\r\n          try {\r\n              if(!isAdmin) return alert(\"You're not an admin\")\r\n              setLoading(true)\r\n              await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                  headers: {Authorization: token}\r\n              })\r\n              setLoading(false)\r\n              setImages(false)\r\n          } catch (err) {\r\n              alert(err.response.data.msg)\r\n          }\r\n      }\r\n  \r\n      const handleChangeInput = e =>{\r\n          const {name, value} = e.target\r\n          setProduct({...product, [name]:value})\r\n      }\r\n  \r\n      const handleSubmit = async e =>{\r\n          e.preventDefault()\r\n          try {\r\n              if(!isAdmin) return alert(\"You're not an admin\")\r\n              if(!images) return alert(\"No Image Upload\")\r\n  \r\n              if(onEdit){\r\n                  await axios.put(`/api/products/${product._id}`, {...product, images}, {\r\n                      headers: {Authorization: token}\r\n                  })\r\n              }else{\r\n                  await axios.post('/api/products', {...product, images}, {\r\n                      headers: {Authorization: token}\r\n                  })\r\n              }\r\n              setCallback(!callback)\r\n              history.push(\"/\")\r\n          } catch (err) {\r\n              alert(err.response.data.msg)\r\n          }\r\n      }\r\n  \r\n      const styleUpload = {\r\n          display: images ? \"block\" : \"none\"\r\n      } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file_up\",\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_img\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_img\",\n        style: styleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images ? images.url : '',\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleDestroy,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      \"data-aos\": \"fade-left\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"product_id\",\n          children: \"Product ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control\",\n          type: \"text\",\n          name: \"product_id\",\n          id: \"product_id\",\n          required: true,\n          value: product.product_id,\n          onChange: handleChangeInput,\n          disabled: onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control\",\n          type: \"text\",\n          name: \"title\",\n          id: \"title\",\n          required: true,\n          value: product.title,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control\",\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          required: true,\n          value: product.price,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          required: true,\n          value: product.description,\n          rows: \"5\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          type: \"text\",\n          name: \"content\",\n          id: \"content\",\n          required: true,\n          value: product.content,\n          rows: \"7\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Categories: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          name: \"category\",\n          value: product.category,\n          onChange: handleChangeInput,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category._id,\n            children: category.name\n          }, category._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-secondary\",\n        type: \"submit\",\n        children: onEdit ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateProduct, \"//zhTQe2qcvCKFpg2z+PTtMQi/Q=\");\n\n_c = CreateProduct;\nexport default CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"sources":["C:/Users/thu26/Desktop/tlcn/client/src/components/mainpages/admin/CreateProduct.js"],"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useHistory","useParams","useSelector","initialState","name","price","description","content","stock","category","_id","CreateProduct","state","product","setProduct","categories","categoriesAPI","handleUpload","loading","styleUpload","images","url","handleDestroy","handleSubmit","product_id","handleChangeInput","onEdit","title","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,CAFU;AAGjBC,EAAAA,WAAW,EAAE,aAHI;AAIjBC,EAAAA,OAAO,EAAE,SAJQ;AAKjBC,EAAAA,KAAK,EAAC,CALW;AAMjBC,EAAAA,QAAQ,EAAE,EANO;AAOjBC,EAAAA,GAAG,EAAE;AAPY,CAArB;;AAUA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAMC,KAAK,GAAGjB,UAAU,CAACG,WAAD,CAAxB;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAACS,YAAD,CAAtC;AACA,QAAM,CAACY,UAAD,IAAeH,KAAK,CAACI,aAAN,CAAoBD,UAAzC;AACJ;AACA;AACA;AACA;AACA;AACA;AAEI;AACA;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BA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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst initialState = {\r\n    name: '',\r\n    price: 0,\r\n    description: 'description',\r\n    content: 'content',\r\n    stock:0,\r\n    category: '',\r\n    _id: ''\r\n}\r\n\r\nfunction CreateProduct() {\r\n    const state = useContext(GlobalState)\r\n    const [product, setProduct] = useState(initialState)\r\n    const [categories] = state.categoriesAPI.categories\r\n/*     const [images, setImages] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const {isAdmin} = auth\r\n    const token = useSelector(state => state.token) */\r\n\r\n    //const [isAdmin] = state.userAPI.isAdmin\r\n    //const [token] = state.token\r\n\r\n/*     const history = useHistory()\r\n    const param = useParams()\r\n\r\n    const [products] = state.productsAPI.products\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [callback, setCallback] = state.productsAPI.callback */\r\n\r\n/*     useEffect(() => {\r\n        if(param.id){\r\n            setOnEdit(true)\r\n            products.forEach(product => {\r\n                if(product._id === param.id) {\r\n                    setProduct(product)\r\n                    setImages(product.images)\r\n                }\r\n            })\r\n        }else{\r\n            setOnEdit(false)\r\n            setProduct(initialState)\r\n            setImages(false)\r\n        }\r\n    }, [param.id, products]) */\r\n\r\n/*     const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            const file = e.target.files[0]\r\n            \r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_admin', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(res.data)\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleDestroy = async () => {\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            setLoading(true)\r\n            await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setProduct({...product, [name]:value})\r\n    }\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            if(!images) return alert(\"No Image Upload\")\r\n\r\n            if(onEdit){\r\n                await axios.put(`/api/products/${product._id}`, {...product, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }else{\r\n                await axios.post('/api/products', {...product, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }\r\n            setCallback(!callback)\r\n            history.push(\"/\")\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    } */\r\n    return (\r\n        <div className=\"create_product\">\r\n            <div className=\"upload\">\r\n                <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\r\n                {\r\n                    loading ? <div id=\"file_img\"><Loading /></div>\r\n\r\n                    :<div id=\"file_img\" style={styleUpload}>\r\n                        <img src={images ? images.url : ''} alt=\"\"/>\r\n                        <span onClick={handleDestroy}>X</span>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n\r\n            <form data-aos=\"fade-left\" onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"product_id\">Product ID</label>\r\n                    <input class=\"form-control\" type=\"text\" name=\"product_id\" id=\"product_id\" required\r\n                    value={product.product_id} onChange={handleChangeInput} disabled={onEdit} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input class=\"form-control\" type=\"text\" name=\"title\" id=\"title\" required\r\n                    value={product.title} onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input class=\"form-control\" type=\"number\" name=\"price\" id=\"price\" required\r\n                    value={product.price} onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea class=\"form-control\" type=\"text\" name=\"description\" id=\"description\" required\r\n                    value={product.description} rows=\"5\" onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea class=\"form-control\" type=\"text\" name=\"content\" id=\"content\" required\r\n                    value={product.content} rows=\"7\" onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"categories\">Categories: </label>\r\n                    <select class=\"form-control\" name=\"category\" value={product.category} onChange={handleChangeInput} >\r\n                        <option value=\"\">Please select a category</option>\r\n                        {\r\n                            categories.map(category => (\r\n                                <option value={category._id} key={category._id}>\r\n                                    {category.name}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <button class=\"btn btn-secondary\" type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateProduct"]},"metadata":{},"sourceType":"module"}