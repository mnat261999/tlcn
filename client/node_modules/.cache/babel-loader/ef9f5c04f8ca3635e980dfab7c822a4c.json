{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thu26\\\\Desktop\\\\test\\\\test123\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport './css/alluser.css';\nimport './css/category.css';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'antd';\nimport { showSuccessMsg, showErrMsg } from '../utils/notification/Notification';\nimport { Modal, Button } from 'antd';\nimport { Input } from 'antd';\nimport { Tree } from 'antd';\nimport { Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction Categories() {\n  _s();\n\n  const state = useContext(GlobalState);\n  console.log(state);\n  const [categories] = state.categoriesAPI.categories;\n  const [category, setCategory] = useState('');\n  const token = useSelector(state => state.token);\n  const [callback, setCallback] = state.categoriesAPI.callback;\n  const [onAdd, setOnAdd] = useState(false);\n  const [onEdit, setOnEdit] = useState(false);\n  const [onDelete, setOnDelete] = useState(false);\n  const [id, setID] = useState('');\n  const [err, setErr] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [selectedArray, setSelectedArray] = useState([]);\n\n  const onExpand = expandedKeysValue => {\n    console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n\n    setExpanded(expandedKeysValue);\n  };\n\n  const onSelect = (selectedKeys, info) => {\n    setSelected(selectedKeys);\n    console.log({\n      selectedKeys\n    });\n    console.log({\n      selected\n    });\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    setChecked(checkedKeys);\n    console.log('onCheck', checkedKeys, info);\n  };\n\n  const handleCancel = () => {\n    setOnAdd(false);\n    setOnEdit(false);\n    setOnDelete(false);\n    setVisible(false);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    } else if (type == \"selected\") {\n      const updatedSelectedArray = selectedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setSelectedArray(updatedSelectedArray);\n    }\n  };\n\n  const showModalAdd = () => {\n    setVisible(true);\n    setOnAdd(true);\n    console.log({\n      onAdd\n    });\n    setOnEdit(false);\n    setOnDelete(false);\n\n    if (selected) {\n      setParentCategoryId(selected);\n    }\n\n    console.log({\n      selected\n    });\n  };\n\n  const ModalAdd = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        title: \"Add new category\",\n        onOk: createCategory,\n        onCancel: handleCancel,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          children: \"Close\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          loading: loading,\n          onClick: createCategory,\n          children: \"Create\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            marginBottom: '20px'\n          },\n          value: categoryName,\n          placeholder: \"Category Name\",\n          onChange: e => setCategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"group-control-model\",\n          value: parentCategoryId,\n          onChange: e => setParentCategoryId(e.target.value),\n          placeholder: \"Please select a category\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), createCategoryList(categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 69\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  const updateCheckedExpandedSelected = () => {\n    setVisible(true);\n    const cats = createCategoryList(categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    const selectedArray = [];\n    checked.length > 0 && checked.map((categoryId, index) => {\n      const cat = cats.find((category, _index) => categoryId === category.value);\n      cat && checkedArray.push(cat);\n    });\n    expanded.length > 0 && expanded.map((categoryId, index) => {\n      const cat = cats.find((category, _index) => categoryId === category.value);\n      cat && expandedArray.push(cat);\n    });\n    selected.length > 0 && selected.map((categoryId, index) => {\n      const cat = cats.find((category, _index) => categoryId === category.value);\n      cat && selectedArray.push(cat);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n    setSelectedArray(selectedArray);\n    console.log({\n      checked,\n      expanded,\n      selected,\n      cats,\n      checkedArray,\n      expandedArray,\n      selectedArray\n    });\n  };\n\n  const showModalEdit = () => {\n    setOnEdit(true);\n    updateCheckedExpandedSelected();\n  };\n\n  const ModalEdit = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        title: \"Edit new category\",\n        onOk: editCategory,\n        onCancel: handleCancel,\n        width: 1000,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          children: \"Close\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          loading: loading,\n          onClick: editCategory,\n          children: \"Edit\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Expanded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                marginBottom: '20px'\n              },\n              value: item.name,\n              placeholder: \"Category Name\",\n              onChange: e => handleCategoryInput('name', e.target.value, index, 'expanded')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              value: item.parentId,\n              onChange: e => handleCategoryInput('parentId', e.target.value, index, 'expanded'),\n              placeholder: \"Please select a category\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), createCategoryList(categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 81\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"store\",\n                children: \"Store\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"page\",\n                children: \"Page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Checked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                marginBottom: '20px'\n              },\n              value: item.name,\n              placeholder: \"Category Name\",\n              onChange: e => handleCategoryInput('name', e.target.value, index, 'checked')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              value: item.parentId,\n              onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n              placeholder: \"Please select a category\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), createCategoryList(categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 81\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"store\",\n                children: \"Store\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"page\",\n                children: \"Page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), selectedArray.length > 0 && selectedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                marginBottom: '20px'\n              },\n              value: item.name,\n              placeholder: \"Category Name\",\n              onChange: e => handleCategoryInput('name', e.target.value, index, 'selected')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              value: item.parentId,\n              onChange: e => handleCategoryInput('parentId', e.target.value, index, 'selected'),\n              placeholder: \"Please select a category\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), createCategoryList(categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 81\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"store\",\n                children: \"Store\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"page\",\n                children: \"Page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  const showModalDelete = () => {\n    setOnDelete(true);\n    updateCheckedExpandedSelected();\n  };\n\n  const ModalDelete = () => {\n    console.log('delete', checkedArray);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        title: \"Delete category\",\n        onOk: deleteCategory,\n        onCancel: handleCancel,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          children: \"No\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          loading: loading,\n          onClick: deleteCategory,\n          children: \"Yes\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Expanded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 59\n        }, this)), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Checked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 58\n        }, this)), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), selectedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 59\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  const renderCategories = cate => {\n    console.log(cate);\n    let myCategories = [];\n    cate.map(cat => {\n      myCategories.push({\n        title: cat.name,\n        key: cat._id,\n        children: cat.children.length > 0 && renderCategories(cat.children)\n      });\n    });\n    return myCategories;\n  };\n\n  const createCategoryList = (cate, options = []) => {\n    cate.map(cat => {\n      options.push({\n        value: cat._id,\n        name: cat.name,\n        parentId: cat.parentId\n      });\n\n      if (cat.children.length > 0) {\n        createCategoryList(cat.children, options);\n      }\n    });\n    return options;\n  };\n\n  const createCategory = async e => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    const res = await axios.post('/api/category', form, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setCategoryName('');\n    setParentCategoryId('');\n    setOnAdd(false);\n    setCallback(!callback);\n    console.log(res);\n    setVisible(false);\n  };\n\n  const editCategory = async e => {\n    const form = new FormData();\n    expandedArray.map((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    checkedArray.map((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    selectedArray.map((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    const res = await axios.post('/api/category/update', form, {\n      headers: {\n        Authorization: token\n      }\n    });\n    console.log(res);\n    setCheckedArray('');\n    setExpandedArray('');\n    setSelectedArray('');\n    setOnEdit(false);\n    setCallback(!callback);\n    setVisible(false);\n  };\n\n  const deleteCategory = async e => {\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const selectedIdsArray = selectedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray, selectedIdsArray);\n    const res = await axios.post('/api/category/delete', {\n      ids: idsArray\n    }, {\n      headers: {\n        Authorization: token\n      }\n    }).then(async result => {\n      if (result) {\n        await axios.get('/api/category');\n        setOnDelete(false);\n      }\n    });\n    setCallback(!callback);\n    console.log(res);\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 12\n        },\n        sm: {\n          span: 12\n        },\n        md: {\n          span: 12\n        },\n        lg: {\n          span: 12\n        },\n        lx: {\n          span: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-4xl\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 12\n        },\n        sm: {\n          span: 12\n        },\n        md: {\n          span: 12\n        },\n        lg: {\n          span: 12\n        },\n        lx: {\n          span: 12\n        },\n        className: \"text-right mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"mr-7\",\n          type: \"primary\",\n          onClick: showModalAdd,\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mr-7\",\n          type: \"primary\",\n          onClick: showModalEdit,\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: showModalDelete,\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 17\n        }, this), onEdit ? ModalEdit() : onAdd ? ModalAdd() : onDelete ? ModalDelete() : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      checkable: true,\n      defaultExpandedKeys: ['0-0-0', '0-0-1'],\n      defaultSelectedKeys: ['0-0-0', '0-0-1'],\n      defaultCheckedKeys: ['0-0-0', '0-0-1'],\n      onExpand: onExpand,\n      onSelect: onSelect,\n      onCheck: onCheck,\n      treeData: renderCategories(categories)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Categories, \"MPa3JBh+04wrp6qwRtDaFnaJtgo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/thu26/Desktop/test/test123/tlcn/client/src/components/mainpages/admin/Categories.js"],"names":["React","useState","useContext","useEffect","GlobalState","axios","useSelector","Link","Row","Col","showSuccessMsg","showErrMsg","Modal","Button","Input","Tree","Select","Option","Categories","state","console","log","categories","categoriesAPI","category","setCategory","token","callback","setCallback","onAdd","setOnAdd","onEdit","setOnEdit","onDelete","setOnDelete","id","setID","err","setErr","success","setSuccess","visible","setVisible","loading","setLoading","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","checked","setChecked","expanded","setExpanded","selected","setSelected","checkedArray","setCheckedArray","expandedArray","setExpandedArray","selectedArray","setSelectedArray","onExpand","expandedKeysValue","onSelect","selectedKeys","info","onCheck","checkedKeys","handleCancel","handleCategoryInput","key","value","index","type","updatedCheckedArray","map","item","_index","updatedExpandedArray","updatedSelectedArray","showModalAdd","ModalAdd","createCategory","marginBottom","e","target","createCategoryList","option","name","updateCheckedExpandedSelected","cats","length","categoryId","cat","find","push","showModalEdit","ModalEdit","editCategory","span","parentId","showModalDelete","ModalDelete","deleteCategory","renderCategories","cate","myCategories","title","_id","children","options","form","FormData","append","res","post","headers","Authorization","expandedIdsArray","checkedIdsArray","selectedIdsArray","idsArray","concat","ids","then","result","get"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,oCAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,MAAnB;;AAKA,SAASE,UAAT,GAAsB;AAAA;;AAClB,QAAMC,KAAK,GAAGjB,UAAU,CAACE,WAAD,CAAxB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,UAAD,IAAeH,KAAK,CAACI,aAAN,CAAoBD,UAAzC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMyB,KAAK,GAAGpB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACO,KAAhB,CAAzB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACI,aAAN,CAAoBI,QAApD;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACkC,EAAD,EAAKC,KAAL,IAAcnC,QAAQ,CAAC,EAAD,CAA5B;AAEA,QAAM,CAACoC,GAAD,EAAMC,MAAN,IAAgBrC,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACsC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACwC,OAAD,EAAUC,UAAV,IAAwBzC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC0C,OAAD,EAAUC,UAAV,IAAwB3C,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAAC4C,YAAD,EAAeC,eAAf,IAAkC7C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC8C,gBAAD,EAAmBC,mBAAnB,IAA0C/C,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACgD,OAAD,EAAUC,UAAV,IAAwBjD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkD,QAAD,EAAWC,WAAX,IAA0BnD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoD,QAAD,EAAWC,WAAX,IAA0BrD,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACsD,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACwD,aAAD,EAAgBC,gBAAhB,IAAoCzD,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC0D,aAAD,EAAgBC,gBAAhB,IAAoC3D,QAAQ,CAAC,EAAD,CAAlD;;AAGA,QAAM4D,QAAQ,GAAIC,iBAAD,IAAuB;AACpC1C,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwByC,iBAAxB,EADoC,CACQ;AAC5C;;AACAV,IAAAA,WAAW,CAACU,iBAAD,CAAX;AACD,GAJH;;AAMA,QAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,IAAf,KAAwB;AACrCX,IAAAA,WAAW,CAACU,YAAD,CAAX;AACA5C,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAC2C,MAAAA;AAAD,KAAZ;AACA5C,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACgC,MAAAA;AAAD,KAAZ;AAED,GALH;;AAOA,QAAMa,OAAO,GAAG,CAACC,WAAD,EAAcF,IAAd,KAAuB;AACnCf,IAAAA,UAAU,CAACiB,WAAD,CAAV;AACA/C,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB8C,WAAvB,EAAoCF,IAApC;AACH,GAHD;;AAMA,QAAOG,YAAY,GAAG,MAAM;AACxBtC,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALD;;AAQA,QAAM2B,mBAAmB,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,KAAb,EAAoBC,IAApB,KAA6B;AACrD,QAAIA,IAAI,IAAI,SAAZ,EAAuB;AACnB,YAAMC,mBAAmB,GAAGnB,YAAY,CAACoB,GAAb,CAAiB,CAACC,IAAD,EAAOC,MAAP,KAC3CL,KAAK,IAAIK,MAAT,GAAkB,EAAE,GAAGD,IAAL;AAAW,SAACN,GAAD,GAAOC;AAAlB,OAAlB,GAA8CK,IADpB,CAA5B;AAGApB,MAAAA,eAAe,CAACkB,mBAAD,CAAf;AACD,KALH,MAKS,IAAID,IAAI,IAAI,UAAZ,EAAwB;AAC7B,YAAMK,oBAAoB,GAAGrB,aAAa,CAACkB,GAAd,CAAkB,CAACC,IAAD,EAAOC,MAAP,KAC7CL,KAAK,IAAIK,MAAT,GAAkB,EAAE,GAAGD,IAAL;AAAW,SAACN,GAAD,GAAOC;AAAlB,OAAlB,GAA8CK,IADnB,CAA7B;AAGAlB,MAAAA,gBAAgB,CAACoB,oBAAD,CAAhB;AACD,KALM,MAKD,IAAIL,IAAI,IAAI,UAAZ,EAAwB;AAC5B,YAAMM,oBAAoB,GAAGpB,aAAa,CAACgB,GAAd,CAAkB,CAACC,IAAD,EAAOC,MAAP,KAC7CL,KAAK,IAAIK,MAAT,GAAkB,EAAE,GAAGD,IAAL;AAAW,SAACN,GAAD,GAAOC;AAAlB,OAAlB,GAA8CK,IADnB,CAA7B;AAGAhB,MAAAA,gBAAgB,CAACmB,oBAAD,CAAhB;AACD;AACN,GAjBD;;AAmBA,QAAMC,YAAY,GAAG,MAAM;AACvBtC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACQ,MAAAA;AAAD,KAAZ;AACAG,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,QAAGmB,QAAH,EACA;AACIL,MAAAA,mBAAmB,CAACK,QAAD,CAAnB;AACH;;AACDjC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACgC,MAAAA;AAAD,KAAZ;AAGH,GAbD;;AAeA,QAAM4B,QAAQ,GAAG,MAAK;AAClB,wBAAO;AAAA,6BACH,QAAC,KAAD;AACI,QAAA,OAAO,EAAExC,OADb;AAEI,QAAA,KAAK,EAAC,kBAFV;AAGI,QAAA,IAAI,EAAEyC,cAHV;AAII,QAAA,QAAQ,EAAEd,YAJd;AAKI,QAAA,MAAM,EAAE,cACJ,QAAC,MAAD;AAAmB,UAAA,OAAO,EAAEA,YAA5B;AAAA;AAAA,WAAY,MAAZ;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ,QAAC,MAAD;AAAqB,UAAA,IAAI,EAAC,SAA1B;AAAoC,UAAA,OAAO,EAAEzB,OAA7C;AAAsD,UAAA,OAAO,EAAEuC,cAA/D;AAAA;AAAA,WAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,gBAJI,CALZ;AAAA,gCAcI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAACC,YAAAA,YAAY,EAAE;AAAf,WAAd;AAAsC,UAAA,KAAK,EAAEtC,YAA7C;AAA2D,UAAA,WAAW,EAAC,eAAvE;AAAuF,UAAA,QAAQ,EAAGuC,CAAD,IAAMtC,eAAe,CAACsC,CAAC,CAACC,MAAF,CAASd,KAAV;AAAtH;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAwC,UAAA,KAAK,EAAExB,gBAA/C;AAAiE,UAAA,QAAQ,EAAGqC,CAAD,IAAMpC,mBAAmB,CAACoC,CAAC,CAACC,MAAF,CAASd,KAAV,CAApG;AAAsH,UAAA,WAAW,EAAC,0BAAlI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGQe,kBAAkB,CAAChE,UAAD,CAAlB,CAA+BqD,GAA/B,CAAmCY,MAAM,iBAAG;AAA2B,YAAA,KAAK,EAAEA,MAAM,CAAChB,KAAzC;AAAA,sBAAiDgB,MAAM,CAACC;AAAxD,aAAaD,MAAM,CAAChB,KAApB;AAAA;AAAA;AAAA;AAAA,kBAA5C,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAwBD,GAzBH;;AA2BA,QAAMkB,6BAA6B,GAAE,MAAI;AACrC/C,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMgD,IAAI,GAAGJ,kBAAkB,CAAChE,UAAD,CAA/B;AACA,UAAMiC,YAAY,GAAG,EAArB;AACA,UAAME,aAAa,GAAG,EAAtB;AACA,UAAME,aAAa,GAAG,EAAtB;AAEAV,IAAAA,OAAO,CAAC0C,MAAR,GAAiB,CAAjB,IAAsB1C,OAAO,CAAC0B,GAAR,CAAY,CAACiB,UAAD,EAAYpB,KAAZ,KAAsB;AACpD,YAAMqB,GAAG,GAAGH,IAAI,CAACI,IAAL,CAAU,CAACtE,QAAD,EAAWqD,MAAX,KAAsBe,UAAU,KAAKpE,QAAQ,CAAC+C,KAAxD,CAAZ;AACAsB,MAAAA,GAAG,IAAItC,YAAY,CAACwC,IAAb,CAAkBF,GAAlB,CAAP;AACH,KAHqB,CAAtB;AAKA1C,IAAAA,QAAQ,CAACwC,MAAT,GAAkB,CAAlB,IAAuBxC,QAAQ,CAACwB,GAAT,CAAa,CAACiB,UAAD,EAAYpB,KAAZ,KAAsB;AACtD,YAAMqB,GAAG,GAAGH,IAAI,CAACI,IAAL,CAAU,CAACtE,QAAD,EAAWqD,MAAX,KAAsBe,UAAU,KAAKpE,QAAQ,CAAC+C,KAAxD,CAAZ;AACAsB,MAAAA,GAAG,IAAIpC,aAAa,CAACsC,IAAd,CAAmBF,GAAnB,CAAP;AACH,KAHsB,CAAvB;AAKAxC,IAAAA,QAAQ,CAACsC,MAAT,GAAkB,CAAlB,IAAuBtC,QAAQ,CAACsB,GAAT,CAAa,CAACiB,UAAD,EAAYpB,KAAZ,KAAsB;AACtD,YAAMqB,GAAG,GAAGH,IAAI,CAACI,IAAL,CAAU,CAACtE,QAAD,EAAWqD,MAAX,KAAsBe,UAAU,KAAKpE,QAAQ,CAAC+C,KAAxD,CAAZ;AACAsB,MAAAA,GAAG,IAAIlC,aAAa,CAACoC,IAAd,CAAmBF,GAAnB,CAAP;AACH,KAHsB,CAAvB;AAKArC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAG,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAvC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAC4B,MAAAA,OAAD;AAAUE,MAAAA,QAAV;AAAmBE,MAAAA,QAAnB;AAA6BqC,MAAAA,IAA7B;AAAmCnC,MAAAA,YAAnC;AAAiDE,MAAAA,aAAjD;AAA+DE,MAAAA;AAA/D,KAAZ;AACH,GA1BD;;AA4BA,QAAMqC,aAAa,GAAE,MAAM;AACvBhE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAyD,IAAAA,6BAA6B;AAChC,GAHD;;AAKA,QAAMQ,SAAS,GAAG,MAAK;AACnB,wBAAO;AAAA,6BACH,QAAC,KAAD;AACI,QAAA,OAAO,EAAExD,OADb;AAEI,QAAA,KAAK,EAAC,mBAFV;AAGI,QAAA,IAAI,EAAEyD,YAHV;AAII,QAAA,QAAQ,EAAE9B,YAJd;AAKI,QAAA,KAAK,EAAE,IALX;AAMI,QAAA,MAAM,EAAE,cACJ,QAAC,MAAD;AAAmB,UAAA,OAAO,EAAEA,YAA5B;AAAA;AAAA,WAAY,MAAZ;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ,QAAC,MAAD;AAAqB,UAAA,IAAI,EAAC,SAA1B;AAAoC,UAAA,OAAO,EAAEzB,OAA7C;AAAsD,UAAA,OAAO,EAAEuD,YAA/D;AAAA;AAAA,WAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,gBAJI,CANZ;AAAA,gCAeQ,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfR,EAsBYzC,aAAa,CAACkC,MAAd,GAAuB,CAAvB,IAA4BlC,aAAa,CAACkB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,kBAE9C,QAAC,GAAD;AAAiB,UAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAzB;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAC2B,cAAAA,IAAI,EAAE;AAAP,aAAT;AAAqB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzB;AAAqC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzC;AAAoD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxD;AAAmE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAvE;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE;AAAChB,gBAAAA,YAAY,EAAE;AAAf,eAAd;AAAsC,cAAA,KAAK,EAAEP,IAAI,CAACY,IAAlD;AAAwD,cAAA,WAAW,EAAC,eAApE;AAAoF,cAAA,QAAQ,EAAGJ,CAAD,IAAOf,mBAAmB,CAAC,MAAD,EAASe,CAAC,CAACC,MAAF,CAASd,KAAlB,EAAyBC,KAAzB,EAAgC,UAAhC;AAAxH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAC2B,cAAAA,IAAI,EAAE;AAAP,aAAT;AAAqB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzB;AAAqC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzC;AAAoD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxD;AAAmE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAvE;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAyC,cAAA,KAAK,EAAEvB,IAAI,CAACwB,QAArD;AAA+D,cAAA,QAAQ,EAAGhB,CAAD,IAAOf,mBAAmB,CAAC,UAAD,EAAae,CAAC,CAACC,MAAF,CAASd,KAAtB,EAA6BC,KAA7B,EAAoC,UAApC,CAAnG;AAAoJ,cAAA,WAAW,EAAC,0BAAhK;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGQc,kBAAkB,CAAChE,UAAD,CAAlB,CAA+BqD,GAA/B,CAAmCY,MAAM,iBAAG;AAA2B,gBAAA,KAAK,EAAEA,MAAM,CAAChB,KAAzC;AAAA,0BAAiDgB,MAAM,CAACC;AAAxD,iBAAaD,MAAM,CAAChB,KAApB;AAAA;AAAA;AAAA;AAAA,sBAA5C,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAcI,QAAC,GAAD;AAAM,YAAA,EAAE,EAAE;AAAC4B,cAAAA,IAAI,EAAE;AAAP,aAAV;AAAsB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAA1B;AAAsC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAA1C;AAAqD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzD;AAAoE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxE;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAA,sCACQ;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADR,eAEQ;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFR,eAGQ;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHR,eAIQ;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA,WAAU3B,KAAV;AAAA;AAAA;AAAA;AAAA,gBAF4B,CAtBxC,eAkDQ,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlDR,EA0DYjB,YAAY,CAACoC,MAAb,GAAsB,CAAtB,IAA2BpC,YAAY,CAACoB,GAAb,CAAiB,CAACC,IAAD,EAAMJ,KAAN,kBAE5C,QAAC,GAAD;AAAiB,UAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAzB;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAC2B,cAAAA,IAAI,EAAE;AAAP,aAAT;AAAqB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzB;AAAqC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzC;AAAoD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxD;AAAmE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAvE;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE;AAAChB,gBAAAA,YAAY,EAAE;AAAf,eAAd;AAAsC,cAAA,KAAK,EAAEP,IAAI,CAACY,IAAlD;AAAwD,cAAA,WAAW,EAAC,eAApE;AAAoF,cAAA,QAAQ,EAAGJ,CAAD,IAAOf,mBAAmB,CAAC,MAAD,EAASe,CAAC,CAACC,MAAF,CAASd,KAAlB,EAAyBC,KAAzB,EAAgC,SAAhC;AAAxH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAC2B,cAAAA,IAAI,EAAE;AAAP,aAAT;AAAqB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzB;AAAqC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzC;AAAoD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxD;AAAmE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAvE;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAyC,cAAA,KAAK,EAAEvB,IAAI,CAACwB,QAArD;AAA+D,cAAA,QAAQ,EAAGhB,CAAD,IAAOf,mBAAmB,CAAC,UAAD,EAAae,CAAC,CAACC,MAAF,CAASd,KAAtB,EAA6BC,KAA7B,EAAoC,SAApC,CAAnG;AAAmJ,cAAA,WAAW,EAAC,0BAA/J;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGQc,kBAAkB,CAAChE,UAAD,CAAlB,CAA+BqD,GAA/B,CAAmCY,MAAM,iBAAG;AAA2B,gBAAA,KAAK,EAAEA,MAAM,CAAChB,KAAzC;AAAA,0BAAiDgB,MAAM,CAACC;AAAxD,iBAAaD,MAAM,CAAChB,KAApB;AAAA;AAAA;AAAA;AAAA,sBAA5C,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAcI,QAAC,GAAD;AAAM,YAAA,EAAE,EAAE;AAAC4B,cAAAA,IAAI,EAAE;AAAP,aAAV;AAAsB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAA1B;AAAsC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAA1C;AAAqD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzD;AAAoE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxE;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAA,sCACQ;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADR,eAEQ;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFR,eAGQ;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHR,eAIQ;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA,WAAU3B,KAAV;AAAA;AAAA;AAAA;AAAA,gBAF2B,CA1DvC,eAwFQ,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxFR,EAgGYb,aAAa,CAACgC,MAAd,GAAuB,CAAvB,IAA4BhC,aAAa,CAACgB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,kBAE9C,QAAC,GAAD;AAAiB,UAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAzB;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAC2B,cAAAA,IAAI,EAAE;AAAP,aAAT;AAAqB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzB;AAAqC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzC;AAAoD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxD;AAAmE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAvE;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE;AAAChB,gBAAAA,YAAY,EAAE;AAAf,eAAd;AAAsC,cAAA,KAAK,EAAEP,IAAI,CAACY,IAAlD;AAAwD,cAAA,WAAW,EAAC,eAApE;AAAoF,cAAA,QAAQ,EAAGJ,CAAD,IAAOf,mBAAmB,CAAC,MAAD,EAASe,CAAC,CAACC,MAAF,CAASd,KAAlB,EAAyBC,KAAzB,EAAgC,UAAhC;AAAxH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAC2B,cAAAA,IAAI,EAAE;AAAP,aAAT;AAAqB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzB;AAAqC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzC;AAAoD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxD;AAAmE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAvE;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAyC,cAAA,KAAK,EAAEvB,IAAI,CAACwB,QAArD;AAA+D,cAAA,QAAQ,EAAGhB,CAAD,IAAOf,mBAAmB,CAAC,UAAD,EAAae,CAAC,CAACC,MAAF,CAASd,KAAtB,EAA6BC,KAA7B,EAAoC,UAApC,CAAnG;AAAoJ,cAAA,WAAW,EAAC,0BAAhK;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGQc,kBAAkB,CAAChE,UAAD,CAAlB,CAA+BqD,GAA/B,CAAmCY,MAAM,iBAAG;AAA2B,gBAAA,KAAK,EAAEA,MAAM,CAAChB,KAAzC;AAAA,0BAAiDgB,MAAM,CAACC;AAAxD,iBAAaD,MAAM,CAAChB,KAApB;AAAA;AAAA;AAAA;AAAA,sBAA5C,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAcI,QAAC,GAAD;AAAM,YAAA,EAAE,EAAE;AAAC4B,cAAAA,IAAI,EAAE;AAAP,aAAV;AAAsB,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAA1B;AAAsC,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAA1C;AAAqD,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAzD;AAAoE,YAAA,EAAE,EAAE;AAACA,cAAAA,IAAI,EAAE;AAAP,aAAxE;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAA,sCACQ;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADR,eAEQ;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFR,eAGQ;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHR,eAIQ;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA,WAAU3B,KAAV;AAAA;AAAA;AAAA;AAAA,gBAF4B,CAhGxC;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAgIH,GAjID;;AAmIA,QAAM6B,eAAe,GAAG,MAAM;AAC1BnE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAuD,IAAAA,6BAA6B;AAChC,GAHD;;AAKA,QAAMa,WAAW,GAAG,MAAK;AACrBlF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBkC,YAAtB;AACA,wBAAM;AAAA,6BACF,QAAC,KAAD;AACI,QAAA,OAAO,EAAEd,OADb;AAEI,QAAA,KAAK,EAAC,iBAFV;AAGI,QAAA,IAAI,EAAE8D,cAHV;AAII,QAAA,QAAQ,EAAEnC,YAJd;AAKI,QAAA,MAAM,EAAE,cACJ,QAAC,MAAD;AAAmB,UAAA,OAAO,EAAEA,YAA5B;AAAA;AAAA,WAAY,MAAZ;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ,QAAC,MAAD;AAAqB,UAAA,IAAI,EAAC,SAA1B;AAAoC,UAAA,OAAO,EAAEzB,OAA7C;AAAsD,UAAA,OAAO,EAAE4D,cAA/D;AAAA;AAAA,WAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,gBAJI,CALZ;AAAA,gCAcQ,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdR,EAoBY9C,aAAa,CAACkB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,kBAAgB;AAAA,oBAAmBI,IAAI,CAACY;AAAxB,WAAWhB,KAAX;AAAA;AAAA;AAAA;AAAA,gBAAlC,CApBZ,eAuBQ,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBR,EA6BYjB,YAAY,CAACoB,GAAb,CAAiB,CAACC,IAAD,EAAMJ,KAAN,kBAAgB;AAAA,oBAAmBI,IAAI,CAACY;AAAxB,WAAWhB,KAAX;AAAA;AAAA;AAAA;AAAA,gBAAjC,CA7BZ,eAgCQ,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhCR,EAsCYb,aAAa,CAACgB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,kBAAgB;AAAA,oBAAmBI,IAAI,CAACY;AAAxB,WAAWhB,KAAX;AAAA;AAAA;AAAA;AAAA,gBAAlC,CAtCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADE,qBAAN;AA2CH,GA7CD;;AA+CA,QAAMgC,gBAAgB,GAAIC,IAAD,IAAU;AAC/BrF,IAAAA,OAAO,CAACC,GAAR,CAAYoF,IAAZ;AACA,QAAIC,YAAY,GAAG,EAAnB;AACAD,IAAAA,IAAI,CAAC9B,GAAL,CAAUkB,GAAD,IAAS;AACda,MAAAA,YAAY,CAACX,IAAb,CAAkB;AAClBY,QAAAA,KAAK,EAAEd,GAAG,CAACL,IADO;AAElBlB,QAAAA,GAAG,EAAEuB,GAAG,CAACe,GAFS;AAGlBC,QAAAA,QAAQ,EAAChB,GAAG,CAACgB,QAAJ,CAAalB,MAAb,GAAsB,CAAtB,IAA2Ba,gBAAgB,CAACX,GAAG,CAACgB,QAAL;AAHlC,OAAlB;AAKH,KAND;AAOA,WAAOH,YAAP;AACH,GAXD;;AAcA,QAAMpB,kBAAkB,GAAG,CAACmB,IAAD,EAAOK,OAAO,GAAE,EAAhB,KAAuB;AAE9CL,IAAAA,IAAI,CAAC9B,GAAL,CAAUkB,GAAD,IAAQ;AACbiB,MAAAA,OAAO,CAACf,IAAR,CAAa;AAACxB,QAAAA,KAAK,EAACsB,GAAG,CAACe,GAAX;AAAgBpB,QAAAA,IAAI,EAAEK,GAAG,CAACL,IAA1B;AAAgCY,QAAAA,QAAQ,EAAEP,GAAG,CAACO;AAA9C,OAAb;;AACA,UAAGP,GAAG,CAACgB,QAAJ,CAAalB,MAAb,GAAsB,CAAzB,EACA;AACIL,QAAAA,kBAAkB,CAACO,GAAG,CAACgB,QAAL,EAAeC,OAAf,CAAlB;AACH;AACJ,KAND;AAQA,WAAOA,OAAP;AACH,GAXD;;AAaA,QAAM5B,cAAc,GAAG,MAAME,CAAN,IAAW;AAC9B,UAAM2B,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBpE,YAApB;AACAkE,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBlE,gBAAxB;AACA,UAAMmE,GAAG,GAAG,MAAM7G,KAAK,CAAC8G,IAAN,CAAW,eAAX,EAA4BJ,IAA5B,EAAkC;AAChDK,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAE3F;AAAhB;AADuC,KAAlC,CAAlB;AAGAoB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAlB,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY6F,GAAZ;AACAxE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAbD;;AAeA,QAAMwD,YAAY,GAAG,MAAMd,CAAN,IAAU;AAC3B,UAAM2B,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAvD,IAAAA,aAAa,CAACkB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,KAAgB;AAC9BuC,MAAAA,IAAI,CAACE,MAAL,CAAY,KAAZ,EAAmBrC,IAAI,CAACL,KAAxB;AACAwC,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBrC,IAAI,CAACY,IAAzB;AACAuB,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBrC,IAAI,CAACwB,QAAL,GAAgBxB,IAAI,CAACwB,QAArB,GAAgC,EAAxD;AACAW,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBrC,IAAI,CAACH,IAAzB;AACH,KALD;AAOAlB,IAAAA,YAAY,CAACoB,GAAb,CAAiB,CAACC,IAAD,EAAMJ,KAAN,KAAgB;AAC7BuC,MAAAA,IAAI,CAACE,MAAL,CAAY,KAAZ,EAAmBrC,IAAI,CAACL,KAAxB;AACAwC,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBrC,IAAI,CAACY,IAAzB;AACAuB,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBrC,IAAI,CAACwB,QAAL,GAAgBxB,IAAI,CAACwB,QAArB,GAAgC,EAAxD;AACAW,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBrC,IAAI,CAACH,IAAzB;AACH,KALD;AAOAd,IAAAA,aAAa,CAACgB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,KAAgB;AAC9BuC,MAAAA,IAAI,CAACE,MAAL,CAAY,KAAZ,EAAmBrC,IAAI,CAACL,KAAxB;AACAwC,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBrC,IAAI,CAACY,IAAzB;AACAuB,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBrC,IAAI,CAACwB,QAAL,GAAgBxB,IAAI,CAACwB,QAArB,GAAgC,EAAxD;AACAW,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBrC,IAAI,CAACH,IAAzB;AACH,KALD;AAOA,UAAMyC,GAAG,GAAG,MAAM7G,KAAK,CAAC8G,IAAN,CAAW,sBAAX,EAAmCJ,IAAnC,EAAyC;AACvDK,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAE3F;AAAhB;AAD8C,KAAzC,CAAlB;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAY6F,GAAZ;AAEA1D,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA5B,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAJ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAe,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GApCD;;AAsCA,QAAM6D,cAAc,GAAG,MAAMnB,CAAN,IAAU;AAC7B,UAAMkC,gBAAgB,GAAG7D,aAAa,CAACkB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,MAAgB;AAACoC,MAAAA,GAAG,EAAEhC,IAAI,CAACL;AAAX,KAAhB,CAAlB,CAAzB;AACA,UAAMgD,eAAe,GAAGhE,YAAY,CAACoB,GAAb,CAAiB,CAACC,IAAD,EAAMJ,KAAN,MAAgB;AAACoC,MAAAA,GAAG,EAAEhC,IAAI,CAACL;AAAX,KAAhB,CAAjB,CAAxB;AACA,UAAMiD,gBAAgB,GAAG7D,aAAa,CAACgB,GAAd,CAAkB,CAACC,IAAD,EAAMJ,KAAN,MAAgB;AAACoC,MAAAA,GAAG,EAAEhC,IAAI,CAACL;AAAX,KAAhB,CAAlB,CAAzB;AACA,UAAMkD,QAAQ,GAAGH,gBAAgB,CAACI,MAAjB,CAAwBH,eAAxB,EAAwCC,gBAAxC,CAAjB;AACA,UAAMN,GAAG,GAAG,MAAM7G,KAAK,CAAC8G,IAAN,CAAW,sBAAX,EAAmC;AAACQ,MAAAA,GAAG,EAACF;AAAL,KAAnC,EAAmD;AACjEL,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAE3F;AAAhB;AADwD,KAAnD,EAEfkG,IAFe,CAET,MAAMC,MAAN,IAAe;AACpB,UAAGA,MAAH,EACA;AACI,cAAMxH,KAAK,CAACyH,GAAN,CAAU,eAAV,CAAN;AACA5F,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,KARiB,CAAlB;AAUAN,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY6F,GAAZ;AACAxE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAlBD;;AAsBA,sBACI;AAAA,4BACA,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,eAAb;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAACyD,UAAAA,IAAI,EAAE;AAAP,SAAT;AAAqB,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzB;AAAqC,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzC;AAAqD,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzD;AAAqE,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzE;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAT;AAAqB,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzB;AAAqC,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzC;AAAqD,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzD;AAAqE,QAAA,EAAE,EAAE;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAzE;AAAqF,QAAA,SAAS,EAAC,iBAA/F;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,SAA9B;AAAwC,UAAA,OAAO,EAAEnB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,SAA9B;AAAwC,UAAA,OAAO,EAAEgB,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,OAAO,EAAEK,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAUMtE,MAAM,GAAGkE,SAAS,EAAZ,GAAiBpE,KAAK,GAAGoD,QAAQ,EAAX,GAAehD,QAAQ,GAAGqE,WAAW,EAAd,GAAiB,EAV1E;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAmBA,QAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,mBAAmB,EAAE,CAAC,OAAD,EAAU,OAAV,CAFzB;AAGI,MAAA,mBAAmB,EAAE,CAAC,OAAD,EAAU,OAAV,CAHzB;AAII,MAAA,kBAAkB,EAAE,CAAC,OAAD,EAAU,OAAV,CAJxB;AAKI,MAAA,QAAQ,EAAEzC,QALd;AAMI,MAAA,QAAQ,EAAEE,QANd;AAOI,MAAA,OAAO,EAAEG,OAPb;AAQI,MAAA,QAAQ,EAAEsC,gBAAgB,CAAClF,UAAD;AAR9B;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA,kBADJ;AAgCH;;GArdQJ,U;UAMSZ,W;;;KANTY,U;AAudT,eAAeA,UAAf","sourcesContent":["import React, {useState, useContext,useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { Tree } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [category, setCategory] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.categoriesAPI.callback\r\n    const [onAdd, setOnAdd] = useState(false)\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [onDelete, setOnDelete] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [parentCategoryId, setParentCategoryId] = useState('')\r\n\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [selectedArray, setSelectedArray] = useState([]);\r\n\r\n\r\n    const onExpand = (expandedKeysValue) => {\r\n        console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n        // or, you can remove all expanded children keys.\r\n        setExpanded(expandedKeysValue)\r\n      };\r\n\r\n    const onSelect = (selectedKeys, info) => {\r\n        setSelected(selectedKeys)\r\n        console.log({selectedKeys});\r\n        console.log({selected})\r\n        \r\n      };\r\n    \r\n    const onCheck = (checkedKeys, info) => {\r\n        setChecked(checkedKeys)\r\n        console.log('onCheck', checkedKeys, info);\r\n    };\r\n\r\n    \r\n    const  handleCancel = () => {\r\n        setOnAdd(false)\r\n        setOnEdit(false)\r\n        setOnDelete(false)\r\n        setVisible(false)\r\n    };\r\n\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setCheckedArray(updatedCheckedArray);\r\n          } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setExpandedArray(updatedExpandedArray);\r\n          }else if (type == \"selected\") {\r\n            const updatedSelectedArray = selectedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setSelectedArray(updatedSelectedArray);\r\n          }\r\n    }\r\n    \r\n    const showModalAdd = () => {\r\n        setVisible(true)\r\n        setOnAdd(true)\r\n        console.log({onAdd})\r\n        setOnEdit(false)\r\n        setOnDelete(false)\r\n        if(selected)\r\n        {\r\n            setParentCategoryId(selected)\r\n        }\r\n        console.log({selected})\r\n        \r\n       \r\n    };\r\n\r\n    const ModalAdd = () =>{\r\n        return <>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Add new category\"\r\n                onOk={createCategory}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={createCategory}>\r\n                    Create\r\n                    </Button>\r\n                ]}\r\n                >\r\n                <Input style={{marginBottom :'20px'}} value={categoryName} placeholder=\"Category Name\" onChange={(e)=> setCategoryName(e.target.value)} />\r\n                <select className=\"group-control-model\" value={parentCategoryId} onChange={(e)=> setParentCategoryId(e.target.value)} placeholder=\"Please select a category\">\r\n                    <option>Select a category</option>\r\n                    {\r\n                        createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n            </Modal> \r\n        </>\r\n      }\r\n    \r\n    const updateCheckedExpandedSelected= ()=>{\r\n        setVisible(true)\r\n        const cats = createCategoryList(categories)\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        const selectedArray = [];\r\n\r\n        checked.length > 0 && checked.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && checkedArray.push(cat)\r\n        })\r\n\r\n        expanded.length > 0 && expanded.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && expandedArray.push(cat)\r\n        })\r\n\r\n        selected.length > 0 && selected.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && selectedArray.push(cat)\r\n        })\r\n\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n        setSelectedArray(selectedArray);\r\n        console.log({checked, expanded,selected, cats, checkedArray, expandedArray,selectedArray})\r\n    }\r\n\r\n    const showModalEdit= () => {\r\n        setOnEdit(true)\r\n        updateCheckedExpandedSelected()\r\n    };\r\n\r\n    const ModalEdit = () =>{\r\n        return <>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Edit new category\"\r\n                onOk={editCategory}\r\n                onCancel={handleCancel}\r\n                width={1000}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={editCategory}>\r\n                    Edit\r\n                    </Button>\r\n                ]}\r\n                >\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Expanded</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        expandedArray.length > 0 && expandedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\">\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"store\">Store</option>\r\n                                    <option value=\"product\">Product</option>\r\n                                    <option value=\"page\">Page</option>\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    }\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Checked</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        checkedArray.length > 0 && checkedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\">\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"store\">Store</option>\r\n                                    <option value=\"product\">Product</option>\r\n                                    <option value=\"page\">Page</option>\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Selected</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        selectedArray.length > 0 && selectedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'selected')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'selected')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\">\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"store\">Store</option>\r\n                                    <option value=\"product\">Product</option>\r\n                                    <option value=\"page\">Page</option>\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    }\r\n                    \r\n\r\n            </Modal> \r\n        </>\r\n    }\r\n\r\n    const showModalDelete = () => {\r\n        setOnDelete(true)\r\n        updateCheckedExpandedSelected()\r\n    }\r\n\r\n    const ModalDelete = () =>{\r\n        console.log('delete', checkedArray)\r\n        return<>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Delete category\"\r\n                onOk={deleteCategory}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    No\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={deleteCategory}>\r\n                    Yes\r\n                    </Button>\r\n                ]}\r\n                >\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Expanded</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        expandedArray.map((item,index) =>(<span key={index}>{item.name}</span>))\r\n                    }\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Checked</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        checkedArray.map((item,index) =>(<span key={index}>{item.name}</span>))\r\n                    }\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Selected</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        selectedArray.map((item,index) =>(<span key={index}>{item.name}</span>))\r\n                    }\r\n            </Modal> \r\n        </>\r\n    }\r\n\r\n    const renderCategories = (cate) => {\r\n        console.log(cate);\r\n        let myCategories = [];\r\n        cate.map((cat) => {\r\n            myCategories.push({\r\n            title: cat.name,\r\n            key: cat._id,\r\n            children:cat.children.length > 0 && renderCategories(cat.children),\r\n          });\r\n        });\r\n        return myCategories;\r\n    }; \r\n\r\n    \r\n    const createCategoryList = (cate, options =[]) => {\r\n\r\n        cate.map((cat) =>{\r\n            options.push({value:cat._id, name: cat.name, parentId: cat.parentId});\r\n            if(cat.children.length > 0)\r\n            {\r\n                createCategoryList(cat.children, options)\r\n            }\r\n        })\r\n\r\n        return options;\r\n    };\r\n\r\n    const createCategory = async e => {\r\n        const form = new FormData();\r\n        form.append('name', categoryName)\r\n        form.append('parentId', parentCategoryId)\r\n        const res = await axios.post('/api/category', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n        setCategoryName('')\r\n        setParentCategoryId('')\r\n        setOnAdd(false)\r\n        setCallback(!callback)\r\n        console.log(res)\r\n        setVisible(false)\r\n    };\r\n\r\n    const editCategory = async e =>{\r\n        const form = new FormData();\r\n        \r\n        expandedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        checkedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        selectedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        const res = await axios.post('/api/category/update', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        console.log(res)\r\n\r\n        setCheckedArray('');\r\n        setExpandedArray('');\r\n        setSelectedArray('');\r\n        setOnEdit(false);\r\n        setCallback(!callback)\r\n        setVisible(false)\r\n    }\r\n\r\n    const deleteCategory = async e =>{\r\n        const expandedIdsArray = expandedArray.map((item,index) =>({_id: item.value}))\r\n        const checkedIdsArray = checkedArray.map((item,index) =>({_id: item.value}))\r\n        const selectedIdsArray = selectedArray.map((item,index) =>({_id: item.value}))\r\n        const idsArray = expandedIdsArray.concat(checkedIdsArray,selectedIdsArray)\r\n        const res = await axios.post('/api/category/delete', {ids:idsArray}, {\r\n            headers: {Authorization: token}\r\n        }).then( async result =>{\r\n            if(result)\r\n            {\r\n                await axios.get('/api/category')\r\n                setOnDelete(false)\r\n            }\r\n        })\r\n\r\n        setCallback(!callback)\r\n        console.log(res)\r\n        setVisible(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Row justify=\"space-between\">\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}}>\r\n                <h2 className=\"text-4xl\">All Categories</h2>\r\n            </Col>\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}} className=\"text-right mb-2\">\r\n                <Button className=\"mr-7\" type=\"primary\" onClick={showModalAdd}>\r\n                    ADD\r\n                </Button>\r\n                <Button className=\"mr-7\" type=\"primary\" onClick={showModalEdit}>\r\n                    EDIT\r\n                </Button> \r\n                <Button type=\"primary\" onClick={showModalDelete}>\r\n                    DELETE\r\n                </Button> \r\n                { onEdit ? ModalEdit() : onAdd ? ModalAdd(): onDelete ? ModalDelete():''}\r\n            </Col>\r\n        </Row>\r\n\r\n        <Tree\r\n            checkable\r\n            defaultExpandedKeys={['0-0-0', '0-0-1']}\r\n            defaultSelectedKeys={['0-0-0', '0-0-1']}\r\n            defaultCheckedKeys={['0-0-0', '0-0-1']}\r\n            onExpand={onExpand}\r\n            onSelect={onSelect}\r\n            onCheck={onCheck}\r\n            treeData={renderCategories(categories)}\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}