{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\tlcn1\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\AllPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport { Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport './css/alluser.css';\nimport Loading from '../utils/loading/Loading';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AllPost() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [myPosts, setMyPosts] = state.myPostsAPI.myPosts;\n  const [loading, setLoading] = useState(false);\n  const token = useSelector(state => state.token);\n  const [callback, setCallback] = state.myPostsAPI.callback;\n  console.log('state all post');\n  console.log(myPosts);\n\n  const deleteMyPost = async (id, public_id) => {\n    try {\n      setLoading(true);\n      const destroyImg = axios.post('/api/destroy_admin', {\n        public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const deleteMyPost = axios.delete(`/api/admin/posts/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      await destroyImg;\n      await deleteMyPost;\n      setCallback(!callback);\n      setLoading(false);\n      alert('Delete is successful');\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"customers\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: myPosts.map(myPost => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: myPost._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: myPost.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/admin/edit_post/${myPost._id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-edit\",\n                    title: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash-alt\",\n                  title: \"Remove\",\n                  onClick: () => deleteMyPost(myPost._id, myPost.images.public_id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this)]\n            }, myPost._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AllPost, \"+j+ecLS/X1CWpfmEnDSMx6hLink=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllPost;\nexport default AllPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPost\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/tlcn1/tlcn/client/src/components/mainpages/admin/AllPost.js"],"names":["React","useContext","useState","GlobalState","Avatar","Link","useSelector","Loading","axios","AllPost","state","myPosts","setMyPosts","myPostsAPI","loading","setLoading","token","callback","setCallback","console","log","deleteMyPost","id","public_id","destroyImg","post","headers","Authorization","delete","alert","err","response","data","msg","overflowX","map","myPost","_id","title","images"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Avatar } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport Loading from '../utils/loading/Loading'\r\nimport axios from 'axios'\r\n\r\nfunction AllPost() {\r\n    const state = useContext(GlobalState)\r\n    const [myPosts, setMyPosts] = state.myPostsAPI.myPosts\r\n    const [loading, setLoading] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.myPostsAPI.callback\r\n    console.log('state all post')\r\n    console.log(myPosts)\r\n\r\n\r\n    const deleteMyPost = async(id, public_id) => {\r\n        try {\r\n            setLoading(true)\r\n            const destroyImg = axios.post('/api/destroy_admin', {public_id},{\r\n                headers: {Authorization: token}\r\n            })\r\n            const deleteMyPost = axios.delete(`/api/admin/posts/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            await destroyImg\r\n            await deleteMyPost\r\n            setCallback(!callback)\r\n            setLoading(false)\r\n            alert('Delete is successful')\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n <>\r\n        <div className=\"col-right\">\r\n                    <h2>My Post</h2>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>Body</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                    myPosts.map(myPost => (\r\n                                        <tr key={myPost._id}>\r\n                                            <td>{myPost._id}</td>\r\n                                            <td>{myPost.title}</td>\r\n                                            <td>\r\n                                                <Link to={`/admin/edit_post/${myPost._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\" onClick={() => deleteMyPost(myPost._id,myPost.images.public_id)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPost;"]},"metadata":{},"sourceType":"module"}