{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thu26\\\\Desktop\\\\test\\\\test123\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport './css/alluser.css';\nimport './css/category.css';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'antd';\nimport { showSuccessMsg, showErrMsg } from '../utils/notification/Notification';\nimport { Modal, Button } from 'antd';\nimport { Input } from 'antd';\nimport { Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Categories() {\n  _s();\n\n  const state = useContext(GlobalState);\n  console.log(state);\n  const [categories] = state.categoriesAPI.categories;\n  const [category, setCategory] = useState('');\n  const token = useSelector(state => state.token);\n  const [callback, setCallback] = state.categoriesAPI.callback;\n  const [onEdit, setOnEdit] = useState(false);\n  const [id, setID] = useState('');\n  const [err, setErr] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    dispatch(addCategory(form));\n    setVisible(false);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [category.name, category.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderCategories(category.children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 52\n        }, this) || \"\"]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this));\n    }\n\n    return myCategories;\n  };\n  /* const createCategory = async e =>{\r\n      e.preventDefault()\r\n      try {\r\n          if(onEdit){\r\n              const res = await axios.put(`/api/category/${id}`, {name: category}, {\r\n                  headers: {Authorization: token}\r\n              })\r\n              setSuccess('Update is successful')\r\n          }else{\r\n              const res = await axios.post('/api/category', {name: category}, {\r\n                  headers: {Authorization: token}\r\n              })\r\n              setSuccess('Create is successful')\r\n          }\r\n          setOnEdit(false)\r\n          setCategory('') \r\n          setCallback(!callback)\r\n          \r\n      } catch (err) {\r\n          alert(err.response.data.msg)\r\n      }\r\n        return <>\r\n      {success && showSuccessMsg('success',success)}\r\n      {err && showErrMsg('error',err)}\r\n      </>\r\n  }\r\n      const editCategory = async (id, name) =>{\r\n      setID(id)\r\n      setCategory(name)\r\n      setOnEdit(true)\r\n      setSuccess('Update is successful')\r\n        return <>\r\n      {success && showSuccessMsg('success',success)}\r\n      {err && showErrMsg('error',err)}\r\n      </>\r\n  }\r\n    const deleteCategory = async id =>{\r\n      try {\r\n          const res = await axios.delete(`/api/category/${id}`, {\r\n              headers: {Authorization: token}\r\n          })\r\n          setSuccess('Delete is successful')\r\n          setCallback(!callback)\r\n      } catch (err) {\r\n          setErr(err.response.data.msg)\r\n      }\r\n      return <>\r\n      {success && showSuccessMsg('success',success)}\r\n      {err && showErrMsg('error',err)}\r\n      </>\r\n  } */\n\n\n  return (\n    /*#__PURE__*/\n\n    /*  <>\r\n     <div className=\"col-right\">\r\n                 <h2>All Categories</h2>\r\n                 \r\n                 <form className='category' onSubmit={createCategory}>\r\n                 <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                     <Col span={8}><input type=\"text\" name=\"category\" placeholder=\"Category's name\" value={category} required onChange={e => setCategory(e.target.value)} /></Col>\r\n                     <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                 </Row>\r\n                 </form>\r\n                   <div style={{overflowX: \"auto\"}}>\r\n                     <table className=\"customers\">\r\n                         <thead>\r\n                             <tr>\r\n                                 <th>ID</th>\r\n                                 <th>Name</th>\r\n                                 <th>Action</th>\r\n                             </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                             {\r\n                                 categories.map(category =>(\r\n                                     <tr key={category._id}>\r\n                                         <td>{category._id}</td>\r\n                                         <td>{category.name}</td>\r\n                                         <td>\r\n                                             <Link onClick={() => editCategory(category._id, category.name)}>\r\n                                                 <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                             </Link>\r\n                                             <Link onClick={() => deleteCategory(category._id)}>\r\n                                                 <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                             </Link>\r\n                                         </td>\r\n                                     </tr>\r\n                                 ))\r\n                             }\r\n                         </tbody>\r\n                     </table>\r\n                 </div>\r\n             </div>\r\n     </> */\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 12\n          },\n          md: {\n            span: 12\n          },\n          lg: {\n            span: 12\n          },\n          lx: {\n            span: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-4xl\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 12\n          },\n          md: {\n            span: 12\n          },\n          lg: {\n            span: 12\n          },\n          lx: {\n            span: 12\n          },\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: showModal,\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            visible: visible,\n            title: \"Add new category\",\n            onOk: handleOk,\n            onCancel: handleCancel,\n            footer: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCancel,\n              children: \"Close\"\n            }, \"back\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              loading: loading,\n              onClick: handleOk,\n              children: \"Create\"\n            }, \"submit\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this)],\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                marginBottom: '20px'\n              },\n              value: categoryName,\n              placeholder: \"Category Name\",\n              onChange: e => setCategoryName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: parentCategoryId,\n              onChange: e => setParentCategoryId(e.target.value),\n              placeholder: \"Please select a category\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 78\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [renderCategories(category.categories), JSON.stringify(createCategoryList(category.categories))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(Categories, \"IxXCT/LugKypqeZDzJs9nQuCVyU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/thu26/Desktop/test/test123/tlcn/client/src/components/mainpages/admin/Categories.js"],"names":["React","useState","useContext","GlobalState","axios","useSelector","Link","Row","Col","showSuccessMsg","showErrMsg","Modal","Button","Input","Select","Categories","state","console","log","categories","categoriesAPI","category","setCategory","token","callback","setCallback","onEdit","setOnEdit","id","setID","err","setErr","success","setSuccess","visible","setVisible","loading","setLoading","showModal","handleOk","form","FormData","append","categoryName","parentCategoryId","dispatch","addCategory","handleCancel","renderCategories","myCategories","push","name","children","length","span","marginBottom","e","setCategoryName","target","value","setParentCategoryId","createCategoryList","map","option","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,oCAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAMC,KAAK,GAAGd,UAAU,CAACC,WAAD,CAAxB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,UAAD,IAAeH,KAAK,CAACI,aAAN,CAAoBD,UAAzC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMsB,KAAK,GAAGlB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACO,KAAhB,CAAzB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACI,aAAN,CAAoBI,QAApD;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC2B,EAAD,EAAKC,KAAL,IAAc5B,QAAQ,CAAC,EAAD,CAA5B;AAEA,QAAM,CAAC6B,GAAD,EAAMC,MAAN,IAAgB9B,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACiC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmC,OAAD,EAAUC,UAAV,IAAwBpC,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMqC,SAAS,GAAG,MAAM;AACpBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,QAAMI,QAAQ,GAAG,MAAM;AACnB,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBC,YAApB;AACAH,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBE,gBAAxB;AACAC,IAAAA,QAAQ,CAACC,WAAW,CAACN,IAAD,CAAZ,CAAR;AACAL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GANH;;AAQA,QAAOY,YAAY,GAAG,MAAM;AACpBZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACL,GAFH;;AAIA,QAAMa,gBAAgB,GAAI7B,UAAD,IAAgB;AACrC,QAAI8B,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAI5B,QAAT,IAAqBF,UAArB,EAAiC;AAC/B8B,MAAAA,YAAY,CAACC,IAAb,eACI;AAAA,mBACK7B,QAAQ,CAAC8B,IADd,EAEK9B,QAAQ,CAAC+B,QAAT,CAAkBC,MAAlB,GAA2B,CAA3B,iBAAgC;AAAA,oBAAKL,gBAAgB,CAAC3B,QAAQ,CAAC+B,QAAV;AAArB;AAAA;AAAA;AAAA;AAAA,gBAAhC,IAAkF,EAFvF;AAAA,SAAS/B,QAAQ,CAAC8B,IAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOD;;AACD,WAAOF,YAAP;AACH,GAZD;AAcA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMI;AAAA;;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA,8BACQ,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,eAAb;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACK,YAAAA,IAAI,EAAE;AAAP,WAAT;AAAqB,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzB;AAAqC,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzC;AAAqD,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzD;AAAqE,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzE;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAT;AAAqB,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzB;AAAqC,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzC;AAAqD,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzD;AAAqE,UAAA,EAAE,EAAE;AAACA,YAAAA,IAAI,EAAE;AAAP,WAAzE;AAAqF,UAAA,SAAS,EAAC,YAA/F;AAAA,kCACA,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,OAAO,EAAEhB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA,QAAC,KAAD;AACI,YAAA,OAAO,EAAEJ,OADb;AAEI,YAAA,KAAK,EAAC,kBAFV;AAGI,YAAA,IAAI,EAAEK,QAHV;AAII,YAAA,QAAQ,EAAEQ,YAJd;AAKI,YAAA,MAAM,EAAE,cACJ,QAAC,MAAD;AAAmB,cAAA,OAAO,EAAEA,YAA5B;AAAA;AAAA,eAAY,MAAZ;AAAA;AAAA;AAAA;AAAA,oBADI,eAIJ,QAAC,MAAD;AAAqB,cAAA,IAAI,EAAC,SAA1B;AAAoC,cAAA,OAAO,EAAEX,OAA7C;AAAsD,cAAA,OAAO,EAAEG,QAA/D;AAAA;AAAA,eAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,oBAJI,CALZ;AAAA,oCAcI,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE;AAACgB,gBAAAA,YAAY,EAAE;AAAf,eAAd;AAAsC,cAAA,KAAK,EAAEZ,YAA7C;AAA2D,cAAA,WAAW,EAAC,eAAvE;AAAuF,cAAA,QAAQ,EAAGa,CAAD,IAAMC,eAAe,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAAtH;AAAA;AAAA;AAAA;AAAA,oBAdJ,eAeI;AAAQ,cAAA,KAAK,EAAEf,gBAAf;AAAiC,cAAA,QAAQ,EAAGY,CAAD,IAAMI,mBAAmB,CAACJ,CAAC,CAACE,MAAF,CAASC,KAAV,CAApE;AAAsF,cAAA,WAAW,EAAC,0BAAlG;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGQE,kBAAkB,CAACxC,QAAQ,CAACF,UAAV,CAAlB,CAAwC2C,GAAxC,CAA4CC,MAAM,iBAAG;AAA2B,gBAAA,KAAK,EAAEA,MAAM,CAACJ,KAAzC;AAAA,0BAAiDI,MAAM,CAACZ;AAAxD,iBAAaY,MAAM,CAACJ,KAApB;AAAA;AAAA;AAAA;AAAA,sBAArD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAkCQ;AAAA,mBACKX,gBAAgB,CAAC3B,QAAQ,CAACF,UAAV,CADrB,EAEK6C,IAAI,CAACC,SAAL,CAAeJ,kBAAkB,CAACxC,QAAQ,CAACF,UAAV,CAAjC,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCR;AAAA;AA7CI;AAqFH;;GA5LQJ,U;UAMSV,W;;;KANTU,U;AA8LT,eAAeA,UAAf","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [category, setCategory] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.categoriesAPI.callback\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const showModal = () => {\r\n        setVisible(true)\r\n    };\r\n\r\n    const handleOk = () => {\r\n        const form = new FormData();\r\n        form.append('name', categoryName)\r\n        form.append('parentId', parentCategoryId)\r\n        dispatch(addCategory(form))\r\n        setVisible(false)\r\n      };\r\n\r\n    const  handleCancel = () => {\r\n            setVisible(false)\r\n      };\r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n          myCategories.push(\r\n              <li key={category.name}>\r\n                  {category.name}\r\n                  {category.children.length > 0 && <ul>{renderCategories(category.children)}</ul> || \"\"}\r\n                  \r\n            </li>\r\n          );\r\n        }\r\n        return myCategories;\r\n    };\r\n\r\n    /* const createCategory = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(onEdit){\r\n                const res = await axios.put(`/api/category/${id}`, {name: category}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Update is successful')\r\n            }else{\r\n                const res = await axios.post('/api/category', {name: category}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Create is successful')\r\n            }\r\n            setOnEdit(false)\r\n            setCategory('') \r\n            setCallback(!callback)\r\n            \r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n\r\n    const editCategory = async (id, name) =>{\r\n        setID(id)\r\n        setCategory(name)\r\n        setOnEdit(true)\r\n        setSuccess('Update is successful')\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n    const deleteCategory = async id =>{\r\n        try {\r\n            const res = await axios.delete(`/api/category/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setSuccess('Delete is successful')\r\n            setCallback(!callback)\r\n        } catch (err) {\r\n            setErr(err.response.data.msg)\r\n        }\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    } */\r\n    return (\r\n       /*  <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Categories</h2>\r\n                    \r\n                    <form className='category' onSubmit={createCategory}>\r\n                    <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                        <Col span={8}><input type=\"text\" name=\"category\" placeholder=\"Category's name\" value={category} required onChange={e => setCategory(e.target.value)} /></Col>\r\n                        <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                    </Row>\r\n                    </form>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    categories.map(category =>(\r\n                                        <tr key={category._id}>\r\n                                            <td>{category._id}</td>\r\n                                            <td>{category.name}</td>\r\n                                            <td>\r\n                                                <Link onClick={() => editCategory(category._id, category.name)}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <Link onClick={() => deleteCategory(category._id)}>\r\n                                                    <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </> */\r\n\r\n\r\n<>\r\n        <Row justify=\"space-between\">\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}}>\r\n                <h2 className=\"text-4xl\">All Categories</h2>\r\n            </Col>\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}} className=\"text-right\">\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                ADD\r\n            </Button>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Add new category\"\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    Create\r\n                    </Button>\r\n                ]}\r\n                >\r\n                <Input style={{marginBottom :'20px'}} value={categoryName} placeholder=\"Category Name\" onChange={(e)=> setCategoryName(e.target.value)} />\r\n                <select value={parentCategoryId} onChange={(e)=> setParentCategoryId(e.target.value)} placeholder=\"Please select a category\">\r\n                    <option>Select a category</option>\r\n                    {\r\n                        createCategoryList(category.categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n            </Modal>  \r\n            </Col>\r\n        </Row>\r\n        \r\n        <ul>\r\n            {renderCategories(category.categories)}\r\n            {JSON.stringify(createCategoryList(category.categories))}\r\n        </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}