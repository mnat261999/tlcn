{"ast":null,"code":"'use strict';\n/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n\n(function (f) {\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    module.exports = f(require('react'));\n    /* global define */\n  } else if (typeof define === 'function' && define.amd) {\n    define(['react'], f);\n  } else {\n    var g;\n\n    if (typeof window !== 'undefined') {\n      g = window;\n    } else if (typeof global !== 'undefined') {\n      g = global;\n    } else if (typeof self !== 'undefined') {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    if (typeof g.React === 'undefined') {\n      throw Error('React module should be required before ReactDOMFactories');\n    }\n\n    g.ReactDOMFactories = f(g.React);\n  }\n})(function (React) {\n  /**\r\n   * Create a factory that creates HTML tag elements.\r\n   */\n  function createDOMFactory(type) {\n    var factory = React.createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be\n    // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n    // This should not be named `constructor` since this may not be the function\n    // that created the element, and it may not even be a constructor.\n\n    factory.type = type;\n    return factory;\n  }\n\n  ;\n  /**\r\n   * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\r\n   */\n\n  var ReactDOMFactories = {\n    a: createDOMFactory('a'),\n    abbr: createDOMFactory('abbr'),\n    address: createDOMFactory('address'),\n    area: createDOMFactory('area'),\n    article: createDOMFactory('article'),\n    aside: createDOMFactory('aside'),\n    audio: createDOMFactory('audio'),\n    b: createDOMFactory('b'),\n    base: createDOMFactory('base'),\n    bdi: createDOMFactory('bdi'),\n    bdo: createDOMFactory('bdo'),\n    big: createDOMFactory('big'),\n    blockquote: createDOMFactory('blockquote'),\n    body: createDOMFactory('body'),\n    br: createDOMFactory('br'),\n    button: createDOMFactory('button'),\n    canvas: createDOMFactory('canvas'),\n    caption: createDOMFactory('caption'),\n    cite: createDOMFactory('cite'),\n    code: createDOMFactory('code'),\n    col: createDOMFactory('col'),\n    colgroup: createDOMFactory('colgroup'),\n    data: createDOMFactory('data'),\n    datalist: createDOMFactory('datalist'),\n    dd: createDOMFactory('dd'),\n    del: createDOMFactory('del'),\n    details: createDOMFactory('details'),\n    dfn: createDOMFactory('dfn'),\n    dialog: createDOMFactory('dialog'),\n    div: createDOMFactory('div'),\n    dl: createDOMFactory('dl'),\n    dt: createDOMFactory('dt'),\n    em: createDOMFactory('em'),\n    embed: createDOMFactory('embed'),\n    fieldset: createDOMFactory('fieldset'),\n    figcaption: createDOMFactory('figcaption'),\n    figure: createDOMFactory('figure'),\n    footer: createDOMFactory('footer'),\n    form: createDOMFactory('form'),\n    h1: createDOMFactory('h1'),\n    h2: createDOMFactory('h2'),\n    h3: createDOMFactory('h3'),\n    h4: createDOMFactory('h4'),\n    h5: createDOMFactory('h5'),\n    h6: createDOMFactory('h6'),\n    head: createDOMFactory('head'),\n    header: createDOMFactory('header'),\n    hgroup: createDOMFactory('hgroup'),\n    hr: createDOMFactory('hr'),\n    html: createDOMFactory('html'),\n    i: createDOMFactory('i'),\n    iframe: createDOMFactory('iframe'),\n    img: createDOMFactory('img'),\n    input: createDOMFactory('input'),\n    ins: createDOMFactory('ins'),\n    kbd: createDOMFactory('kbd'),\n    keygen: createDOMFactory('keygen'),\n    label: createDOMFactory('label'),\n    legend: createDOMFactory('legend'),\n    li: createDOMFactory('li'),\n    link: createDOMFactory('link'),\n    main: createDOMFactory('main'),\n    map: createDOMFactory('map'),\n    mark: createDOMFactory('mark'),\n    menu: createDOMFactory('menu'),\n    menuitem: createDOMFactory('menuitem'),\n    meta: createDOMFactory('meta'),\n    meter: createDOMFactory('meter'),\n    nav: createDOMFactory('nav'),\n    noscript: createDOMFactory('noscript'),\n    object: createDOMFactory('object'),\n    ol: createDOMFactory('ol'),\n    optgroup: createDOMFactory('optgroup'),\n    option: createDOMFactory('option'),\n    output: createDOMFactory('output'),\n    p: createDOMFactory('p'),\n    param: createDOMFactory('param'),\n    picture: createDOMFactory('picture'),\n    pre: createDOMFactory('pre'),\n    progress: createDOMFactory('progress'),\n    q: createDOMFactory('q'),\n    rp: createDOMFactory('rp'),\n    rt: createDOMFactory('rt'),\n    ruby: createDOMFactory('ruby'),\n    s: createDOMFactory('s'),\n    samp: createDOMFactory('samp'),\n    script: createDOMFactory('script'),\n    section: createDOMFactory('section'),\n    select: createDOMFactory('select'),\n    small: createDOMFactory('small'),\n    source: createDOMFactory('source'),\n    span: createDOMFactory('span'),\n    strong: createDOMFactory('strong'),\n    style: createDOMFactory('style'),\n    sub: createDOMFactory('sub'),\n    summary: createDOMFactory('summary'),\n    sup: createDOMFactory('sup'),\n    table: createDOMFactory('table'),\n    tbody: createDOMFactory('tbody'),\n    td: createDOMFactory('td'),\n    textarea: createDOMFactory('textarea'),\n    tfoot: createDOMFactory('tfoot'),\n    th: createDOMFactory('th'),\n    thead: createDOMFactory('thead'),\n    time: createDOMFactory('time'),\n    title: createDOMFactory('title'),\n    tr: createDOMFactory('tr'),\n    track: createDOMFactory('track'),\n    u: createDOMFactory('u'),\n    ul: createDOMFactory('ul'),\n    var: createDOMFactory('var'),\n    video: createDOMFactory('video'),\n    wbr: createDOMFactory('wbr'),\n    // SVG\n    circle: createDOMFactory('circle'),\n    clipPath: createDOMFactory('clipPath'),\n    defs: createDOMFactory('defs'),\n    ellipse: createDOMFactory('ellipse'),\n    g: createDOMFactory('g'),\n    image: createDOMFactory('image'),\n    line: createDOMFactory('line'),\n    linearGradient: createDOMFactory('linearGradient'),\n    mask: createDOMFactory('mask'),\n    path: createDOMFactory('path'),\n    pattern: createDOMFactory('pattern'),\n    polygon: createDOMFactory('polygon'),\n    polyline: createDOMFactory('polyline'),\n    radialGradient: createDOMFactory('radialGradient'),\n    rect: createDOMFactory('rect'),\n    stop: createDOMFactory('stop'),\n    svg: createDOMFactory('svg'),\n    text: createDOMFactory('text'),\n    tspan: createDOMFactory('tspan')\n  }; // due to wrapper and conditionals at the top, this will either become\n  // `module.exports ReactDOMFactories` if that is available,\n  // otherwise it will be defined via `define(['react'], ReactDOMFactories)`\n  // if that is available,\n  // otherwise it will be defined as global variable.\n\n  return ReactDOMFactories;\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/tlcn 6/tlcn/client/node_modules/react-dom-factories/index.js"],"names":["f","exports","module","require","define","amd","g","window","global","self","React","Error","ReactDOMFactories","createDOMFactory","type","factory","createElement","bind","a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,UAASA,CAAT,EAAY;AACX,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAArD,EAAkE;AAChEA,IAAAA,MAAM,CAACD,OAAP,GAAiBD,CAAC,CAACG,OAAO,CAAC,OAAD,CAAR,CAAlB;AACA;AACD,GAHD,MAGO,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AACrDD,IAAAA,MAAM,CAAC,CAAC,OAAD,CAAD,EAAYJ,CAAZ,CAAN;AACD,GAFM,MAEA;AACL,QAAIM,CAAJ;;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCD,MAAAA,CAAC,GAAGC,MAAJ;AACD,KAFD,MAEO,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACxCF,MAAAA,CAAC,GAAGE,MAAJ;AACD,KAFM,MAEA,IAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AACtCH,MAAAA,CAAC,GAAGG,IAAJ;AACD,KAFM,MAEA;AACLH,MAAAA,CAAC,GAAG,IAAJ;AACD;;AAED,QAAI,OAAOA,CAAC,CAACI,KAAT,KAAmB,WAAvB,EAAoC;AAClC,YAAMC,KAAK,CAAC,0DAAD,CAAX;AACD;;AAEDL,IAAAA,CAAC,CAACM,iBAAF,GAAsBZ,CAAC,CAACM,CAAC,CAACI,KAAH,CAAvB;AACD;AACF,CAxBD,EAwBG,UAASA,KAAT,EAAgB;AACjB;AACF;AACA;AACE,WAASG,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9B,QAAIC,OAAO,GAAGL,KAAK,CAACM,aAAN,CAAoBC,IAApB,CAAyB,IAAzB,EAA+BH,IAA/B,CAAd,CAD8B,CAE9B;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACD,IAAR,GAAeA,IAAf;AACA,WAAOC,OAAP;AACD;;AAAA;AAED;AACF;AACA;;AACE,MAAIH,iBAAiB,GAAG;AACtBM,IAAAA,CAAC,EAAEL,gBAAgB,CAAC,GAAD,CADG;AAEtBM,IAAAA,IAAI,EAAEN,gBAAgB,CAAC,MAAD,CAFA;AAGtBO,IAAAA,OAAO,EAAEP,gBAAgB,CAAC,SAAD,CAHH;AAItBQ,IAAAA,IAAI,EAAER,gBAAgB,CAAC,MAAD,CAJA;AAKtBS,IAAAA,OAAO,EAAET,gBAAgB,CAAC,SAAD,CALH;AAMtBU,IAAAA,KAAK,EAAEV,gBAAgB,CAAC,OAAD,CAND;AAOtBW,IAAAA,KAAK,EAAEX,gBAAgB,CAAC,OAAD,CAPD;AAQtBY,IAAAA,CAAC,EAAEZ,gBAAgB,CAAC,GAAD,CARG;AAStBa,IAAAA,IAAI,EAAEb,gBAAgB,CAAC,MAAD,CATA;AAUtBc,IAAAA,GAAG,EAAEd,gBAAgB,CAAC,KAAD,CAVC;AAWtBe,IAAAA,GAAG,EAAEf,gBAAgB,CAAC,KAAD,CAXC;AAYtBgB,IAAAA,GAAG,EAAEhB,gBAAgB,CAAC,KAAD,CAZC;AAatBiB,IAAAA,UAAU,EAAEjB,gBAAgB,CAAC,YAAD,CAbN;AActBkB,IAAAA,IAAI,EAAElB,gBAAgB,CAAC,MAAD,CAdA;AAetBmB,IAAAA,EAAE,EAAEnB,gBAAgB,CAAC,IAAD,CAfE;AAgBtBoB,IAAAA,MAAM,EAAEpB,gBAAgB,CAAC,QAAD,CAhBF;AAiBtBqB,IAAAA,MAAM,EAAErB,gBAAgB,CAAC,QAAD,CAjBF;AAkBtBsB,IAAAA,OAAO,EAAEtB,gBAAgB,CAAC,SAAD,CAlBH;AAmBtBuB,IAAAA,IAAI,EAAEvB,gBAAgB,CAAC,MAAD,CAnBA;AAoBtBwB,IAAAA,IAAI,EAAExB,gBAAgB,CAAC,MAAD,CApBA;AAqBtByB,IAAAA,GAAG,EAAEzB,gBAAgB,CAAC,KAAD,CArBC;AAsBtB0B,IAAAA,QAAQ,EAAE1B,gBAAgB,CAAC,UAAD,CAtBJ;AAuBtB2B,IAAAA,IAAI,EAAE3B,gBAAgB,CAAC,MAAD,CAvBA;AAwBtB4B,IAAAA,QAAQ,EAAE5B,gBAAgB,CAAC,UAAD,CAxBJ;AAyBtB6B,IAAAA,EAAE,EAAE7B,gBAAgB,CAAC,IAAD,CAzBE;AA0BtB8B,IAAAA,GAAG,EAAE9B,gBAAgB,CAAC,KAAD,CA1BC;AA2BtB+B,IAAAA,OAAO,EAAE/B,gBAAgB,CAAC,SAAD,CA3BH;AA4BtBgC,IAAAA,GAAG,EAAEhC,gBAAgB,CAAC,KAAD,CA5BC;AA6BtBiC,IAAAA,MAAM,EAAEjC,gBAAgB,CAAC,QAAD,CA7BF;AA8BtBkC,IAAAA,GAAG,EAAElC,gBAAgB,CAAC,KAAD,CA9BC;AA+BtBmC,IAAAA,EAAE,EAAEnC,gBAAgB,CAAC,IAAD,CA/BE;AAgCtBoC,IAAAA,EAAE,EAAEpC,gBAAgB,CAAC,IAAD,CAhCE;AAiCtBqC,IAAAA,EAAE,EAAErC,gBAAgB,CAAC,IAAD,CAjCE;AAkCtBsC,IAAAA,KAAK,EAAEtC,gBAAgB,CAAC,OAAD,CAlCD;AAmCtBuC,IAAAA,QAAQ,EAAEvC,gBAAgB,CAAC,UAAD,CAnCJ;AAoCtBwC,IAAAA,UAAU,EAAExC,gBAAgB,CAAC,YAAD,CApCN;AAqCtByC,IAAAA,MAAM,EAAEzC,gBAAgB,CAAC,QAAD,CArCF;AAsCtB0C,IAAAA,MAAM,EAAE1C,gBAAgB,CAAC,QAAD,CAtCF;AAuCtB2C,IAAAA,IAAI,EAAE3C,gBAAgB,CAAC,MAAD,CAvCA;AAwCtB4C,IAAAA,EAAE,EAAE5C,gBAAgB,CAAC,IAAD,CAxCE;AAyCtB6C,IAAAA,EAAE,EAAE7C,gBAAgB,CAAC,IAAD,CAzCE;AA0CtB8C,IAAAA,EAAE,EAAE9C,gBAAgB,CAAC,IAAD,CA1CE;AA2CtB+C,IAAAA,EAAE,EAAE/C,gBAAgB,CAAC,IAAD,CA3CE;AA4CtBgD,IAAAA,EAAE,EAAEhD,gBAAgB,CAAC,IAAD,CA5CE;AA6CtBiD,IAAAA,EAAE,EAAEjD,gBAAgB,CAAC,IAAD,CA7CE;AA8CtBkD,IAAAA,IAAI,EAAElD,gBAAgB,CAAC,MAAD,CA9CA;AA+CtBmD,IAAAA,MAAM,EAAEnD,gBAAgB,CAAC,QAAD,CA/CF;AAgDtBoD,IAAAA,MAAM,EAAEpD,gBAAgB,CAAC,QAAD,CAhDF;AAiDtBqD,IAAAA,EAAE,EAAErD,gBAAgB,CAAC,IAAD,CAjDE;AAkDtBsD,IAAAA,IAAI,EAAEtD,gBAAgB,CAAC,MAAD,CAlDA;AAmDtBuD,IAAAA,CAAC,EAAEvD,gBAAgB,CAAC,GAAD,CAnDG;AAoDtBwD,IAAAA,MAAM,EAAExD,gBAAgB,CAAC,QAAD,CApDF;AAqDtByD,IAAAA,GAAG,EAAEzD,gBAAgB,CAAC,KAAD,CArDC;AAsDtB0D,IAAAA,KAAK,EAAE1D,gBAAgB,CAAC,OAAD,CAtDD;AAuDtB2D,IAAAA,GAAG,EAAE3D,gBAAgB,CAAC,KAAD,CAvDC;AAwDtB4D,IAAAA,GAAG,EAAE5D,gBAAgB,CAAC,KAAD,CAxDC;AAyDtB6D,IAAAA,MAAM,EAAE7D,gBAAgB,CAAC,QAAD,CAzDF;AA0DtB8D,IAAAA,KAAK,EAAE9D,gBAAgB,CAAC,OAAD,CA1DD;AA2DtB+D,IAAAA,MAAM,EAAE/D,gBAAgB,CAAC,QAAD,CA3DF;AA4DtBgE,IAAAA,EAAE,EAAEhE,gBAAgB,CAAC,IAAD,CA5DE;AA6DtBiE,IAAAA,IAAI,EAAEjE,gBAAgB,CAAC,MAAD,CA7DA;AA8DtBkE,IAAAA,IAAI,EAAElE,gBAAgB,CAAC,MAAD,CA9DA;AA+DtBmE,IAAAA,GAAG,EAAEnE,gBAAgB,CAAC,KAAD,CA/DC;AAgEtBoE,IAAAA,IAAI,EAAEpE,gBAAgB,CAAC,MAAD,CAhEA;AAiEtBqE,IAAAA,IAAI,EAAErE,gBAAgB,CAAC,MAAD,CAjEA;AAkEtBsE,IAAAA,QAAQ,EAAEtE,gBAAgB,CAAC,UAAD,CAlEJ;AAmEtBuE,IAAAA,IAAI,EAAEvE,gBAAgB,CAAC,MAAD,CAnEA;AAoEtBwE,IAAAA,KAAK,EAAExE,gBAAgB,CAAC,OAAD,CApED;AAqEtByE,IAAAA,GAAG,EAAEzE,gBAAgB,CAAC,KAAD,CArEC;AAsEtB0E,IAAAA,QAAQ,EAAE1E,gBAAgB,CAAC,UAAD,CAtEJ;AAuEtB2E,IAAAA,MAAM,EAAE3E,gBAAgB,CAAC,QAAD,CAvEF;AAwEtB4E,IAAAA,EAAE,EAAE5E,gBAAgB,CAAC,IAAD,CAxEE;AAyEtB6E,IAAAA,QAAQ,EAAE7E,gBAAgB,CAAC,UAAD,CAzEJ;AA0EtB8E,IAAAA,MAAM,EAAE9E,gBAAgB,CAAC,QAAD,CA1EF;AA2EtB+E,IAAAA,MAAM,EAAE/E,gBAAgB,CAAC,QAAD,CA3EF;AA4EtBgF,IAAAA,CAAC,EAAEhF,gBAAgB,CAAC,GAAD,CA5EG;AA6EtBiF,IAAAA,KAAK,EAAEjF,gBAAgB,CAAC,OAAD,CA7ED;AA8EtBkF,IAAAA,OAAO,EAAElF,gBAAgB,CAAC,SAAD,CA9EH;AA+EtBmF,IAAAA,GAAG,EAAEnF,gBAAgB,CAAC,KAAD,CA/EC;AAgFtBoF,IAAAA,QAAQ,EAAEpF,gBAAgB,CAAC,UAAD,CAhFJ;AAiFtBqF,IAAAA,CAAC,EAAErF,gBAAgB,CAAC,GAAD,CAjFG;AAkFtBsF,IAAAA,EAAE,EAAEtF,gBAAgB,CAAC,IAAD,CAlFE;AAmFtBuF,IAAAA,EAAE,EAAEvF,gBAAgB,CAAC,IAAD,CAnFE;AAoFtBwF,IAAAA,IAAI,EAAExF,gBAAgB,CAAC,MAAD,CApFA;AAqFtByF,IAAAA,CAAC,EAAEzF,gBAAgB,CAAC,GAAD,CArFG;AAsFtB0F,IAAAA,IAAI,EAAE1F,gBAAgB,CAAC,MAAD,CAtFA;AAuFtB2F,IAAAA,MAAM,EAAE3F,gBAAgB,CAAC,QAAD,CAvFF;AAwFtB4F,IAAAA,OAAO,EAAE5F,gBAAgB,CAAC,SAAD,CAxFH;AAyFtB6F,IAAAA,MAAM,EAAE7F,gBAAgB,CAAC,QAAD,CAzFF;AA0FtB8F,IAAAA,KAAK,EAAE9F,gBAAgB,CAAC,OAAD,CA1FD;AA2FtB+F,IAAAA,MAAM,EAAE/F,gBAAgB,CAAC,QAAD,CA3FF;AA4FtBgG,IAAAA,IAAI,EAAEhG,gBAAgB,CAAC,MAAD,CA5FA;AA6FtBiG,IAAAA,MAAM,EAAEjG,gBAAgB,CAAC,QAAD,CA7FF;AA8FtBkG,IAAAA,KAAK,EAAElG,gBAAgB,CAAC,OAAD,CA9FD;AA+FtBmG,IAAAA,GAAG,EAAEnG,gBAAgB,CAAC,KAAD,CA/FC;AAgGtBoG,IAAAA,OAAO,EAAEpG,gBAAgB,CAAC,SAAD,CAhGH;AAiGtBqG,IAAAA,GAAG,EAAErG,gBAAgB,CAAC,KAAD,CAjGC;AAkGtBsG,IAAAA,KAAK,EAAEtG,gBAAgB,CAAC,OAAD,CAlGD;AAmGtBuG,IAAAA,KAAK,EAAEvG,gBAAgB,CAAC,OAAD,CAnGD;AAoGtBwG,IAAAA,EAAE,EAAExG,gBAAgB,CAAC,IAAD,CApGE;AAqGtByG,IAAAA,QAAQ,EAAEzG,gBAAgB,CAAC,UAAD,CArGJ;AAsGtB0G,IAAAA,KAAK,EAAE1G,gBAAgB,CAAC,OAAD,CAtGD;AAuGtB2G,IAAAA,EAAE,EAAE3G,gBAAgB,CAAC,IAAD,CAvGE;AAwGtB4G,IAAAA,KAAK,EAAE5G,gBAAgB,CAAC,OAAD,CAxGD;AAyGtB6G,IAAAA,IAAI,EAAE7G,gBAAgB,CAAC,MAAD,CAzGA;AA0GtB8G,IAAAA,KAAK,EAAE9G,gBAAgB,CAAC,OAAD,CA1GD;AA2GtB+G,IAAAA,EAAE,EAAE/G,gBAAgB,CAAC,IAAD,CA3GE;AA4GtBgH,IAAAA,KAAK,EAAEhH,gBAAgB,CAAC,OAAD,CA5GD;AA6GtBiH,IAAAA,CAAC,EAAEjH,gBAAgB,CAAC,GAAD,CA7GG;AA8GtBkH,IAAAA,EAAE,EAAElH,gBAAgB,CAAC,IAAD,CA9GE;AA+GtBmH,IAAAA,GAAG,EAAEnH,gBAAgB,CAAC,KAAD,CA/GC;AAgHtBoH,IAAAA,KAAK,EAAEpH,gBAAgB,CAAC,OAAD,CAhHD;AAiHtBqH,IAAAA,GAAG,EAAErH,gBAAgB,CAAC,KAAD,CAjHC;AAmHtB;AACAsH,IAAAA,MAAM,EAAEtH,gBAAgB,CAAC,QAAD,CApHF;AAqHtBuH,IAAAA,QAAQ,EAAEvH,gBAAgB,CAAC,UAAD,CArHJ;AAsHtBwH,IAAAA,IAAI,EAAExH,gBAAgB,CAAC,MAAD,CAtHA;AAuHtByH,IAAAA,OAAO,EAAEzH,gBAAgB,CAAC,SAAD,CAvHH;AAwHtBP,IAAAA,CAAC,EAAEO,gBAAgB,CAAC,GAAD,CAxHG;AAyHtB0H,IAAAA,KAAK,EAAE1H,gBAAgB,CAAC,OAAD,CAzHD;AA0HtB2H,IAAAA,IAAI,EAAE3H,gBAAgB,CAAC,MAAD,CA1HA;AA2HtB4H,IAAAA,cAAc,EAAE5H,gBAAgB,CAAC,gBAAD,CA3HV;AA4HtB6H,IAAAA,IAAI,EAAE7H,gBAAgB,CAAC,MAAD,CA5HA;AA6HtB8H,IAAAA,IAAI,EAAE9H,gBAAgB,CAAC,MAAD,CA7HA;AA8HtB+H,IAAAA,OAAO,EAAE/H,gBAAgB,CAAC,SAAD,CA9HH;AA+HtBgI,IAAAA,OAAO,EAAEhI,gBAAgB,CAAC,SAAD,CA/HH;AAgItBiI,IAAAA,QAAQ,EAAEjI,gBAAgB,CAAC,UAAD,CAhIJ;AAiItBkI,IAAAA,cAAc,EAAElI,gBAAgB,CAAC,gBAAD,CAjIV;AAkItBmI,IAAAA,IAAI,EAAEnI,gBAAgB,CAAC,MAAD,CAlIA;AAmItBoI,IAAAA,IAAI,EAAEpI,gBAAgB,CAAC,MAAD,CAnIA;AAoItBqI,IAAAA,GAAG,EAAErI,gBAAgB,CAAC,KAAD,CApIC;AAqItBsI,IAAAA,IAAI,EAAEtI,gBAAgB,CAAC,MAAD,CArIA;AAsItBuI,IAAAA,KAAK,EAAEvI,gBAAgB,CAAC,OAAD;AAtID,GAAxB,CAjBiB,CA0JjB;AACA;AACA;AACA;AACA;;AACA,SAAOD,iBAAP;AACD,CAxLD","sourcesContent":["'use strict';\r\n\r\n/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n(function(f) {\r\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\r\n    module.exports = f(require('react'));\r\n    /* global define */\r\n  } else if (typeof define === 'function' && define.amd) {\r\n    define(['react'], f);\r\n  } else {\r\n    var g;\r\n    if (typeof window !== 'undefined') {\r\n      g = window;\r\n    } else if (typeof global !== 'undefined') {\r\n      g = global;\r\n    } else if (typeof self !== 'undefined') {\r\n      g = self;\r\n    } else {\r\n      g = this;\r\n    }\r\n\r\n    if (typeof g.React === 'undefined') {\r\n      throw Error('React module should be required before ReactDOMFactories');\r\n    }\r\n\r\n    g.ReactDOMFactories = f(g.React);\r\n  }\r\n})(function(React) {\r\n  /**\r\n   * Create a factory that creates HTML tag elements.\r\n   */\r\n  function createDOMFactory(type) {\r\n    var factory = React.createElement.bind(null, type);\r\n    // Expose the type on the factory and the prototype so that it can be\r\n    // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n    // This should not be named `constructor` since this may not be the function\r\n    // that created the element, and it may not even be a constructor.\r\n    factory.type = type;\r\n    return factory;\r\n  };\r\n\r\n  /**\r\n   * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\r\n   */\r\n  var ReactDOMFactories = {\r\n    a: createDOMFactory('a'),\r\n    abbr: createDOMFactory('abbr'),\r\n    address: createDOMFactory('address'),\r\n    area: createDOMFactory('area'),\r\n    article: createDOMFactory('article'),\r\n    aside: createDOMFactory('aside'),\r\n    audio: createDOMFactory('audio'),\r\n    b: createDOMFactory('b'),\r\n    base: createDOMFactory('base'),\r\n    bdi: createDOMFactory('bdi'),\r\n    bdo: createDOMFactory('bdo'),\r\n    big: createDOMFactory('big'),\r\n    blockquote: createDOMFactory('blockquote'),\r\n    body: createDOMFactory('body'),\r\n    br: createDOMFactory('br'),\r\n    button: createDOMFactory('button'),\r\n    canvas: createDOMFactory('canvas'),\r\n    caption: createDOMFactory('caption'),\r\n    cite: createDOMFactory('cite'),\r\n    code: createDOMFactory('code'),\r\n    col: createDOMFactory('col'),\r\n    colgroup: createDOMFactory('colgroup'),\r\n    data: createDOMFactory('data'),\r\n    datalist: createDOMFactory('datalist'),\r\n    dd: createDOMFactory('dd'),\r\n    del: createDOMFactory('del'),\r\n    details: createDOMFactory('details'),\r\n    dfn: createDOMFactory('dfn'),\r\n    dialog: createDOMFactory('dialog'),\r\n    div: createDOMFactory('div'),\r\n    dl: createDOMFactory('dl'),\r\n    dt: createDOMFactory('dt'),\r\n    em: createDOMFactory('em'),\r\n    embed: createDOMFactory('embed'),\r\n    fieldset: createDOMFactory('fieldset'),\r\n    figcaption: createDOMFactory('figcaption'),\r\n    figure: createDOMFactory('figure'),\r\n    footer: createDOMFactory('footer'),\r\n    form: createDOMFactory('form'),\r\n    h1: createDOMFactory('h1'),\r\n    h2: createDOMFactory('h2'),\r\n    h3: createDOMFactory('h3'),\r\n    h4: createDOMFactory('h4'),\r\n    h5: createDOMFactory('h5'),\r\n    h6: createDOMFactory('h6'),\r\n    head: createDOMFactory('head'),\r\n    header: createDOMFactory('header'),\r\n    hgroup: createDOMFactory('hgroup'),\r\n    hr: createDOMFactory('hr'),\r\n    html: createDOMFactory('html'),\r\n    i: createDOMFactory('i'),\r\n    iframe: createDOMFactory('iframe'),\r\n    img: createDOMFactory('img'),\r\n    input: createDOMFactory('input'),\r\n    ins: createDOMFactory('ins'),\r\n    kbd: createDOMFactory('kbd'),\r\n    keygen: createDOMFactory('keygen'),\r\n    label: createDOMFactory('label'),\r\n    legend: createDOMFactory('legend'),\r\n    li: createDOMFactory('li'),\r\n    link: createDOMFactory('link'),\r\n    main: createDOMFactory('main'),\r\n    map: createDOMFactory('map'),\r\n    mark: createDOMFactory('mark'),\r\n    menu: createDOMFactory('menu'),\r\n    menuitem: createDOMFactory('menuitem'),\r\n    meta: createDOMFactory('meta'),\r\n    meter: createDOMFactory('meter'),\r\n    nav: createDOMFactory('nav'),\r\n    noscript: createDOMFactory('noscript'),\r\n    object: createDOMFactory('object'),\r\n    ol: createDOMFactory('ol'),\r\n    optgroup: createDOMFactory('optgroup'),\r\n    option: createDOMFactory('option'),\r\n    output: createDOMFactory('output'),\r\n    p: createDOMFactory('p'),\r\n    param: createDOMFactory('param'),\r\n    picture: createDOMFactory('picture'),\r\n    pre: createDOMFactory('pre'),\r\n    progress: createDOMFactory('progress'),\r\n    q: createDOMFactory('q'),\r\n    rp: createDOMFactory('rp'),\r\n    rt: createDOMFactory('rt'),\r\n    ruby: createDOMFactory('ruby'),\r\n    s: createDOMFactory('s'),\r\n    samp: createDOMFactory('samp'),\r\n    script: createDOMFactory('script'),\r\n    section: createDOMFactory('section'),\r\n    select: createDOMFactory('select'),\r\n    small: createDOMFactory('small'),\r\n    source: createDOMFactory('source'),\r\n    span: createDOMFactory('span'),\r\n    strong: createDOMFactory('strong'),\r\n    style: createDOMFactory('style'),\r\n    sub: createDOMFactory('sub'),\r\n    summary: createDOMFactory('summary'),\r\n    sup: createDOMFactory('sup'),\r\n    table: createDOMFactory('table'),\r\n    tbody: createDOMFactory('tbody'),\r\n    td: createDOMFactory('td'),\r\n    textarea: createDOMFactory('textarea'),\r\n    tfoot: createDOMFactory('tfoot'),\r\n    th: createDOMFactory('th'),\r\n    thead: createDOMFactory('thead'),\r\n    time: createDOMFactory('time'),\r\n    title: createDOMFactory('title'),\r\n    tr: createDOMFactory('tr'),\r\n    track: createDOMFactory('track'),\r\n    u: createDOMFactory('u'),\r\n    ul: createDOMFactory('ul'),\r\n    var: createDOMFactory('var'),\r\n    video: createDOMFactory('video'),\r\n    wbr: createDOMFactory('wbr'),\r\n\r\n    // SVG\r\n    circle: createDOMFactory('circle'),\r\n    clipPath: createDOMFactory('clipPath'),\r\n    defs: createDOMFactory('defs'),\r\n    ellipse: createDOMFactory('ellipse'),\r\n    g: createDOMFactory('g'),\r\n    image: createDOMFactory('image'),\r\n    line: createDOMFactory('line'),\r\n    linearGradient: createDOMFactory('linearGradient'),\r\n    mask: createDOMFactory('mask'),\r\n    path: createDOMFactory('path'),\r\n    pattern: createDOMFactory('pattern'),\r\n    polygon: createDOMFactory('polygon'),\r\n    polyline: createDOMFactory('polyline'),\r\n    radialGradient: createDOMFactory('radialGradient'),\r\n    rect: createDOMFactory('rect'),\r\n    stop: createDOMFactory('stop'),\r\n    svg: createDOMFactory('svg'),\r\n    text: createDOMFactory('text'),\r\n    tspan: createDOMFactory('tspan'),\r\n  };\r\n\r\n  // due to wrapper and conditionals at the top, this will either become\r\n  // `module.exports ReactDOMFactories` if that is available,\r\n  // otherwise it will be defined via `define(['react'], ReactDOMFactories)`\r\n  // if that is available,\r\n  // otherwise it will be defined as global variable.\r\n  return ReactDOMFactories;\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"script"}