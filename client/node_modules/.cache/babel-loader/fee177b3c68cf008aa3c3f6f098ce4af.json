{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\HKII_2020_2021\\\\Tieu_Luan_CN\\\\code\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport Helmet from 'react-helmet';\nimport { Row, Col } from 'antd';\nimport './css/form.css';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loading from '../utils/loading/Loading';\nimport { GlobalState } from '../../../GlobalState';\nimport { useHistory, useParams } from 'react-router-dom';\nimport quillEmoji from \"react-quill-emoji\";\nimport \"react-quill-emoji/dist/quill-emoji.css\";\nimport ImageResize from \"quill-image-resize-module-react\";\nimport ImageCompress from 'quill-image-compress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: '',\n  description: '',\n  _id: ''\n};\n\nfunction CreatePost() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const token = useSelector(state => state.token);\n  const auth = useSelector(state => state.auth);\n  const {\n    user,\n    isAdmin\n  } = auth;\n  const [myPost, setMyPost] = useState(initialState);\n  const [slug, setSlug] = useState('');\n  const [slugButton, setSlugButton] = useState(false);\n  const [images, setImages] = useState(false);\n  const [currentImage, setCurrentImage] = useState('Choose image');\n  const [loading, setLoading] = useState(false);\n  const [body, setBody] = useState('');\n  const [myPosts] = state.myPostsAPI.myPosts;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.myPostsAPI.callback;\n  const history = useHistory();\n  const param = useParams();\n  let quillRef = useRef();\n  Quill.register({\n    \"formats/emoji\": quillEmoji.EmojiBlot,\n    \"modules/emoji-toolbar\": quillEmoji.ToolbarEmoji,\n    \"modules/emoji-textarea\": quillEmoji.TextAreaEmoji,\n    \"modules/emoji-shortname\": quillEmoji.ShortNameEmoji\n  }, true);\n  Quill.register(\"modules/ImageResize\", ImageResize);\n  Quill.register(\"modules/imageCompress\", ImageCompress);\n  useEffect(() => {\n    console.log('quillRef.current', quillRef.current);\n\n    if (param.id) {\n      console.log('param.id');\n      console.log(param.id);\n      setOnEdit(true);\n      myPosts.forEach(myPost => {\n        if (myPost._id === param.id) {\n          setMyPost(myPost);\n          setImages(myPost.images);\n          setSlug(myPost.slug);\n          setBody(myPost.body);\n        }\n      });\n    } else {\n      console.log('param.id1');\n      console.log(param.id);\n      setOnEdit(false);\n      setMyPost(initialState);\n      setImages(false);\n    }\n  }, [param.id, myPosts, quillRef]);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMyPost({ ...myPost,\n      [name]: value\n    });\n    const createSlug = e.target.value.trim().split(' ').join('-').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    setSlug(createSlug);\n  };\n\n  const slugHandle = e => {\n    setSlugButton(true);\n    setSlug(e.target.value);\n  };\n\n  const handleURL = e => {\n    e.preventDefault();\n    setSlug(slug.trim().split(' ').join('-'));\n  };\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      console.log(e.target.files[0].name);\n      setCurrentImage(e.target.files[0].name);\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 2 * 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload_post', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {}\n  };\n\n  const handleDestroy = async () => {\n    try {\n      setLoading(true);\n      await axios.post('/api/destroy_admin', {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setCurrentImage('Choose image');\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleBody = async e => {\n    console.log('e');\n    console.log(e);\n    setBody(e);\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n\n  const handleDescription = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMyPost({ ...myPost,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      console.log(images);\n      if (!images) return alert(\"No Image Upload\");\n      if (!slug || !body) return alert(\"Please fill in all fields.\");\n\n      if (onEdit) {\n        await axios.put(`/api/admin/posts/${myPost._id}`, { ...myPost,\n          images,\n          slug,\n          body\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } else {\n        await axios.post('/api/admin/posts/new', { ...myPost,\n          images,\n          slug,\n          body\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      }\n\n      setCallback(!callback);\n      history.push(\"/admin/all_post\");\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const imageHandler = React.useCallback(() => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    console.log(input);\n    input.click();\n\n    input.onchange = async () => {\n      const file = input.files[0];\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', 'wwosfrvh');\n      const res = await axios.post('https://api.cloudinary.com/v1_1/lucy2619288/image/upload', formData);\n      console.log('test upload: ');\n      console.log('test upload: quillRef.current.getEditor()', quillRef.current.getEditor());\n      const link = res.data.url; // this part the image is inserted\n      // by 'image' option below, you just have to put src(link) of img here. \n\n      quillRef.current.getEditor().insertEmbed(quillRef.current.getEditor().getSelection().index, 'image', link);\n    };\n  }, [quillRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: onEdit ? \"Update Post\" : \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [48, 16],\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 24,\n            md: 24,\n            lg: 24,\n            xl: 24,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"title\",\n                  children: \"Post Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"group-control\",\n                  type: \"text\",\n                  name: \"title\",\n                  id: \"title\",\n                  placeholder: \"Post title...\",\n                  onChange: handleChangeInput,\n                  value: myPost.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"slug\",\n                  children: \"Post URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"slug\",\n                  id: \"slug\",\n                  className: \"group-control\",\n                  placeholder: \"Post URL...\",\n                  onChange: slugHandle,\n                  value: slug\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: slugButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn-form btn-default\",\n                  onClick: handleURL,\n                  children: \"Update Slug\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 45\n                }, this) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"file__label\",\n                  htmlFor: \"file\",\n                  children: loading ? currentImage : currentImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"file\",\n                  id: \"file\",\n                  onChange: handleUpload\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"body\",\n                  children: \"Post body\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                  ref: quillRef,\n                  theme: \"snow\",\n                  id: \"body\",\n                  placeholder: \"Post body...\",\n                  value: body,\n                  onChange: handleBody,\n                  formats: [\"header\", \"font\", \"size\", \"align\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"color\", \"background\", \"link\", \"image\", \"video\"],\n                  modules: {\n                    toolbar: {\n                      container: [[{\n                        header: '1'\n                      }, {\n                        header: '2'\n                      }, {\n                        header: [3, 4, 5, 6]\n                      }, {\n                        font: []\n                      }], [{\n                        size: []\n                      }], [{\n                        color: []\n                      }, {\n                        background: []\n                      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n                        align: []\n                      }], [{\n                        list: 'ordered'\n                      }, {\n                        list: 'bullet'\n                      }], ['link', 'image', 'video'], [\"emoji\"], ['clean'], ['code-block']],\n                      handlers: {\n                        image: imageHandler\n                      }\n                    },\n                    \"emoji-toolbar\": true,\n                    \"emoji-textarea\": true,\n                    \"emoji-shortname\": true,\n                    ImageResize: {\n                      parchment: Quill.import('parchment'),\n                      modules: ['Resize', 'DisplaySize', 'Toolbar'],\n                      handleStyles: {\n                        backgroundColor: 'black',\n                        border: 'none',\n                        color: 'white' // other camelCase styles for size display\n\n                      },\n                      displayStyles: {\n                        backgroundColor: 'black',\n                        border: 'none',\n                        color: 'white' // other camelCase styles for size display\n\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  children: \"Meta Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"description\",\n                  id: \"description\",\n                  cols: \"30\",\n                  rows: \"10\",\n                  className: \"group-control\",\n                  placeholder: \"meta description...\",\n                  maxLength: \"150\",\n                  onChange: handleDescription,\n                  defaultValue: myPost.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"length\",\n                  children: myPost.description ? myPost.description.length : '0'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"imagePreview\",\n                  children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"file_load\",\n                    children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 75\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 55\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"img_post\",\n                    style: styleUpload,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: images ? images.url : '',\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"cancel\",\n                      onClick: handleDestroy,\n                      children: \"X\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: onEdit ? \"Update Post\" : \"Create Post\",\n                  className: \"btn-form\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 1\n  }, this);\n}\n\n_s(CreatePost, \"1M4mR3AJdADpA1lqM/Id+q838mw=\", false, function () {\n  return [useSelector, useSelector, useHistory, useParams];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/Documents/HKII_2020_2021/Tieu_Luan_CN/code/tlcn/client/src/components/mainpages/admin/CreatePost.js"],"names":["React","useState","useContext","useEffect","useRef","Helmet","Row","Col","ReactQuill","Quill","axios","useDispatch","useSelector","Loading","GlobalState","useHistory","useParams","quillEmoji","ImageResize","ImageCompress","initialState","title","description","_id","CreatePost","state","token","auth","user","isAdmin","myPost","setMyPost","slug","setSlug","slugButton","setSlugButton","images","setImages","currentImage","setCurrentImage","loading","setLoading","body","setBody","myPosts","myPostsAPI","onEdit","setOnEdit","callback","setCallback","history","param","quillRef","register","EmojiBlot","ToolbarEmoji","TextAreaEmoji","ShortNameEmoji","console","log","current","id","forEach","handleChangeInput","e","name","value","target","createSlug","trim","split","join","normalize","replace","slugHandle","handleURL","preventDefault","handleUpload","files","file","alert","size","type","formData","FormData","append","res","post","headers","Authorization","data","err","handleDestroy","public_id","response","msg","handleBody","styleUpload","display","handleDescription","handleSubmit","put","push","imageHandler","useCallback","input","document","createElement","setAttribute","click","onchange","getEditor","link","url","insertEmbed","getSelection","index","toolbar","container","header","font","color","background","align","list","handlers","image","parchment","import","modules","handleStyles","backgroundColor","border","displayStyles","length"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect,useRef} from 'react'\r\nimport Helmet from 'react-helmet';\r\nimport { Row, Col } from 'antd';\r\nimport './css/form.css'\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from 'axios'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport quillEmoji from \"react-quill-emoji\";\r\nimport \"react-quill-emoji/dist/quill-emoji.css\";\r\nimport ImageResize from \"quill-image-resize-module-react\";\r\nimport ImageCompress from 'quill-image-compress';\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    _id: ''\r\n}\r\n\r\nfunction CreatePost() {\r\n    const state = useContext(GlobalState)\r\n    const token = useSelector(state => state.token)\r\n    const auth = useSelector(state => state.auth)\r\n    const {user, isAdmin} = auth\r\n    const [myPost, setMyPost] = useState(initialState)\r\n\r\n    const [slug, setSlug] = useState('');\r\n    const [slugButton, setSlugButton] = useState(false);\r\n\r\n    const [images, setImages] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState('Choose image');\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [body, setBody] = useState('');\r\n\r\n    const [myPosts] = state.myPostsAPI.myPosts\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [callback, setCallback] = state.myPostsAPI.callback\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n\r\n    let quillRef = useRef()\r\n\r\n    Quill.register(\r\n    {\r\n      \"formats/emoji\": quillEmoji.EmojiBlot,\r\n      \"modules/emoji-toolbar\": quillEmoji.ToolbarEmoji,\r\n      \"modules/emoji-textarea\": quillEmoji.TextAreaEmoji,\r\n      \"modules/emoji-shortname\": quillEmoji.ShortNameEmoji\r\n    },\r\n    true\r\n  );\r\n\r\n  Quill.register(\"modules/ImageResize\", ImageResize);\r\n\r\n  Quill.register(\"modules/imageCompress\", ImageCompress);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('quillRef.current',quillRef.current);\r\n\r\n        if(param.id){\r\n            console.log('param.id')\r\n            console.log(param.id)\r\n            setOnEdit(true)\r\n            myPosts.forEach(myPost => {\r\n                if(myPost._id === param.id) {\r\n                    setMyPost(myPost)\r\n                    setImages(myPost.images)\r\n                    setSlug(myPost.slug)\r\n                    setBody(myPost.body)\r\n                }\r\n            })\r\n        }else{\r\n            console.log('param.id1')\r\n            console.log(param.id)\r\n            setOnEdit(false)\r\n            setMyPost(initialState)\r\n            setImages(false)\r\n        }\r\n    }, [param.id, myPosts,quillRef])\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setMyPost({...myPost, [name]:value})\r\n\r\n        const createSlug = e.target.value.trim().split(' ').join('-').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n\t\tsetSlug(createSlug);\r\n    }\r\n\r\n    const slugHandle = (e) => {\r\n        setSlugButton(true);\r\n\t\tsetSlug(e.target.value);\r\n\t};\r\n\r\n    const handleURL = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetSlug(slug.trim().split(' ').join('-'));\r\n\t};\r\n\r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            console.log(e.target.files[0].name)\r\n            setCurrentImage(e.target.files[0].name)\r\n\r\n            const file = e.target.files[0]\r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 2* 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_post', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n\r\n            setLoading(false)\r\n            setImages(res.data)\r\n        } catch (err) {\r\n            \r\n        }\r\n    };\r\n\r\n    const handleDestroy = async () => {\r\n        try {\r\n            setLoading(true)\r\n            await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setCurrentImage('Choose image')\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleBody = async e =>{\r\n        console.log('e')\r\n        console.log(e)\r\n        setBody(e)\r\n\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n\r\n    const handleDescription = (e) => {\r\n        const {name, value} = e.target\r\n        setMyPost({...myPost, [name]:value})\r\n\t};\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            console.log(images)\r\n            if(!images) return alert(\"No Image Upload\")\r\n            if(!slug || !body) return alert(\"Please fill in all fields.\")\r\n\r\n            if(onEdit){\r\n                 await axios.put(`/api/admin/posts/${myPost._id}`, {...myPost, images ,slug , body}, {\r\n                    headers: {Authorization: token}\r\n                }) \r\n            }else{\r\n                await axios.post('/api/admin/posts/new', {...myPost, images ,slug , body}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }\r\n            setCallback(!callback)\r\n            history.push(\"/admin/all_post\")\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const imageHandler = React.useCallback(() => {\r\n        const input = document.createElement('input')\r\n        input.setAttribute('type', 'file')\r\n        input.setAttribute('accept', 'image/*')\r\n        console.log(input)\r\n        input.click()\r\n        input.onchange = async () => {\r\n            const file = input.files[0]\r\n            const formData = new FormData()\r\n            formData.append('file', file)\r\n            formData.append('upload_preset', 'wwosfrvh')\r\n            const res = await axios.post('https://api.cloudinary.com/v1_1/lucy2619288/image/upload', formData)\r\n            console.log('test upload: ')\r\n            console.log('test upload: quillRef.current.getEditor()',quillRef.current.getEditor())\r\n\r\n            const link = res.data.url\r\n    \r\n            // this part the image is inserted\r\n            // by 'image' option below, you just have to put src(link) of img here. \r\n            quillRef.current.getEditor().insertEmbed(quillRef.current.getEditor().getSelection().index, 'image', link)\r\n        }\r\n      }, [quillRef]);\r\n      \r\n    return (\r\n<div className=\"create\">\r\n{/*         <Helmet>\r\n\t\t\t<title>{onEdit? \"Update Post\" : \"Create Post\"}</title>\r\n\t\t\t<meta name='description' content='Create a new post' />\r\n\t\t</Helmet>\r\n */}\r\n        <div className=\"create-product\">\r\n        <h2>{onEdit? \"Update Post\" : \"Create Post\"}</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Row gutter={[48, 16]}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                               <div className ='card'>\r\n                                    <div className=\"group\">\r\n                                        <label htmlFor=\"title\">Post Title</label>\r\n                                        <input className=\"group-control\" type=\"text\" name=\"title\" id=\"title\" placeholder='Post title...' onChange={handleChangeInput} value ={myPost.title}/>\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                        <label htmlFor='slug'>Post URL</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            name='slug'\r\n                                            id='slug'\r\n                                            className='group-control'\r\n                                            placeholder='Post URL...'\r\n                                            onChange={slugHandle}\r\n                                            value={slug}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                        {slugButton ? (\r\n                                            <button class='btn-form btn-default' onClick={handleURL}>\r\n                                                Update Slug\r\n                                            </button>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"group\">\r\n                                        <label className='file__label' htmlFor=\"file\">{loading?currentImage:currentImage}</label>\r\n                                        <input type=\"file\" name=\"file\" id=\"file\" onChange={handleUpload}/>\r\n                                    </div>\r\n                                    \r\n                                    <div className='group'>\r\n                                                <label htmlFor='body'>Post body</label>\r\n                                                <ReactQuill\r\n                                                    ref={quillRef}\r\n                                                    theme='snow'\r\n                                                    id='body'\r\n                                                    placeholder='Post body...'\r\n                                                    value={body}\r\n                                                    onChange={handleBody}\r\n                                                    formats={[\r\n                                                        \"header\",\r\n                                                        \"font\",\r\n                                                        \"size\",\r\n                                                        \"align\",\r\n                                                        \"bold\",\r\n                                                        \"italic\",\r\n                                                        \"underline\",\r\n                                                        \"strike\",\r\n                                                        \"blockquote\",\r\n                                                        \"list\",\r\n                                                        \"bullet\",\r\n                                                        \"indent\",\r\n                                                        \"color\",\r\n                                                        \"background\",\r\n                                                        \"link\",\r\n                                                        \"image\",\r\n                                                        \"video\"\r\n                                                    ]}\r\n                                                    modules={{\r\n                                                    toolbar: {\r\n                                                        container: [\r\n                                                            [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\r\n                                                            [{ size: [] }],\r\n                                                            [{ color: [] }, { background: [] }],\r\n                                                            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                                                            [{ align: [] }],\r\n                                                            [{ list: 'ordered' }, { list: 'bullet' }],\r\n                                                            ['link', 'image', 'video'],\r\n                                                            [\"emoji\"],\r\n                                                            ['clean'],\r\n                                                            ['code-block']\r\n                                                        ],\r\n                                                        handlers: {\r\n                                                            image : imageHandler\r\n                                                        },\r\n                                                    },\r\n                                                    \"emoji-toolbar\": true,\r\n                                                    \"emoji-textarea\": true,\r\n                                                    \"emoji-shortname\": true,\r\n                                                    ImageResize:{\r\n                                                            parchment: Quill.import('parchment'),\r\n                                                            modules: [ 'Resize', 'DisplaySize', 'Toolbar' ],\r\n                                                            handleStyles: {\r\n                                                                backgroundColor: 'black',\r\n                                                                border: 'none',\r\n                                                                color: 'white'\r\n                                                                // other camelCase styles for size display\r\n                                                            },\r\n                                                            displayStyles: {\r\n                                                                backgroundColor: 'black',\r\n                                                                border: 'none',\r\n                                                                color: 'white'\r\n                                                                // other camelCase styles for size display\r\n                                                            }\r\n                                                    }\r\n                                                }}\r\n                                                />\r\n                                    </div>\r\n                                    \r\n                                    <div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\t\t\trows='10'\r\n\t\t\t\t\t\t\t\t\t\tclassName='group-control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\r\n\t\t\t\t\t\t\t\t\t\tmaxLength='150'\r\n                                        onChange={handleDescription}\r\n                                        defaultValue={myPost.description}>\r\n                                        </textarea>\r\n\t\t\t\t\t\t\t\t\t<p className='length'>\r\n                                        {myPost.description?myPost.description.length:'0'}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                                                    <div className='group'>\r\n                                        <div className='imagePreview'>\r\n                                        {\r\n                                            loading ? <div id=\"file_load\"><Loading /></div>\r\n\r\n                                            :<div id=\"img_post\" style={styleUpload}>\r\n                                                <img src={images ? images.url : ''} alt=\"\"/>\r\n                                                <span className=\"cancel\" onClick={handleDestroy}>X</span>\r\n                                            </div>\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='group'>\r\n                                                <input\r\n                                                    type='submit'\r\n                                                    value={onEdit? \"Update Post\" : \"Create Post\"}\r\n                                                    className='btn-form'\r\n                                                />\r\n                                    </div>\r\n                               </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}