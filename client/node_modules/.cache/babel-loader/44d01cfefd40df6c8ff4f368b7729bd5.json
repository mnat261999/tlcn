{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction PetsAPI() {\n  _s();\n\n  const [pets, setPets] = useState([]);\n  const [petsUi, setPetsUi] = useState([]);\n  const [pets_slider, setPetsSlider] = useState([]);\n  const [callback, setCallback] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [petsCount, setPetsCount] = useState('');\n  const [resPerPage, setResPerPage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [name_pet, setNamePet] = useState('');\n  const [numPetByStatus, setNumPetByStatus] = useState([]);\n  const auth = useSelector(state => state.auth);\n  const {\n    isAdmin\n  } = auth;\n  useEffect(() => {\n    if (isAdmin === true) {\n      const getPets = async () => {\n        const res = await axios.get(`/api/pets?page=${currentPage}`);\n        console.log('test pets');\n        console.log(res.data.pets);\n        setPets(res.data.pets);\n        setPetsCount(res.data.petsCount);\n        setResPerPage(res.data.resPerPage);\n      };\n\n      getPets();\n    } else {\n      const getPets = async () => {\n        const res = await axios.get(`/api/pets?page=${currentPage}`);\n        console.log('test pets');\n        console.log(res.data.pets);\n        setPets(res.data.pets);\n        setPetsCount(res.data.petsCount);\n        setResPerPage(res.data.resPerPage);\n      };\n\n      getPets();\n    }\n\n    const getPetsSlider = async () => {\n      const res = await axios.get('/api/pets/slider');\n      console.log('pet slider', res.data.pets);\n      setPetsSlider(res.data.pets);\n    };\n\n    getPetsSlider();\n\n    const getNumPetByStatus = async () => {\n      const res = await axios.get('/api/pets/num_pets');\n      console.log('setNumPetByStatus', res);\n      setNumPetByStatus(res.data.result);\n    };\n\n    getNumPetByStatus();\n  }, [callback, currentPage, isAdmin]);\n  return {\n    pets: [pets, setPets],\n    callback: [callback, setCallback],\n    currentPage: [currentPage, setCurrentPage],\n    petsCount: [petsCount, setPetsCount],\n    resPerPage: [resPerPage, setResPerPage],\n    loading: [loading, setLoading],\n    name_pet: [name_pet, setNamePet],\n    pets_slider: [pets_slider, setPetsSlider],\n    numPetByStatus: [numPetByStatus, setNumPetByStatus]\n  };\n}\n\n_s(PetsAPI, \"BrUAYjfjhOPS6+twpGBecdpwrKo=\", false, function () {\n  return [useSelector];\n});\n\n_c = PetsAPI;\nexport default PetsAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetsAPI\");","map":{"version":3,"sources":["D:/Documents/HKII_2020_2021/Tieu_Luan_CN/code/tlcn/client/src/api/PetsAPI.js"],"names":["useState","useEffect","axios","useSelector","PetsAPI","pets","setPets","petsUi","setPetsUi","pets_slider","setPetsSlider","callback","setCallback","currentPage","setCurrentPage","petsCount","setPetsCount","resPerPage","setResPerPage","loading","setLoading","name_pet","setNamePet","numPetByStatus","setNumPetByStatus","auth","state","isAdmin","getPets","res","get","console","log","data","getPetsSlider","getNumPetByStatus","result"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction PetsAPI() {\r\n    const [pets, setPets] = useState([])\r\n\r\n    const [petsUi, setPetsUi] = useState([])\r\n\r\n    const [pets_slider, setPetsSlider] = useState([])\r\n\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    const [currentPage, setCurrentPage]= useState(1)\r\n    \r\n    const [petsCount, setPetsCount] = useState('')\r\n\r\n    const [resPerPage, setResPerPage] = useState('')\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [name_pet, setNamePet] = useState('')\r\n\r\n    const [numPetByStatus, setNumPetByStatus] = useState([])\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const {isAdmin} = auth;\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(isAdmin === true)\r\n        {\r\n            const getPets = async () => {\r\n                const res = await axios.get(`/api/pets?page=${currentPage}`)\r\n                console.log('test pets')\r\n                console.log(res.data.pets)\r\n                setPets(res.data.pets)\r\n                setPetsCount(res.data.petsCount)\r\n                setResPerPage(res.data.resPerPage)\r\n            }\r\n                getPets()\r\n        }else{\r\n            const getPets = async () => {\r\n                const res = await axios.get(`/api/pets?page=${currentPage}`)\r\n                console.log('test pets')\r\n                console.log(res.data.pets)\r\n                setPets(res.data.pets)\r\n                setPetsCount(res.data.petsCount)\r\n                setResPerPage(res.data.resPerPage)\r\n            }\r\n                getPets()\r\n        }\r\n\r\n        const getPetsSlider = async () =>{\r\n            const res = await axios.get('/api/pets/slider')\r\n            console.log('pet slider',res.data.pets)\r\n            setPetsSlider(res.data.pets)\r\n        }\r\n\r\n        getPetsSlider()\r\n\r\n        const getNumPetByStatus= async () =>{\r\n            const res = await axios.get('/api/pets/num_pets')\r\n            console.log('setNumPetByStatus',res)\r\n            setNumPetByStatus(res.data.result)\r\n        }\r\n\r\n        getNumPetByStatus()\r\n\r\n\r\n    },[callback,currentPage,isAdmin])\r\n\r\n\r\n    return {\r\n        pets: [pets, setPets],\r\n        callback: [callback, setCallback],\r\n        currentPage:[currentPage, setCurrentPage],\r\n        petsCount:[petsCount, setPetsCount],\r\n        resPerPage:[resPerPage, setResPerPage],\r\n        loading:[loading, setLoading],\r\n        name_pet:[name_pet, setNamePet],\r\n        pets_slider: [pets_slider, setPetsSlider],\r\n        numPetByStatus:[numPetByStatus, setNumPetByStatus] \r\n    }\r\n}\r\n\r\nexport default PetsAPI;"]},"metadata":{},"sourceType":"module"}