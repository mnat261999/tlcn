{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport './css/alluser.css';\nimport './css/category.css';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'antd';\nimport { showSuccessMsg, showErrMsg } from '../utils/notification/Notification';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Categories() {\n  _s();\n\n  const state = useContext(GlobalState);\n  console.log(state);\n  const [categories] = state.categoriesAPI.categories;\n  const [category, setCategory] = useState('');\n  const token = useSelector(state => state.token);\n  const [callback, setCallback] = state.categoriesAPI.callback;\n  const [onEdit, setOnEdit] = useState(false);\n  const [id, setID] = useState('');\n  const [err, setErr] = useState(false);\n  const [success, setSuccess] = useState(false);\n  /* const createCategory = async e =>{\r\n      e.preventDefault()\r\n      try {\r\n          if(onEdit){\r\n              const res = await axios.put(`/api/category/${id}`, {name: category}, {\r\n                  headers: {Authorization: token}\r\n              })\r\n              setSuccess('Update is successful')\r\n          }else{\r\n              const res = await axios.post('/api/category', {name: category}, {\r\n                  headers: {Authorization: token}\r\n              })\r\n              setSuccess('Create is successful')\r\n          }\r\n          setOnEdit(false)\r\n          setCategory('') \r\n          setCallback(!callback)\r\n          \r\n      } catch (err) {\r\n          alert(err.response.data.msg)\r\n      }\r\n        return <>\r\n      {success && showSuccessMsg('success',success)}\r\n      {err && showErrMsg('error',err)}\r\n      </>\r\n  }\r\n      const editCategory = async (id, name) =>{\r\n      setID(id)\r\n      setCategory(name)\r\n      setOnEdit(true)\r\n      setSuccess('Update is successful')\r\n        return <>\r\n      {success && showSuccessMsg('success',success)}\r\n      {err && showErrMsg('error',err)}\r\n      </>\r\n  }\r\n    const deleteCategory = async id =>{\r\n      try {\r\n          const res = await axios.delete(`/api/category/${id}`, {\r\n              headers: {Authorization: token}\r\n          })\r\n          setSuccess('Delete is successful')\r\n          setCallback(!callback)\r\n      } catch (err) {\r\n          setErr(err.response.data.msg)\r\n      }\r\n      return <>\r\n      {success && showSuccessMsg('success',success)}\r\n      {err && showErrMsg('error',err)}\r\n      </>\r\n  } */\n\n  return (\n    /*#__PURE__*/\n\n    /*  <>\r\n     <div className=\"col-right\">\r\n                 <h2>All Categories</h2>\r\n                 \r\n                 <form className='category' onSubmit={createCategory}>\r\n                 <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                     <Col span={8}><input type=\"text\" name=\"category\" placeholder=\"Category's name\" value={category} required onChange={e => setCategory(e.target.value)} /></Col>\r\n                     <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                 </Row>\r\n                 </form>\r\n                   <div style={{overflowX: \"auto\"}}>\r\n                     <table className=\"customers\">\r\n                         <thead>\r\n                             <tr>\r\n                                 <th>ID</th>\r\n                                 <th>Name</th>\r\n                                 <th>Action</th>\r\n                             </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                             {\r\n                                 categories.map(category =>(\r\n                                     <tr key={category._id}>\r\n                                         <td>{category._id}</td>\r\n                                         <td>{category.name}</td>\r\n                                         <td>\r\n                                             <Link onClick={() => editCategory(category._id, category.name)}>\r\n                                                 <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                             </Link>\r\n                                             <Link onClick={() => deleteCategory(category._id)}>\r\n                                                 <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                             </Link>\r\n                                         </td>\r\n                                     </tr>\r\n                                 ))\r\n                             }\r\n                         </tbody>\r\n                     </table>\r\n                 </div>\r\n             </div>\r\n     </> */\n    _jsxDEV(_Fragment, {}, void 0, false)\n  );\n}\n\n_s(Categories, \"0F0K4jrLVgzujlotU9N1W0GrOpo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/thu26/Desktop/test/test123/tlcn/client/src/components/mainpages/admin/Categories.js"],"names":["React","useState","useContext","GlobalState","axios","useSelector","Link","Row","Col","showSuccessMsg","showErrMsg","Categories","state","console","log","categories","categoriesAPI","category","setCategory","token","callback","setCallback","onEdit","setOnEdit","id","setID","err","setErr","success","setSuccess"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,oCAAzC;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAMC,KAAK,GAAGV,UAAU,CAACC,WAAD,CAAxB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,UAAD,IAAeH,KAAK,CAACI,aAAN,CAAoBD,UAAzC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMkB,KAAK,GAAGd,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACO,KAAhB,CAAzB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACI,aAAN,CAAoBI,QAApD;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACuB,EAAD,EAAKC,KAAL,IAAcxB,QAAQ,CAAC,EAAD,CAA5B;AAEA,QAAM,CAACyB,GAAD,EAAMC,MAAN,IAAgB1B,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,KAAD,CAAtC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMI;AAAA;;AACG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIQ;AA7CJ;AAiDH;;GAvHQU,U;UAMSN,W;;;KANTM,U;AAyHT,eAAeA,UAAf","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [category, setCategory] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.categoriesAPI.callback\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    /* const createCategory = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(onEdit){\r\n                const res = await axios.put(`/api/category/${id}`, {name: category}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Update is successful')\r\n            }else{\r\n                const res = await axios.post('/api/category', {name: category}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setSuccess('Create is successful')\r\n            }\r\n            setOnEdit(false)\r\n            setCategory('') \r\n            setCallback(!callback)\r\n            \r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n\r\n    const editCategory = async (id, name) =>{\r\n        setID(id)\r\n        setCategory(name)\r\n        setOnEdit(true)\r\n        setSuccess('Update is successful')\r\n\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    }\r\n\r\n    const deleteCategory = async id =>{\r\n        try {\r\n            const res = await axios.delete(`/api/category/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setSuccess('Delete is successful')\r\n            setCallback(!callback)\r\n        } catch (err) {\r\n            setErr(err.response.data.msg)\r\n        }\r\n        return <>\r\n        {success && showSuccessMsg('success',success)}\r\n        {err && showErrMsg('error',err)}\r\n        </>\r\n    } */\r\n    return (\r\n       /*  <>\r\n        <div className=\"col-right\">\r\n                    <h2>All Categories</h2>\r\n                    \r\n                    <form className='category' onSubmit={createCategory}>\r\n                    <Row gutter={[8, 8]} type=\"flex\" justify=\"end\" align=\"center\">\r\n                        <Col span={8}><input type=\"text\" name=\"category\" placeholder=\"Category's name\" value={category} required onChange={e => setCategory(e.target.value)} /></Col>\r\n                        <Col span={4}><button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button></Col>\r\n                    </Row>\r\n                    </form>\r\n\r\n                    <div style={{overflowX: \"auto\"}}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    categories.map(category =>(\r\n                                        <tr key={category._id}>\r\n                                            <td>{category._id}</td>\r\n                                            <td>{category.name}</td>\r\n                                            <td>\r\n                                                <Link onClick={() => editCategory(category._id, category.name)}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <Link onClick={() => deleteCategory(category._id)}>\r\n                                                    <i className=\"fas fa-trash-alt\" title=\"Remove\"></i>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </> */\r\n\r\n\r\n        <>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}