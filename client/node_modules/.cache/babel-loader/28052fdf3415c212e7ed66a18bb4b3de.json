{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\HKII_2020_2021\\\\Tieu_Luan_CN\\\\code\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\auth\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { showErrMsg, showSuccessMsg } from '../utils/notification/Notification';\nimport { isPass, isMatch } from '../utils/validation/Validation';\nimport BackgroundHeader from '../utils/background_header/BackgroundHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  password: '',\n  cf_password: '',\n  err: '',\n  success: ''\n};\n\nfunction ResetPassword() {\n  _s();\n\n  const [data, setData] = useState(initialState);\n  const {\n    token\n  } = useParams();\n  const {\n    password,\n    cf_password,\n    err,\n    success\n  } = data;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const handleResetPass = async () => {\n    if (isPass(password)) return setData({ ...data,\n      err: \"Password must be at least 8 characters, one letter and one number.\",\n      success: ''\n    });\n    if (!isMatch(password, cf_password)) return setData({ ...data,\n      err: \"Password did not match.\",\n      success: ''\n    });\n\n    try {\n      const res = await axios.post('/user/reset', {\n        password\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      return setData({ ...data,\n        err: \"\",\n        success: res.data.msg\n      });\n    } catch (err) {\n      err.response.data.msg && setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackgroundHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fg_pass\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [err && showErrMsg(err), success && showSuccessMsg(success), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cf_password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"cf_password\",\n          id: \"cf_password\",\n          value: cf_password,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetPass,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ResetPassword, \"3ScUSeCf1Nn5U7fLvVg9t+th+Eo=\", false, function () {\n  return [useParams];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["D:/Documents/HKII_2020_2021/Tieu_Luan_CN/code/tlcn/client/src/components/mainpages/auth/ResetPassword.js"],"names":["React","useState","axios","useParams","showErrMsg","showSuccessMsg","isPass","isMatch","BackgroundHeader","initialState","password","cf_password","err","success","ResetPassword","data","setData","token","handleChangeInput","e","name","value","target","handleResetPass","res","post","headers","Authorization","msg","response"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useParams} from 'react-router-dom'\r\nimport {showErrMsg, showSuccessMsg} from '../utils/notification/Notification'\r\nimport {isPass, isMatch} from '../utils/validation/Validation'\r\nimport BackgroundHeader from '../utils/background_header/BackgroundHeader'\r\n\r\n\r\nconst initialState = {\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction ResetPassword() {\r\n    const [data, setData] = useState(initialState)\r\n    const {token} = useParams()\r\n\r\n    const {password, cf_password, err, success} = data\r\n\r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n        setData({...data, [name]:value, err: '', success: ''})\r\n    }\r\n\r\n\r\n    const handleResetPass = async () => {\r\n        if(isPass(password))\r\n            return setData({...data, err: \"Password must be at least 8 characters, one letter and one number.\", success: ''})\r\n\r\n        if(!isMatch(password, cf_password))\r\n            return setData({...data, err: \"Password did not match.\", success: ''})\r\n        \r\n        try {\r\n            const res = await axios.post('/user/reset', {password}, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            return setData({...data, err: \"\", success: res.data.msg})\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setData({...data, err: err.response.data.msg, success: ''})\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <BackgroundHeader/>\r\n        <div className=\"fg_pass\">\r\n            <h2>Reset Your Password</h2>\r\n\r\n            <div className=\"row\">\r\n                {err && showErrMsg(err)}\r\n                {success && showSuccessMsg(success)}\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={password}\r\n                onChange={handleChangeInput} />\r\n\r\n                <label htmlFor=\"cf_password\">Confirm Password</label>\r\n                <input type=\"password\" name=\"cf_password\" id=\"cf_password\" value={cf_password}\r\n                onChange={handleChangeInput} />         \r\n\r\n                <button onClick={handleResetPass}>Reset Password</button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n"]},"metadata":{},"sourceType":"module"}