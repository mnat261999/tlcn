{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction ProductsAdminAPI(token) {\n  _s();\n\n  const [isLoggin, setIsLoggin] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [history, setHistory] = useState([]); //const [callback, setCallback] = useState(false)\n\n  console.log(\"test:\");\n  console.log(\"test-token-product:\" + token);\n  useEffect(() => {\n    if (token) {\n      const getProductAdmin = async () => {\n        try {\n          const res = await axios.get('/api/admin/products', {\n            headers: {\n              Authorization: token\n            }\n          });\n          console.log(\"test123:\" + res);\n          setIsLoggin(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getProductAdmin();\n    }\n  }, [token]);\n  return {\n    isLoggin: [isLoggin, setIsLoggin],\n    isAdmin: [isAdmin, setIsAdmin],\n    history: [history, setHistory] //callback:[callback, setCallback]\n\n  };\n}\n\n_s(ProductsAdminAPI, \"kfH/6gIrzSXBI2etLB0PSqgr6Y8=\");\n\n_c = ProductsAdminAPI;\nexport default ProductsAdminAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsAdminAPI\");","map":{"version":3,"sources":["D:/Documents/HKII_2020_2021/Tieu_Luan_CN/code/tlcn/client/src/api/ProductsAdminAPI.js"],"names":["useState","useEffect","axios","ProductsAdminAPI","token","isLoggin","setIsLoggin","isAdmin","setIsAdmin","history","setHistory","console","log","getProductAdmin","res","get","headers","Authorization","data","role","err","alert","response","msg"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAJ6B,CAK7B;;AAGAW,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAuBR,KAAnC;AACAH,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,KAAH,EAAS;AACL,YAAMS,eAAe,GAAG,YAAW;AAC/B,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,qBAAV,EAAiC;AAC/CC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEb;AAAhB;AADsC,WAAjC,CAAlB;AAGAO,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAYE,GAAxB;AAEAR,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBX,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEH,SATD,CASE,OAAOY,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAbD;;AAeAV,MAAAA,eAAe;AAElB;AACJ,GApBQ,EAoBP,CAACT,KAAD,CApBO,CAAT;AAwBA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAHN,CAIH;;AAJG,GAAP;AAMH;;GAxCQP,gB;;KAAAA,gB;AA0CT,eAAeA,gBAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction ProductsAdminAPI(token) {\r\n    \r\n    const [isLoggin, setIsLoggin] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [history, setHistory] = useState([])\r\n    //const [callback, setCallback] = useState(false)\r\n    \r\n\r\n    console.log(\"test:\")\r\n    console.log(\"test-token-product:\"+ token)\r\n    useEffect(() =>{\r\n        if(token){\r\n            const getProductAdmin = async () =>{\r\n                try {\r\n                    const res = await axios.get('/api/admin/products', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    console.log(\"test123:\"+ res)\r\n \r\n                    setIsLoggin(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false) \r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getProductAdmin()\r\n            \r\n        }\r\n    },[token])\r\n\r\n\r\n\r\n    return {\r\n        isLoggin: [isLoggin, setIsLoggin],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        history: [history, setHistory]\r\n        //callback:[callback, setCallback]\r\n    }\r\n}\r\n\r\nexport default ProductsAdminAPI\r\n "]},"metadata":{},"sourceType":"module"}