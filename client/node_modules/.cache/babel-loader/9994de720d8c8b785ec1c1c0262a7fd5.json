{"ast":null,"code":"import ACTIONS from './index';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nexport const createAction = postData => {\n  var _s = $RefreshSig$();\n\n  return _s(async (dispatch, getState) => {\n    _s();\n\n    const token = useSelector(state => state.token);\n    console.log('test post');\n    console.log(token);\n\n    try {\n      const {\n        data\n      } = await axios.post('/api/admin/posts/new', postData, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } catch (error) {}\n  }, \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", false, function () {\n    return [useSelector];\n  });\n};","map":{"version":3,"sources":["D:/Documents/HKII_2020_2021/Tieu_Luan_CN/code/tlcn/client/src/components/redux/actions/postAction.js"],"names":["ACTIONS","axios","useDispatch","useSelector","createAction","postData","dispatch","getState","token","state","console","log","data","post","headers","Authorization","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAGA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc;AAAA;;AACzC,YAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA;;AAC9B,UAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACN,QAAI;AAEH,YAAM;AAACI,QAAAA;AAAD,UAAS,MAAMX,KAAK,CAACY,IAAN,CAAW,sBAAX,EAAmCR,QAAnC,EAA4C;AACpDS,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEP;AAAhB;AAD2C,OAA5C,CAArB;AAGA,KALD,CAKE,OAAOQ,KAAP,EAAc,CACf;AACD,GAZD;AAAA,YACqBb,WADrB;AAAA;AAaA,CAdM","sourcesContent":["import ACTIONS from './index'\r\nimport axios from 'axios'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n\r\nexport const createAction = (postData) => {\r\n\treturn async (dispatch, getState) => {\r\n        const token = useSelector(state => state.token)\r\n\r\n        console.log('test post')\r\n        console.log(token)\r\n\t\ttry {\r\n\r\n\t\t\tconst {data} = await axios.post('/api/admin/posts/new', postData,{\r\n                headers: {Authorization: token}\r\n            });\r\n\t\t} catch (error) {\r\n\t\t}\r\n\t};\r\n};"]},"metadata":{},"sourceType":"module"}