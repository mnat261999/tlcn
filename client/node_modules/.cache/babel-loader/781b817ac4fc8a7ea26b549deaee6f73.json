{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thu26\\\\Desktop\\\\test\\\\test1234\\\\tlcn\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport './css/alluser.css';\nimport './css/category.css';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'antd';\nimport { showSuccessMsg, showErrMsg } from '../utils/notification/Notification';\nimport { Modal, Button } from 'antd';\nimport { Input } from 'antd';\nimport { Tree } from 'antd';\nimport { Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction Categories() {\n  _s();\n\n  const state = useContext(GlobalState);\n  console.log(state);\n  const [categories] = state.categoriesAPI.categories;\n  console.log({\n    categories\n  });\n  const [typePage] = state.categoriesAPI.typePage;\n  const [category, setCategory] = useState('');\n  const token = useSelector(state => state.token);\n  const [callback, setCallback] = state.categoriesAPI.callback;\n  const [onAdd, setOnAdd] = useState(false);\n  const [onEdit, setOnEdit] = useState(false);\n  const [onDelete, setOnDelete] = useState(false);\n  const [id, setID] = useState('');\n  const [err, setErr] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryType, setCategoryType] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [selectedArray, setSelectedArray] = useState([]);\n  const auth = useSelector(state => state.auth);\n  const {\n    isAdmin\n  } = auth;\n  const [images, setImages] = useState(false);\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 2 * 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      const res = await axios.post('/api/upload_pet', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      console.log(res);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const onExpand = expandedKeysValue => {\n    console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n\n    setExpanded(expandedKeysValue);\n  };\n\n  const onSelect = (selectedKeys, info) => {\n    setSelected(selectedKeys);\n    console.log({\n      selectedKeys\n    });\n    console.log({\n      selected\n    });\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    setChecked(checkedKeys);\n    console.log('onCheck', checkedKeys, info);\n  };\n\n  const handleCancel = () => {\n    setOnAdd(false);\n    setOnEdit(false);\n    setOnDelete(false);\n    setVisible(false);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    } else if (type == \"selected\") {\n      const updatedSelectedArray = selectedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setSelectedArray(updatedSelectedArray);\n    }\n  };\n\n  const showModalAdd = () => {\n    setVisible(true);\n    setOnAdd(true);\n    console.log({\n      onAdd\n    });\n    setOnEdit(false);\n    setOnDelete(false);\n\n    if (selected) {\n      setParentCategoryId(selected);\n    }\n\n    console.log({\n      selected\n    });\n  };\n\n  const ModalAdd = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        title: \"Add new category\",\n        onOk: createCategory,\n        onCancel: handleCancel,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          children: \"Close\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          loading: loading,\n          onClick: createCategory,\n          children: \"Create\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            marginBottom: '20px'\n          },\n          value: categoryName,\n          placeholder: \"Category Name\",\n          onChange: e => setCategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            marginBottom: '20px'\n          },\n          className: \"group-control-model\",\n          value: parentCategoryId,\n          onChange: e => setParentCategoryId(e.target.value),\n          placeholder: \"Please select a category\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), createCategoryList(categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 69\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            marginBottom: '20px'\n          },\n          className: \"group-control-model\",\n          value: categoryType,\n          onChange: e => setCategoryType(e.target.value),\n          placeholder: \"Please select a type\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select a type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), typePage.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option._id,\n            children: option.name\n          }, option._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 47\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  const updateCheckedExpandedSelected = () => {\n    setVisible(true);\n    const cats = createCategoryList(categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    const selectedArray = [];\n    checked.length > 0 && checked.map((categoryId, index) => {\n      const cat = cats.find((category, _index) => categoryId === category.value);\n      cat && checkedArray.push(cat);\n    });\n    expanded.length > 0 && expanded.map((categoryId, index) => {\n      const cat = cats.find((category, _index) => categoryId === category.value);\n      cat && expandedArray.push(cat);\n    });\n    selected.length > 0 && selected.map((categoryId, index) => {\n      const cat = cats.find((category, _index) => categoryId === category.value);\n      cat && selectedArray.push(cat);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n    setSelectedArray(selectedArray);\n    console.log({\n      checked,\n      expanded,\n      selected,\n      cats,\n      checkedArray,\n      expandedArray,\n      selectedArray\n    });\n  };\n\n  const showModalEdit = () => {\n    setOnEdit(true);\n    updateCheckedExpandedSelected();\n  };\n\n  const ModalEdit = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        title: \"Edit new category\",\n        onOk: editCategory,\n        onCancel: handleCancel,\n        width: 1000,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          children: \"Close\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          loading: loading,\n          onClick: editCategory,\n          children: \"Edit\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Checked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                marginBottom: '20px'\n              },\n              value: item.name,\n              placeholder: \"Category Name\",\n              onChange: e => handleCategoryInput('name', e.target.value, index, 'checked')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              value: item.parentId,\n              onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n              placeholder: \"Please select a category\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), createCategoryList(categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 81\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24\n            },\n            md: {\n              span: 8\n            },\n            lg: {\n              span: 8\n            },\n            lx: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"group-control-model\",\n              value: item.type,\n              onChange: e => handleCategoryInput('type', e.target.value, index, 'checked'),\n              placeholder: \"Please select a type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select a type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), typePage.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option._id,\n                children: option.name\n              }, option._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 59\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  const showModalDelete = () => {\n    setOnDelete(true);\n    updateCheckedExpandedSelected();\n  };\n\n  const ModalDelete = () => {\n    console.log('delete', checkedArray);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        title: \"Delete category\",\n        onOk: deleteCategory,\n        onCancel: handleCancel,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancel,\n          children: \"No\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          loading: loading,\n          onClick: deleteCategory,\n          children: \"Yes\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Checked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 96\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  const renderCategories = cate => {\n    console.log(cate);\n    let myCategories = [];\n    cate.map(cat => {\n      myCategories.push({\n        title: cat.name,\n        key: cat._id,\n        children: cat.children.length > 0 && renderCategories(cat.children)\n      });\n    });\n    return myCategories;\n  };\n\n  const createCategoryList = (cate, options = []) => {\n    cate.map(cat => {\n      options.push({\n        value: cat._id,\n        name: cat.name,\n        parentId: cat.parentId,\n        type: cat.type,\n        images: cat.images\n      });\n\n      if (cat.children.length > 0) {\n        createCategoryList(cat.children, options);\n      }\n    });\n    return options;\n  };\n\n  const createCategory = async e => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('type', categoryType);\n    form.append('images', images);\n    const res = await axios.post('/api/category', form, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setCategoryName('');\n    setParentCategoryId('');\n    setCategoryType('');\n    setOnAdd(false);\n    setCallback(!callback);\n    console.log(res);\n    setVisible(false);\n  };\n\n  const editCategory = async e => {\n    /*         const form = new FormData();\r\n            \r\n            expandedArray.map((item,index) => {\r\n                form.append('_id', item.value)\r\n                form.append('name', item.name)\r\n                form.append('parentId', item.parentId ? item.parentId : \"\")\r\n                form.append('type', item.type)\r\n            })\r\n    \r\n            checkedArray.map((item,index) => {\r\n                form.append('_id', item.value)\r\n                form.append('name', item.name)\r\n                form.append('parentId', item.parentId ? item.parentId : \"\")\r\n                form.append('type', item.type)\r\n            })\r\n    \r\n            selectedArray.map((item,index) => {\r\n                form.append('_id', item.value)\r\n                form.append('name', item.name)\r\n                form.append('parentId', item.parentId ? item.parentId : \"\")\r\n                form.append('type', item.type)\r\n            })\r\n    \r\n            const res = await axios.get('/api/category')\r\n            setCategories(res.data.categoryList)\r\n            console.log({res})\r\n            console.log({categories})\r\n    \r\n            await axios.post('/api/category/update', form, {\r\n                headers: {Authorization: token}\r\n            })\r\n    \r\n            setCheckedArray('');\r\n            setExpandedArray('');\r\n            setSelectedArray('');\r\n            setSelected([])\r\n            setOnEdit(false);\r\n            setCallback(!callback)\r\n            setVisible(false) */\n    const form = new FormData();\n    /*         expandedArray.forEach((item,index) => {\r\n                form.append('_id', item.value)\r\n                form.append('name', item.name)\r\n                form.append('type', item.type)\r\n                form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            }) */\n\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('type', item.type);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n    });\n    /*         selectedArray.forEach((item,index) => {\r\n                form.append('_id', item.value)\r\n                form.append('name', item.name)\r\n                form.append('type', item.type)\r\n                form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            })\r\n     */\n\n    console.log({\n      form\n    });\n    const res = await axios.post('/api/category/update', form, {\n      headers: {\n        Authorization: token\n      }\n    });\n\n    if (res.status === 201) {\n      console.log(res);\n    } else {\n      console.log(res);\n    }\n\n    setCheckedArray('');\n    setOnEdit(false);\n    setCallback(!callback);\n    setVisible(false);\n  };\n\n  const deleteCategory = async e => {\n    //const expandedIdsArray = expandedArray.map((item,index) =>({_id: item.value}))\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    })); //const selectedIdsArray = selectedArray.map((item,index) =>({_id: item.value}))\n    //const idsArray = checkedArray.concat(selectedArray)\n    //console.log(idsArray)\n\n    console.log({\n      checkedIdsArray\n    });\n\n    if (checkedIdsArray.length > 0) {\n      const res = await axios.post('/api/category/delete', {\n        ids: checkedIdsArray\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n\n      if (res.status === 202) {\n        setSelected([]);\n        setOnDelete(false);\n        setCallback(!callback);\n        setVisible(false);\n        return alert(res.data.msg);\n      }\n    }\n    /*         if(selectedIdsArray.length > 0){\r\n                const res = await axios.post('/api/category/delete', {ids:selectedIdsArray}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                if(res.status ===  202)\r\n                {\r\n                    setSelected([])\r\n                    setOnDelete(false)\r\n                    setCallback(!callback)\r\n                    setVisible(false)\r\n                    return alert(res.data.msg)\r\n                }\r\n            }\r\n            setSelected([]) */\n\n\n    setOnDelete(false);\n    setCallback(!callback);\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 12\n        },\n        sm: {\n          span: 12\n        },\n        md: {\n          span: 12\n        },\n        lg: {\n          span: 12\n        },\n        lx: {\n          span: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-4xl\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 12\n        },\n        sm: {\n          span: 12\n        },\n        md: {\n          span: 12\n        },\n        lg: {\n          span: 12\n        },\n        lx: {\n          span: 12\n        },\n        className: \"text-right mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"mr-7\",\n          type: \"primary\",\n          onClick: showModalAdd,\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mr-7\",\n          type: \"primary\",\n          onClick: showModalEdit,\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: showModalDelete,\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 17\n        }, this), onEdit ? ModalEdit() : onAdd ? ModalAdd() : onDelete ? ModalDelete() : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      checkable: true,\n      defaultExpandedKeys: ['0-0-0', '0-0-1'],\n      defaultSelectedKeys: [],\n      defaultCheckedKeys: [],\n      onExpand: onExpand,\n      onSelect: onSelect,\n      onCheck: onCheck,\n      treeData: renderCategories(categories)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Categories, \"70kNIUJD+YqSTYuNe8gQXxOI47Q=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/thu26/Desktop/test/test1234/tlcn/tlcn/client/src/components/mainpages/admin/Categories.js"],"names":["React","useState","useContext","useEffect","GlobalState","axios","useSelector","Link","Row","Col","showSuccessMsg","showErrMsg","Modal","Button","Input","Tree","Select","Option","Categories","state","console","log","categories","categoriesAPI","typePage","category","setCategory","token","callback","setCallback","onAdd","setOnAdd","onEdit","setOnEdit","onDelete","setOnDelete","id","setID","err","setErr","success","setSuccess","visible","setVisible","loading","setLoading","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryType","setCategoryType","checked","setChecked","expanded","setExpanded","selected","setSelected","checkedArray","setCheckedArray","expandedArray","setExpandedArray","selectedArray","setSelectedArray","auth","isAdmin","images","setImages","handleUpload","e","preventDefault","alert","file","target","files","size","type","formData","FormData","append","res","post","headers","Authorization","data","response","msg","onExpand","expandedKeysValue","onSelect","selectedKeys","info","onCheck","checkedKeys","handleCancel","handleCategoryInput","key","value","index","updatedCheckedArray","map","item","_index","updatedExpandedArray","updatedSelectedArray","showModalAdd","ModalAdd","createCategory","marginBottom","createCategoryList","option","name","_id","updateCheckedExpandedSelected","cats","length","categoryId","cat","find","push","showModalEdit","ModalEdit","editCategory","span","parentId","showModalDelete","ModalDelete","deleteCategory","renderCategories","cate","myCategories","title","children","options","form","forEach","status","checkedIdsArray","ids"],"mappings":"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","sourcesContent":["import React, {useState, useContext,useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport './css/alluser.css'\r\nimport './css/category.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nimport {showSuccessMsg, showErrMsg} from '../utils/notification/Notification'\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { Tree } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state)\r\n    const [categories] = state.categoriesAPI.categories\r\n    console.log({categories})\r\n    const [typePage] = state.categoriesAPI.typePage\r\n    const [category, setCategory] = useState('')\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [callback, setCallback] = state.categoriesAPI.callback\r\n    const [onAdd, setOnAdd] = useState(false)\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [onDelete, setOnDelete] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const [err, setErr] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [parentCategoryId, setParentCategoryId] = useState('')\r\n    const [categoryType, setCategoryType] = useState('')\r\n\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [selectedArray, setSelectedArray] = useState([]);\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const {isAdmin} = auth\r\n    const [images, setImages] = useState(false)\r\n\r\n\r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            const file = e.target.files[0]\r\n            \r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 2* 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            const res = await axios.post('/api/upload_pet', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n            console.log(res)\r\n            setImages(res.data)\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n\r\n    const onExpand = (expandedKeysValue) => {\r\n        console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n        // or, you can remove all expanded children keys.\r\n        setExpanded(expandedKeysValue)\r\n      };\r\n\r\n    const onSelect = (selectedKeys, info) => {\r\n        setSelected(selectedKeys)\r\n        console.log({selectedKeys});\r\n        console.log({selected})\r\n        \r\n      };\r\n    \r\n    const onCheck = (checkedKeys, info) => {\r\n        setChecked(checkedKeys)\r\n        console.log('onCheck', checkedKeys, info);\r\n    };\r\n\r\n    \r\n    const  handleCancel = () => {\r\n        setOnAdd(false)\r\n        setOnEdit(false)\r\n        setOnDelete(false)\r\n        setVisible(false)\r\n    };\r\n\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setCheckedArray(updatedCheckedArray);\r\n          } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setExpandedArray(updatedExpandedArray);\r\n          }else if (type == \"selected\") {\r\n            const updatedSelectedArray = selectedArray.map((item, _index) =>\r\n              index == _index ? { ...item, [key]: value } : item\r\n            );\r\n            setSelectedArray(updatedSelectedArray);\r\n          }\r\n    }\r\n    \r\n    const showModalAdd = () => {\r\n        setVisible(true)\r\n        setOnAdd(true)\r\n        console.log({onAdd})\r\n        setOnEdit(false)\r\n        setOnDelete(false)\r\n        if(selected)\r\n        {\r\n            setParentCategoryId(selected)\r\n        }\r\n        console.log({selected})\r\n        \r\n       \r\n    };\r\n\r\n    const ModalAdd = () =>{\r\n        return <>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Add new category\"\r\n                onOk={createCategory}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={createCategory}>\r\n                    Create\r\n                    </Button>\r\n                ]}\r\n                >\r\n                <Input style={{marginBottom :'20px'}} value={categoryName} placeholder=\"Category Name\" onChange={(e)=> setCategoryName(e.target.value)} />\r\n                <select style={{marginBottom :'20px'}} className=\"group-control-model\" value={parentCategoryId} onChange={(e)=> setParentCategoryId(e.target.value)} placeholder=\"Please select a category\">\r\n                    <option>Select a category</option>\r\n                    {\r\n                        createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n                <select style={{marginBottom :'20px'}} className=\"group-control-model\" value={categoryType} onChange={(e)=> setCategoryType(e.target.value)} placeholder=\"Please select a type\">\r\n                    <option>Select a type</option>\r\n                    {\r\n                        typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n                <input type=\"file\" onChange={handleUpload}/>\r\n            </Modal> \r\n        </>\r\n      }\r\n    \r\n    const updateCheckedExpandedSelected= ()=>{\r\n        setVisible(true)\r\n        const cats = createCategoryList(categories)\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        const selectedArray = [];\r\n\r\n        checked.length > 0 && checked.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && checkedArray.push(cat)\r\n        })\r\n\r\n        expanded.length > 0 && expanded.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && expandedArray.push(cat)\r\n        })\r\n\r\n        selected.length > 0 && selected.map((categoryId,index) => {\r\n            const cat = cats.find((category, _index) => categoryId === category.value)\r\n            cat && selectedArray.push(cat)\r\n        })\r\n\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n        setSelectedArray(selectedArray);\r\n        console.log({checked, expanded,selected, cats, checkedArray, expandedArray,selectedArray})\r\n    }\r\n\r\n    const showModalEdit= () => {\r\n        setOnEdit(true)\r\n        updateCheckedExpandedSelected()\r\n    };\r\n\r\n    const ModalEdit = () =>{\r\n        return <>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Edit new category\"\r\n                onOk={editCategory}\r\n                onCancel={handleCancel}\r\n                width={1000}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={editCategory}>\r\n                    Edit\r\n                    </Button>\r\n                ]}\r\n                >\r\n{/*                     <Row>\r\n                        <Col>\r\n                            <h6>Expanded</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        expandedArray.length > 0 && expandedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\" value={item.type} onChange={(e) => handleCategoryInput('type', e.target.value, index, 'expanded')} placeholder=\"Please select a type\">\r\n                                <option>Select a type</option>\r\n                                {\r\n                                    typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    } */}\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Checked</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        checkedArray.length > 0 && checkedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\" value={item.type} onChange={(e) => handleCategoryInput('type', e.target.value, index, 'checked')} placeholder=\"Please select a type\">\r\n                                <option>Select a type</option>\r\n                                {\r\n                                    typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n{/*                     <Row>\r\n                        <Col>\r\n                            <h6>Selected</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        selectedArray.length > 0 && selectedArray.map((item,index) => \r\n                        \r\n                        <Row key={index} gutter={[8, 8]}>\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                                <Input style={{marginBottom :'20px'}} value={item.name} placeholder=\"Category Name\" onChange={(e) => handleCategoryInput('name', e.target.value, index, 'selected')} />\r\n                            </Col>\r\n\r\n                            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\"  value={item.parentId} onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'selected')} placeholder=\"Please select a category\">\r\n                                <option>Select a category</option>\r\n                                {\r\n                                    createCategoryList(categories).map(option =><option key={option.value} value={option.value}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n\r\n                            <Col  xs={{span: 24}} sm={{span: 24}} md={{span: 8}} lg={{span: 8}} lx={{span: 8}}>\r\n                            <select className=\"group-control-model\" value={item.type} onChange={(e) => handleCategoryInput('type', e.target.value, index, 'selected')} placeholder=\"Please select a type\">\r\n                                <option>Select a type</option>\r\n                                {\r\n                                    typePage.map(option =><option key={option._id} value={option._id}>{option.name}</option>)\r\n                                }\r\n                            </select>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n                    }  */}\r\n\r\n            </Modal> \r\n        </>\r\n    }\r\n\r\n    const showModalDelete = () => {\r\n        setOnDelete(true)\r\n        updateCheckedExpandedSelected()\r\n    }\r\n\r\n    const ModalDelete = () =>{\r\n        console.log('delete', checkedArray)\r\n        return<>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Delete category\"\r\n                onOk={deleteCategory}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    No\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={deleteCategory}>\r\n                    Yes\r\n                    </Button>\r\n                ]}\r\n                >\r\n{/*                     <Row>\r\n                        <Col>\r\n                            <h6>Expanded</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        expandedArray.map((item,index) =>(<span key={index}>{item.name}</span>))\r\n                    } */}\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Checked</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        checkedArray.map((item,index) =>(<><span key={index}>{item.name}</span><br></br></>))\r\n                    }\r\n{/* \r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Selected</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        selectedArray.map((item,index) =>(<><span key={index}>{item.name}</span><br></br></>))\r\n                    } */}\r\n            </Modal> \r\n        </>\r\n    }\r\n\r\n    const renderCategories = (cate) => {\r\n        console.log(cate);\r\n        let myCategories = [];\r\n        cate.map((cat) => {\r\n            myCategories.push({\r\n            title: cat.name,\r\n            key: cat._id,\r\n            children:cat.children.length > 0 && renderCategories(cat.children),\r\n          });\r\n        });\r\n        return myCategories;\r\n    }; \r\n\r\n    \r\n    const createCategoryList = (cate, options =[]) => {\r\n\r\n        cate.map((cat) =>{\r\n            options.push({value:cat._id, name: cat.name, parentId: cat.parentId, type: cat.type, images:cat.images});\r\n            if(cat.children.length > 0)\r\n            {\r\n                createCategoryList(cat.children, options)\r\n            }\r\n        })\r\n\r\n        return options;\r\n    };\r\n\r\n    const createCategory = async e => {\r\n        const form = new FormData();\r\n        form.append('name', categoryName)\r\n        form.append('parentId', parentCategoryId)\r\n        form.append('type', categoryType)\r\n        form.append('images', images)\r\n        const res = await axios.post('/api/category', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n        setCategoryName('')\r\n        setParentCategoryId('')\r\n        setCategoryType('')\r\n        setOnAdd(false)\r\n        setCallback(!callback)\r\n        console.log(res)\r\n        setVisible(false)\r\n    };\r\n\r\n    const editCategory = async e =>{\r\n/*         const form = new FormData();\r\n        \r\n        expandedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        checkedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        selectedArray.map((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n            form.append('type', item.type)\r\n        })\r\n\r\n        const res = await axios.get('/api/category')\r\n        setCategories(res.data.categoryList)\r\n        console.log({res})\r\n        console.log({categories})\r\n\r\n        await axios.post('/api/category/update', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        setCheckedArray('');\r\n        setExpandedArray('');\r\n        setSelectedArray('');\r\n        setSelected([])\r\n        setOnEdit(false);\r\n        setCallback(!callback)\r\n        setVisible(false) */\r\n        const form = new FormData();\r\n/*         expandedArray.forEach((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('type', item.type)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n        }) */\r\n\r\n        checkedArray.forEach((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('type', item.type)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n        })\r\n\r\n/*         selectedArray.forEach((item,index) => {\r\n            form.append('_id', item.value)\r\n            form.append('name', item.name)\r\n            form.append('type', item.type)\r\n            form.append('parentId', item.parentId ? item.parentId : \"\")\r\n        })\r\n */\r\n        console.log({form})\r\n\r\n        const res =await axios.post('/api/category/update', form, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        if(res.status === 201)\r\n        {\r\n            console.log(res)\r\n        }else{\r\n            console.log(res)\r\n        }\r\n        setCheckedArray('');\r\n        setOnEdit(false);\r\n        setCallback(!callback)\r\n        setVisible(false)\r\n    }\r\n\r\n    const deleteCategory = async e =>{\r\n\r\n        //const expandedIdsArray = expandedArray.map((item,index) =>({_id: item.value}))\r\n        const checkedIdsArray = checkedArray.map((item,index) =>({_id: item.value}))\r\n        //const selectedIdsArray = selectedArray.map((item,index) =>({_id: item.value}))\r\n        //const idsArray = checkedArray.concat(selectedArray)\r\n        //console.log(idsArray)\r\n\r\n        console.log({checkedIdsArray})\r\n        \r\n        if(checkedIdsArray.length > 0){\r\n            const res = await axios.post('/api/category/delete', {ids:checkedIdsArray}, {\r\n                headers: {Authorization: token}\r\n        })\r\n\r\n            if(res.status ===  202)\r\n            {\r\n                setSelected([])\r\n                setOnDelete(false)\r\n                setCallback(!callback)\r\n                setVisible(false)\r\n                return alert(res.data.msg)\r\n            }\r\n        }\r\n\r\n/*         if(selectedIdsArray.length > 0){\r\n            const res = await axios.post('/api/category/delete', {ids:selectedIdsArray}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            if(res.status ===  202)\r\n            {\r\n                setSelected([])\r\n                setOnDelete(false)\r\n                setCallback(!callback)\r\n                setVisible(false)\r\n                return alert(res.data.msg)\r\n            }\r\n        }\r\n        setSelected([]) */\r\n        setOnDelete(false)\r\n        setCallback(!callback)\r\n        setVisible(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Row justify=\"space-between\">\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}}>\r\n                <h2 className=\"text-4xl\">All Categories</h2>\r\n            </Col>\r\n            <Col xs={{span: 12}} sm={{span: 12}} md={{span: 12}} lg={{span: 12}} lx={{span: 12}} className=\"text-right mb-2\">\r\n                <Button className=\"mr-7\" type=\"primary\" onClick={showModalAdd}>\r\n                    ADD\r\n                </Button>\r\n                <Button className=\"mr-7\" type=\"primary\" onClick={showModalEdit}>\r\n                    EDIT\r\n                </Button> \r\n                <Button type=\"primary\" onClick={showModalDelete}>\r\n                    DELETE\r\n                </Button> \r\n                { onEdit ? ModalEdit() : onAdd ? ModalAdd(): onDelete ? ModalDelete():''}\r\n            </Col>\r\n        </Row>\r\n\r\n        <Tree\r\n            checkable\r\n            defaultExpandedKeys={['0-0-0', '0-0-1']}\r\n            defaultSelectedKeys={[]}\r\n            defaultCheckedKeys={[]}\r\n            onExpand={onExpand}\r\n            onSelect={onSelect}\r\n            onCheck={onCheck}\r\n            treeData={renderCategories(categories)}\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}