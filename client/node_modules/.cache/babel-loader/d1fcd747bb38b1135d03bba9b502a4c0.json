{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport PaypalButton from './PaypalButton';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport \"./cart.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [cart, setCart] = state.userAPI.cart; //const [token] = state.token\n\n  const token = useSelector(state => state.token); //const [callback, setCallback] = state.userAPI.callback\n\n  const [total, setTotal] = useState(0);\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    const getTotal = () => {\n      const total = cart.reduce((prev, item) => {\n        return prev + item.price * item.quantity;\n      }, 0);\n      setTotal(total);\n    };\n\n    getTotal();\n  }, [cart]);\n\n  const addToCart = async cart => {\n    await axios.patch('/user/addcart', {\n      cart\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  };\n\n  const increment = id => {\n    cart.forEach(item => {\n      if (item._id === id) {\n        if (item.quantity >= cart.stock) return;\n        item.quantity += 1;\n      }\n    });\n    setCart([...cart]);\n    addToCart(cart);\n  };\n\n  const decrement = id => {\n    cart.forEach(item => {\n      if (item._id === id) {\n        item.quantity === 1 ? item.quantity = 1 : item.quantity -= 1;\n      }\n    });\n    setCart([...cart]);\n    addToCart();\n  };\n\n  const removeProduct = id => {\n    if (window.confirm(\"Do you want to delete this product?\")) {\n      cart.forEach((item, index) => {\n        if (item._id === id) {\n          cart.splice(index, 1);\n        }\n      });\n      setCart([...cart]);\n      addToCart(cart);\n    }\n  };\n\n  const tranSuccess = async payment => {\n    const {\n      paymentID,\n      address\n    } = payment;\n    await axios.post('/api/payment', {\n      cart,\n      paymentID,\n      address\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setCart([]);\n    addToCart([]);\n    console.log(\"test alert transucess\");\n    alert(\"You have successfully placed an order.\"); //setCallback(!callback)\n  }; // if(cart.length === 0) \n  //     return <h2 style={{textAlign: \"center\", fontSize: \"5rem\"}}>Cart Empty</h2> \n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Cart, \"ksZHDtxuC8VpyTOCtDd2QV9k2qc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/thu26/Desktop/test/test1234/tlcn/tlcn/client/src/components/mainpages/cart/cart.js"],"names":["React","useContext","useState","useEffect","GlobalState","axios","PaypalButton","useSelector","Button","Cart","state","cart","setCart","userAPI","token","total","setTotal","quantity","setQuantity","getTotal","reduce","prev","item","price","addToCart","patch","headers","Authorization","increment","id","forEach","_id","stock","decrement","removeProduct","window","confirm","index","splice","tranSuccess","payment","paymentID","address","post","console","log","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAsB,MAAtB;AAEA,OAAO,YAAP;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,KAAK,GAAGT,UAAU,CAACG,WAAD,CAAxB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBF,KAAK,CAACG,OAAN,CAAcF,IAAtC,CAFY,CAGZ;;AACA,QAAMG,KAAK,GAAGP,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACI,KAAhB,CAAzB,CAJY,CAKZ;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMgB,QAAQ,GAAG,MAAK;AAClB,YAAMJ,KAAK,GAAGJ,IAAI,CAACS,MAAL,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,eAAOD,IAAI,GAAIC,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACL,QAAjC;AACH,OAFa,EAEZ,CAFY,CAAd;AAIAD,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAND;;AAQAI,IAAAA,QAAQ;AAEX,GAXQ,EAWP,CAACR,IAAD,CAXO,CAAT;;AAaC,QAAMa,SAAS,GAAG,MAAOb,IAAP,IAAe;AAC9B,UAAMN,KAAK,CAACoB,KAAN,CAAY,eAAZ,EAA6B;AAACd,MAAAA;AAAD,KAA7B,EAAqC;AACvCe,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEb;AAAhB;AAD8B,KAArC,CAAN;AAGH,GAJA;;AAMD,QAAMc,SAAS,GAAIC,EAAD,IAAO;AACrBlB,IAAAA,IAAI,CAACmB,OAAL,CAAaR,IAAI,IAAI;AACjB,UAAGA,IAAI,CAACS,GAAL,KAAaF,EAAhB,EAAmB;AACf,YAAIP,IAAI,CAACL,QAAL,IAAkBN,IAAI,CAACqB,KAA3B,EAAmC;AACnCV,QAAAA,IAAI,CAACL,QAAL,IAAiB,CAAjB;AACH;AACJ,KALD;AAOAL,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACAa,IAAAA,SAAS,CAACb,IAAD,CAAT;AACH,GAVD;;AAYC,QAAMsB,SAAS,GAAIJ,EAAD,IAAO;AACtBlB,IAAAA,IAAI,CAACmB,OAAL,CAAaR,IAAI,IAAI;AACjB,UAAGA,IAAI,CAACS,GAAL,KAAaF,EAAhB,EAAmB;AACfP,QAAAA,IAAI,CAACL,QAAL,KAAkB,CAAlB,GAAsBK,IAAI,CAACL,QAAL,GAAgB,CAAtC,GAA0CK,IAAI,CAACL,QAAL,IAAiB,CAA3D;AACH;AACJ,KAJD;AAMAL,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACAa,IAAAA,SAAS;AACZ,GATA;;AAWF,QAAMU,aAAa,GAAIL,EAAD,IAAO;AACxB,QAAGM,MAAM,CAACC,OAAP,CAAe,qCAAf,CAAH,EAAyD;AACrDzB,MAAAA,IAAI,CAACmB,OAAL,CAAa,CAACR,IAAD,EAAOe,KAAP,KAAiB;AAC1B,YAAGf,IAAI,CAACS,GAAL,KAAaF,EAAhB,EAAmB;AACflB,UAAAA,IAAI,CAAC2B,MAAL,CAAYD,KAAZ,EAAmB,CAAnB;AACH;AACJ,OAJD;AAMAzB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACAa,MAAAA,SAAS,CAACb,IAAD,CAAT;AACH;AACJ,GAXF;;AAaA,QAAM4B,WAAW,GAAG,MAAMC,OAAN,IAAkB;AACjC,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAuBF,OAA7B;AAEA,UAAMnC,KAAK,CAACsC,IAAN,CAAW,cAAX,EAA2B;AAAChC,MAAAA,IAAD;AAAO8B,MAAAA,SAAP;AAAkBC,MAAAA;AAAlB,KAA3B,EAAuD;AACzDhB,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEb;AAAhB;AADgD,KAAvD,CAAN;AAIAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAY,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAC,IAAAA,KAAK,CAAC,wCAAD,CAAL,CAViC,CAYjC;AACH,GAbF,CAhEa,CAgFR;AACA;;;AAEA,sBACY,qCADZ;AAII;;GAvFHrC,I;UAISF,W;;;KAJTE,I;AAyFT,eAAeA,IAAf","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport PaypalButton from './PaypalButton'\r\nimport {useSelector} from 'react-redux'\r\nimport { Button} from 'antd';\r\n\r\nimport \"./cart.css\"\r\n\r\nfunction Cart() {\r\n    const state = useContext(GlobalState)\r\n    const [cart, setCart] = state.userAPI.cart\r\n    //const [token] = state.token\r\n    const token = useSelector(state => state.token)\r\n    //const [callback, setCallback] = state.userAPI.callback\r\n    const [total, setTotal] = useState(0)\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    useEffect(() =>{\r\n        const getTotal = () =>{\r\n            const total = cart.reduce((prev, item) => {\r\n                return prev + (item.price * item.quantity)\r\n            },0)\r\n\r\n            setTotal(total)\r\n        }\r\n\r\n        getTotal()\r\n\r\n    },[cart])\r\n\r\n     const addToCart = async (cart) =>{\r\n        await axios.patch('/user/addcart', {cart}, {\r\n            headers: {Authorization: token}\r\n        })\r\n    } \r\n\r\n    const increment = (id) =>{\r\n        cart.forEach(item => {      \r\n            if(item._id === id){\r\n                if (item.quantity  >= cart.stock ) return;\r\n                item.quantity += 1\r\n            }\r\n        })\r\n\r\n        setCart([...cart])\r\n        addToCart(cart)\r\n    }\r\n\r\n     const decrement = (id) =>{\r\n        cart.forEach(item => {\r\n            if(item._id === id){\r\n                item.quantity === 1 ? item.quantity = 1 : item.quantity -= 1\r\n            }\r\n        })\r\n\r\n        setCart([...cart])\r\n        addToCart()\r\n    }\r\n\r\n   const removeProduct = (id) =>{\r\n        if(window.confirm(\"Do you want to delete this product?\")){\r\n            cart.forEach((item, index) => {\r\n                if(item._id === id){\r\n                    cart.splice(index, 1)\r\n                }\r\n            })\r\n\r\n            setCart([...cart])\r\n            addToCart(cart)\r\n        }\r\n    }\r\n\r\n   const tranSuccess = async(payment) => {\r\n        const {paymentID, address} = payment;\r\n\r\n        await axios.post('/api/payment', {cart, paymentID, address}, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        setCart([])\r\n        addToCart([])\r\n        console.log(\"test alert transucess\")\r\n        alert(\"You have successfully placed an order.\")\r\n\r\n        //setCallback(!callback)\r\n    }\r\n\r\n\r\n        // if(cart.length === 0) \r\n        //     return <h2 style={{textAlign: \"center\", fontSize: \"5rem\"}}>Cart Empty</h2> \r\n\r\n        return (\r\n                    <>\r\n                   </>\r\n               );\r\n           }\r\n\r\nexport default Cart\r\n"]},"metadata":{},"sourceType":"module"}