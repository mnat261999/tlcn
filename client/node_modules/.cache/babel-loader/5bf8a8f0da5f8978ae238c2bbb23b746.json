{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\HKII_2020_2021\\\\Tieu_Luan_CN\\\\code\\\\tlcn\\\\client\\\\src\\\\components\\\\mainpages\\\\admin\\\\CreatePet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport './css/createProduct.css';\nimport './css/form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  pet_code: '',\n  name: '',\n  type: '',\n  color: '',\n  weight: '',\n  sex: '',\n  vaccination: '',\n  moreinfor: '',\n  status: '',\n  _id: ''\n};\n\nfunction CreatePet() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [pet, setPet] = useState(initialState);\n  const [types] = state.typesAPI.types;\n  const [statuses] = state.statusesAPI.statuses;\n  const [images, setImages] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const {\n    isAdmin\n  } = auth;\n  const token = useSelector(state => state.token); //const [isAdmin] = state.userAPI.isAdmin\n  //const [token] = state.token\n\n  const history = useHistory();\n  const param = useParams();\n  const [pets] = state.petsAPI.pets;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.petsAPI.callback;\n  const [multipleFiles, setMultipleFiles] = useState('');\n  useEffect(() => {\n    if (param.id) {\n      setOnEdit(true);\n      pets.forEach(pet => {\n        if (pet._id === param.id) {\n          setPet(pet);\n          setImages(pet.images);\n        }\n      });\n    } else {\n      setOnEdit(false);\n      setPet(initialState);\n      setImages(false);\n    }\n  }, [param.id, pets]);\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      /*             const file = e.target.files[0]\r\n                  \r\n                  if(!file) return alert(\"File not exist.\")\r\n      \r\n                  if(file.size > 2* 1024 * 1024) // 1mb\r\n                      return alert(\"Size too large!\")\r\n      \r\n                  if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                      return alert(\"File format is incorrect.\") */\n\n      let formData = new FormData();\n\n      for (let i = 0; i < multipleFiles.length; i++) {\n        formData.append('files', multipleFiles[i]);\n      }\n\n      setLoading(true);\n      const res = await axios.post('/api/upload_pet', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      console.log(res);\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      setLoading(true);\n      await axios.post('/api/destroy_admin', {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPet({ ...pet,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      if (!images) return alert(\"No Image Upload\");\n\n      if (onEdit) {\n        await axios.put(`/api/admin/pet/${pet._id}`, { ...pet,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } else {\n        await axios.post('/api/admin/pet/new', { ...pet,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      }\n\n      setCallback(!callback);\n      history.push(\"/admin/all_pet\");\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: onEdit ? \"Update Pet\" : \"Create Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_product\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [48, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 24,\n          md: 24,\n          lg: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"file\",\n              id: \"file_up\",\n              onChange: handleUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"file_load\",\n              children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"file_img\",\n              style: styleUpload,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: images ? images.url : '',\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cancel\",\n                onClick: handleDestroy,\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 24,\n          md: 24,\n          lg: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"card\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pet_code\",\n                children: \"Pet Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"pet_code\",\n                id: \"pet_code\",\n                required: true,\n                value: pet.pet_code,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                required: true,\n                value: pet.name,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"color\",\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"color\",\n                id: \"color\",\n                required: true,\n                value: pet.color,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"weight\",\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"number\",\n                name: \"weight\",\n                id: \"weight\",\n                required: true,\n                value: pet.weight,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sex\",\n                children: \"Sex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"sex\",\n                id: \"sex\",\n                required: true,\n                value: pet.sex,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"vaccination\",\n                children: \"Vaccination\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"vaccination\",\n                id: \"vaccination\",\n                required: true,\n                value: pet.vaccination,\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"moreinfor\",\n                children: \"More Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                class: \"group-control\",\n                type: \"text\",\n                name: \"moreinfor\",\n                id: \"moreinfor\",\n                required: true,\n                value: pet.moreinfor,\n                rows: \"7\",\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"type\",\n                children: \"Types: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"group-control\",\n                name: \"type\",\n                value: pet.type,\n                onChange: handleChangeInput,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Please select a type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: type._id,\n                  children: type.name\n                }, type._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"status\",\n                children: \"Status: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"group-control\",\n                name: \"status\",\n                value: pet.status,\n                onChange: handleChangeInput,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Please select a status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this), statuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: status._id,\n                  children: status.name\n                }, status._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-form\",\n              type: \"submit\",\n              children: onEdit ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreatePet, \"Vqx30uc0dec95SDCOBcMoN6at7w=\", false, function () {\n  return [useSelector, useSelector, useHistory, useParams];\n});\n\n_c = CreatePet;\nexport default CreatePet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePet\");","map":{"version":3,"sources":["D:/Documents/HKII_2020_2021/Tieu_Luan_CN/code/tlcn/client/src/components/mainpages/admin/CreatePet.js"],"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useHistory","useParams","useSelector","Row","Col","initialState","pet_code","name","type","color","weight","sex","vaccination","moreinfor","status","_id","CreatePet","state","pet","setPet","types","typesAPI","statuses","statusesAPI","images","setImages","loading","setLoading","auth","isAdmin","token","history","param","pets","petsAPI","onEdit","setOnEdit","callback","setCallback","multipleFiles","setMultipleFiles","id","forEach","handleUpload","e","preventDefault","alert","formData","FormData","i","length","append","res","post","headers","Authorization","console","log","data","err","response","msg","handleDestroy","public_id","handleChangeInput","value","target","handleSubmit","put","push","styleUpload","display","url","map"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport { Row, Col } from 'antd';\r\nimport './css/createProduct.css'\r\nimport './css/form.css'\r\n\r\n\r\nconst initialState = {\r\n    pet_code:'',\r\n    name: '',\r\n    type: '',\r\n    color: '',\r\n    weight: '',\r\n    sex: '',\r\n    vaccination: '',\r\n    moreinfor:'',\r\n    status:'',\r\n    _id: ''\r\n}\r\n\r\nfunction CreatePet() {\r\n    const state = useContext(GlobalState)\r\n    const [pet, setPet] = useState(initialState)\r\n    const [types] = state.typesAPI.types\r\n    const [statuses] = state.statusesAPI.statuses\r\n    const [images, setImages] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const {isAdmin} = auth\r\n    const token = useSelector(state => state.token)\r\n\r\n    //const [isAdmin] = state.userAPI.isAdmin\r\n    //const [token] = state.token\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n\r\n    const [pets] = state.petsAPI.pets\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [callback, setCallback] = state.petsAPI.callback\r\n\r\n    const [multipleFiles, setMultipleFiles] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(param.id){\r\n            setOnEdit(true)\r\n            pets.forEach(pet => {\r\n                if(pet._id === param.id) {\r\n                    setPet(pet)\r\n                    setImages(pet.images)\r\n                }\r\n            })\r\n        }else{\r\n            setOnEdit(false)\r\n            setPet(initialState)\r\n            setImages(false)\r\n        }\r\n    }, [param.id, pets])\r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n/*             const file = e.target.files[0]\r\n            \r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 2* 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\") */\r\n\r\n            let formData = new FormData()\r\n            for (let i = 0; i < multipleFiles.length; i++) {\r\n                formData.append('files', multipleFiles[i]);                      \r\n            }\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_pet', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n\r\n            console.log(res)\r\n            setLoading(false)\r\n            setImages(res.data)\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleDestroy = async () => {\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            setLoading(true)\r\n            await axios.post('/api/destroy_admin', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setPet({...pet, [name]:value})\r\n    }\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            if(!images) return alert(\"No Image Upload\")\r\n\r\n            if(onEdit){\r\n                await axios.put(`/api/admin/pet/${pet._id}`, {...pet, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }else{\r\n                await axios.post('/api/admin/pet/new', {...pet, images}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }\r\n            setCallback(!callback)\r\n            history.push(\"/admin/all_pet\")\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>{onEdit? \"Update Pet\" : \"Create Pet\"}</h2>\r\n            <div className=\"create_product\">\r\n                <Row gutter={[48, 16]}>\r\n                    <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                    <div className=\"upload\">\r\n                        <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\r\n                        {\r\n                            loading ? <div id=\"file_load\"><Loading /></div>\r\n\r\n                            :<div id=\"file_img\" style={styleUpload}>\r\n                                <img src={images ? images.url : ''} alt=\"\"/>\r\n                                <span className=\"cancel\" onClick={handleDestroy}>X</span>\r\n                            </div>\r\n                        }\r\n                        \r\n                    </div>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                        <form className='card' onSubmit={handleSubmit}>\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"pet_code\">Pet Code</label>\r\n                                <input class=\"group-control\" type=\"text\" name=\"pet_code\" id=\"pet_code\" required\r\n                                value={pet.pet_code} onChange={handleChangeInput} />\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input class=\"group-control\" type=\"text\" name=\"name\" id=\"name\" required\r\n                                value={pet.name} onChange={handleChangeInput} />\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"color\">Color</label>\r\n                                <input class=\"group-control\" type=\"text\" name=\"color\" id=\"color\" required\r\n                                value={pet.color} onChange={handleChangeInput} />\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"weight\">Weight</label>\r\n                                <input class=\"group-control\" type=\"number\" name=\"weight\" id=\"weight\" required\r\n                                value={pet.weight} onChange={handleChangeInput} />\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"sex\">Sex</label>\r\n                                <input class=\"group-control\" type=\"text\" name=\"sex\" id=\"sex\" required\r\n                                value={pet.sex} onChange={handleChangeInput} />\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"vaccination\">Vaccination</label>\r\n                                <input class=\"group-control\" type=\"text\" name=\"vaccination\" id=\"vaccination\" required\r\n                                value={pet.vaccination} onChange={handleChangeInput} />\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"moreinfor\">More Information</label>\r\n                                <textarea class=\"group-control\" type=\"text\" name=\"moreinfor\" id=\"moreinfor\" required\r\n                                value={pet.moreinfor} rows=\"7\" onChange={handleChangeInput} />\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"type\">Types: </label>\r\n                                <select class=\"group-control\" name=\"type\" value={pet.type} onChange={handleChangeInput} >\r\n                                    <option value=\"\">Please select a type</option>\r\n                                    {\r\n                                        types.map(type => (\r\n                                            <option value={type._id} key={type._id}>\r\n                                                {type.name}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"status\">Status: </label>\r\n                                <select class=\"group-control\" name=\"status\" value={pet.status} onChange={handleChangeInput} >\r\n                                    <option value=\"\">Please select a status</option>\r\n                                    {\r\n                                        statuses.map(status => (\r\n                                            <option value={status._id} key={status._id}>\r\n                                                {status.name}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n                            <button className=\"btn-form\" type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreatePet;"]},"metadata":{},"sourceType":"module"}